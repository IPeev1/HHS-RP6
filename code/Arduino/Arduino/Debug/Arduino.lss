
Arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000003e  00800200  0000169e  00001732  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000169e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          0000015f  0080023e  0080023e  00001770  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001770  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000017a0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000158  00000000  00000000  000017e0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d72  00000000  00000000  00001938  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011c5  00000000  00000000  000036aa  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000de9  00000000  00000000  0000486f  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004f4  00000000  00000000  00005658  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a53  00000000  00000000  00005b4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000fca  00000000  00000000  0000659f  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000158  00000000  00000000  00007569  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
       2:	00 00       	nop
       4:	d0 c0       	rjmp	.+416    	; 0x1a6 <__bad_interrupt>
       6:	00 00       	nop
       8:	ce c0       	rjmp	.+412    	; 0x1a6 <__bad_interrupt>
       a:	00 00       	nop
       c:	cc c0       	rjmp	.+408    	; 0x1a6 <__bad_interrupt>
       e:	00 00       	nop
      10:	ca c0       	rjmp	.+404    	; 0x1a6 <__bad_interrupt>
      12:	00 00       	nop
      14:	c8 c0       	rjmp	.+400    	; 0x1a6 <__bad_interrupt>
      16:	00 00       	nop
      18:	c6 c0       	rjmp	.+396    	; 0x1a6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c4 c0       	rjmp	.+392    	; 0x1a6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c2 c0       	rjmp	.+388    	; 0x1a6 <__bad_interrupt>
      22:	00 00       	nop
      24:	c0 c0       	rjmp	.+384    	; 0x1a6 <__bad_interrupt>
      26:	00 00       	nop
      28:	be c0       	rjmp	.+380    	; 0x1a6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	bc c0       	rjmp	.+376    	; 0x1a6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ba c0       	rjmp	.+372    	; 0x1a6 <__bad_interrupt>
      32:	00 00       	nop
      34:	b8 c0       	rjmp	.+368    	; 0x1a6 <__bad_interrupt>
      36:	00 00       	nop
      38:	b6 c0       	rjmp	.+364    	; 0x1a6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	a8 c5       	rjmp	.+2896   	; 0xb8e <__vector_15>
      3e:	00 00       	nop
      40:	b2 c0       	rjmp	.+356    	; 0x1a6 <__bad_interrupt>
      42:	00 00       	nop
      44:	b0 c0       	rjmp	.+352    	; 0x1a6 <__bad_interrupt>
      46:	00 00       	nop
      48:	ae c0       	rjmp	.+348    	; 0x1a6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ac c0       	rjmp	.+344    	; 0x1a6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	aa c0       	rjmp	.+340    	; 0x1a6 <__bad_interrupt>
      52:	00 00       	nop
      54:	a8 c0       	rjmp	.+336    	; 0x1a6 <__bad_interrupt>
      56:	00 00       	nop
      58:	a6 c0       	rjmp	.+332    	; 0x1a6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a4 c0       	rjmp	.+328    	; 0x1a6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a2 c0       	rjmp	.+324    	; 0x1a6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b7 c0       	rjmp	.+366    	; 0x1d4 <__vector_25>
      66:	00 00       	nop
      68:	9e c0       	rjmp	.+316    	; 0x1a6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9c c0       	rjmp	.+312    	; 0x1a6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	9a c0       	rjmp	.+308    	; 0x1a6 <__bad_interrupt>
      72:	00 00       	nop
      74:	98 c0       	rjmp	.+304    	; 0x1a6 <__bad_interrupt>
      76:	00 00       	nop
      78:	96 c0       	rjmp	.+300    	; 0x1a6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	94 c0       	rjmp	.+296    	; 0x1a6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	92 c0       	rjmp	.+292    	; 0x1a6 <__bad_interrupt>
      82:	00 00       	nop
      84:	90 c0       	rjmp	.+288    	; 0x1a6 <__bad_interrupt>
      86:	00 00       	nop
      88:	8e c0       	rjmp	.+284    	; 0x1a6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c4 c1       	rjmp	.+904    	; 0x416 <__vector_35>
      8e:	00 00       	nop
      90:	8a c0       	rjmp	.+276    	; 0x1a6 <__bad_interrupt>
      92:	00 00       	nop
      94:	88 c0       	rjmp	.+272    	; 0x1a6 <__bad_interrupt>
      96:	00 00       	nop
      98:	86 c0       	rjmp	.+268    	; 0x1a6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	80 c3       	rjmp	.+1792   	; 0x79e <__vector_39>
      9e:	00 00       	nop
      a0:	82 c0       	rjmp	.+260    	; 0x1a6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	80 c0       	rjmp	.+256    	; 0x1a6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	7e c0       	rjmp	.+252    	; 0x1a6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	7c c0       	rjmp	.+248    	; 0x1a6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	7a c0       	rjmp	.+244    	; 0x1a6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	78 c0       	rjmp	.+240    	; 0x1a6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	76 c0       	rjmp	.+236    	; 0x1a6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	74 c0       	rjmp	.+232    	; 0x1a6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	72 c0       	rjmp	.+228    	; 0x1a6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	70 c0       	rjmp	.+224    	; 0x1a6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	6e c0       	rjmp	.+220    	; 0x1a6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	6c c0       	rjmp	.+216    	; 0x1a6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	6a c0       	rjmp	.+212    	; 0x1a6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	68 c0       	rjmp	.+208    	; 0x1a6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	66 c0       	rjmp	.+204    	; 0x1a6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	64 c0       	rjmp	.+200    	; 0x1a6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	62 c0       	rjmp	.+196    	; 0x1a6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	07 63       	ori	r16, 0x37	; 55
      e6:	42 36       	cpi	r20, 0x62	; 98
      e8:	b7 9b       	sbis	0x16, 7	; 22
      ea:	d8 a7       	std	Y+40, r29	; 0x28
      ec:	1a 39       	cpi	r17, 0x9A	; 154
      ee:	68 56       	subi	r22, 0x68	; 104
      f0:	18 ae       	std	Y+56, r1	; 0x38
      f2:	ba ab       	std	Y+50, r27	; 0x32
      f4:	55 8c       	ldd	r5, Z+29	; 0x1d
      f6:	1d 3c       	cpi	r17, 0xCD	; 205
      f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
      fa:	57 63       	ori	r21, 0x37	; 55
      fc:	bd 6d       	ori	r27, 0xDD	; 221
      fe:	ed fd       	.word	0xfded	; ????
     100:	75 3e       	cpi	r23, 0xE5	; 229
     102:	f6 17       	cp	r31, r22
     104:	72 31       	cpi	r23, 0x12	; 18
     106:	bf 00       	.word	0x00bf	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 00       	nop
     110:	be 92       	st	-X, r11
     112:	24 49       	sbci	r18, 0x94	; 148
     114:	12 3e       	cpi	r17, 0xE2	; 226
     116:	ab aa       	std	Y+51, r10	; 0x33
     118:	aa 2a       	or	r10, r26
     11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
     11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
     11e:	4c 3e       	cpi	r20, 0xEC	; 236
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	be ab       	std	Y+54, r27	; 0x36
     126:	aa aa       	std	Y+50, r10	; 0x32
     128:	aa 3e       	cpi	r26, 0xEA	; 234
     12a:	00 00       	nop
     12c:	00 00       	nop
     12e:	bf 00       	.word	0x00bf	; ????
     130:	00 00       	nop
     132:	80 3f       	cpi	r24, 0xF0	; 240
     134:	00 00       	nop
     136:	00 00       	nop
     138:	00 08       	sbc	r0, r0
     13a:	41 78       	andi	r20, 0x81	; 129
     13c:	d3 bb       	out	0x13, r29	; 19
     13e:	43 87       	std	Z+11, r20	; 0x0b
     140:	d1 13       	cpse	r29, r17
     142:	3d 19       	sub	r19, r13
     144:	0e 3c       	cpi	r16, 0xCE	; 206
     146:	c3 bd       	out	0x23, r28	; 35
     148:	42 82       	std	Z+2, r4	; 0x02
     14a:	ad 2b       	or	r26, r29
     14c:	3e 68       	ori	r19, 0x8E	; 142
     14e:	ec 82       	std	Y+4, r14	; 0x04
     150:	76 be       	out	0x36, r7	; 54
     152:	d9 8f       	std	Y+25, r29	; 0x19
     154:	e1 a9       	ldd	r30, Z+49	; 0x31
     156:	3e 4c       	sbci	r19, 0xCE	; 206
     158:	80 ef       	ldi	r24, 0xF0	; 240
     15a:	ff be       	out	0x3f, r15	; 63
     15c:	01 c4       	rjmp	.+2050   	; 0x960 <checkCode+0x28>
     15e:	ff 7f       	andi	r31, 0xFF	; 255
     160:	3f 00       	.word	0x003f	; ????
     162:	00 00       	nop
	...

00000166 <__ctors_end>:
     166:	11 24       	eor	r1, r1
     168:	1f be       	out	0x3f, r1	; 63
     16a:	cf ef       	ldi	r28, 0xFF	; 255
     16c:	d1 e2       	ldi	r29, 0x21	; 33
     16e:	de bf       	out	0x3e, r29	; 62
     170:	cd bf       	out	0x3d, r28	; 61
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	0c bf       	out	0x3c, r16	; 60

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b2 e0       	ldi	r27, 0x02	; 2
     17c:	ee e9       	ldi	r30, 0x9E	; 158
     17e:	f6 e1       	ldi	r31, 0x16	; 22
     180:	00 e0       	ldi	r16, 0x00	; 0
     182:	0b bf       	out	0x3b, r16	; 59
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x14>
     186:	07 90       	elpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	ae 33       	cpi	r26, 0x3E	; 62
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0x10>

00000190 <__do_clear_bss>:
     190:	23 e0       	ldi	r18, 0x03	; 3
     192:	ae e3       	ldi	r26, 0x3E	; 62
     194:	b2 e0       	ldi	r27, 0x02	; 2
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	ad 39       	cpi	r26, 0x9D	; 157
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	15 d2       	rcall	.+1066   	; 0x5cc <main>
     1a2:	0c 94 4d 0b 	jmp	0x169a	; 0x169a <_exit>

000001a6 <__bad_interrupt>:
     1a6:	2c cf       	rjmp	.-424    	; 0x0 <__vectors>

000001a8 <init_USART>:
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
}
     1a8:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
     1ac:	e1 ec       	ldi	r30, 0xC1	; 193
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	80 81       	ld	r24, Z
     1b2:	80 69       	ori	r24, 0x90	; 144
     1b4:	80 83       	st	Z, r24
     1b6:	80 81       	ld	r24, Z
     1b8:	88 60       	ori	r24, 0x08	; 8
     1ba:	80 83       	st	Z, r24
     1bc:	e2 ec       	ldi	r30, 0xC2	; 194
     1be:	f0 e0       	ldi	r31, 0x00	; 0
     1c0:	80 81       	ld	r24, Z
     1c2:	86 60       	ori	r24, 0x06	; 6
     1c4:	80 83       	st	Z, r24
     1c6:	80 e1       	ldi	r24, 0x10	; 16
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     1ce:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     1d2:	08 95       	ret

000001d4 <__vector_25>:
     1d4:	1f 92       	push	r1
     1d6:	0f 92       	push	r0
     1d8:	0f b6       	in	r0, 0x3f	; 63
     1da:	0f 92       	push	r0
     1dc:	11 24       	eor	r1, r1
     1de:	0b b6       	in	r0, 0x3b	; 59
     1e0:	0f 92       	push	r0
     1e2:	df 92       	push	r13
     1e4:	ef 92       	push	r14
     1e6:	ff 92       	push	r15
     1e8:	0f 93       	push	r16
     1ea:	1f 93       	push	r17
     1ec:	2f 93       	push	r18
     1ee:	3f 93       	push	r19
     1f0:	4f 93       	push	r20
     1f2:	5f 93       	push	r21
     1f4:	6f 93       	push	r22
     1f6:	7f 93       	push	r23
     1f8:	8f 93       	push	r24
     1fa:	9f 93       	push	r25
     1fc:	af 93       	push	r26
     1fe:	bf 93       	push	r27
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	ef 93       	push	r30
     206:	ff 93       	push	r31
     208:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     20c:	90 ed       	ldi	r25, 0xD0	; 208
     20e:	98 0f       	add	r25, r24
     210:	9a 30       	cpi	r25, 0x0A	; 10
     212:	c0 f4       	brcc	.+48     	; 0x244 <__vector_25+0x70>
     214:	90 91 41 03 	lds	r25, 0x0341	; 0x800341 <command.1978>
     218:	94 37       	cpi	r25, 0x74	; 116
     21a:	09 f0       	breq	.+2      	; 0x21e <__vector_25+0x4a>
     21c:	c3 c0       	rjmp	.+390    	; 0x3a4 <__vector_25+0x1d0>
     21e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     222:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     226:	2f 3f       	cpi	r18, 0xFF	; 255
     228:	31 05       	cpc	r19, r1
     22a:	0c f0       	brlt	.+2      	; 0x22e <__vector_25+0x5a>
     22c:	bb c0       	rjmp	.+374    	; 0x3a4 <__vector_25+0x1d0>
     22e:	2f 5f       	subi	r18, 0xFF	; 255
     230:	3f 4f       	sbci	r19, 0xFF	; 255
     232:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <__data_start+0x1>
     236:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <__data_start>
     23a:	f9 01       	movw	r30, r18
     23c:	ee 5b       	subi	r30, 0xBE	; 190
     23e:	fd 4f       	sbci	r31, 0xFD	; 253
     240:	80 83       	st	Z, r24
     242:	b0 c0       	rjmp	.+352    	; 0x3a4 <__vector_25+0x1d0>
     244:	9f e9       	ldi	r25, 0x9F	; 159
     246:	98 0f       	add	r25, r24
     248:	9a 31       	cpi	r25, 0x1A	; 26
     24a:	a0 f4       	brcc	.+40     	; 0x274 <__vector_25+0xa0>
     24c:	81 37       	cpi	r24, 0x71	; 113
     24e:	79 f0       	breq	.+30     	; 0x26e <__vector_25+0x9a>
     250:	30 f4       	brcc	.+12     	; 0x25e <__vector_25+0x8a>
     252:	81 36       	cpi	r24, 0x61	; 97
     254:	61 f0       	breq	.+24     	; 0x26e <__vector_25+0x9a>
     256:	84 36       	cpi	r24, 0x64	; 100
     258:	09 f0       	breq	.+2      	; 0x25c <__vector_25+0x88>
     25a:	a4 c0       	rjmp	.+328    	; 0x3a4 <__vector_25+0x1d0>
     25c:	08 c0       	rjmp	.+16     	; 0x26e <__vector_25+0x9a>
     25e:	83 37       	cpi	r24, 0x73	; 115
     260:	08 f4       	brcc	.+2      	; 0x264 <__vector_25+0x90>
     262:	a0 c0       	rjmp	.+320    	; 0x3a4 <__vector_25+0x1d0>
     264:	85 37       	cpi	r24, 0x75	; 117
     266:	18 f0       	brcs	.+6      	; 0x26e <__vector_25+0x9a>
     268:	87 37       	cpi	r24, 0x77	; 119
     26a:	09 f0       	breq	.+2      	; 0x26e <__vector_25+0x9a>
     26c:	9b c0       	rjmp	.+310    	; 0x3a4 <__vector_25+0x1d0>
     26e:	80 93 41 03 	sts	0x0341, r24	; 0x800341 <command.1978>
     272:	98 c0       	rjmp	.+304    	; 0x3a4 <__vector_25+0x1d0>
     274:	8d 30       	cpi	r24, 0x0D	; 13
     276:	09 f0       	breq	.+2      	; 0x27a <__vector_25+0xa6>
     278:	95 c0       	rjmp	.+298    	; 0x3a4 <__vector_25+0x1d0>
     27a:	80 91 41 03 	lds	r24, 0x0341	; 0x800341 <command.1978>
     27e:	84 37       	cpi	r24, 0x74	; 116
     280:	b1 f5       	brne	.+108    	; 0x2ee <__vector_25+0x11a>
     282:	00 91 00 02 	lds	r16, 0x0200	; 0x800200 <__data_start>
     286:	10 91 01 02 	lds	r17, 0x0201	; 0x800201 <__data_start+0x1>
     28a:	11 23       	and	r17, r17
     28c:	0c f4       	brge	.+2      	; 0x290 <__vector_25+0xbc>
     28e:	7c c0       	rjmp	.+248    	; 0x388 <__vector_25+0x1b4>
     290:	c0 e0       	ldi	r28, 0x00	; 0
     292:	d0 e0       	ldi	r29, 0x00	; 0
     294:	d1 2c       	mov	r13, r1
     296:	e1 2c       	mov	r14, r1
     298:	f1 2c       	mov	r15, r1
     29a:	b8 01       	movw	r22, r16
     29c:	6c 1b       	sub	r22, r28
     29e:	7d 0b       	sbc	r23, r29
     2a0:	07 2e       	mov	r0, r23
     2a2:	00 0c       	add	r0, r0
     2a4:	88 0b       	sbc	r24, r24
     2a6:	99 0b       	sbc	r25, r25
     2a8:	12 d6       	rcall	.+3108   	; 0xece <__floatsisf>
     2aa:	9b 01       	movw	r18, r22
     2ac:	ac 01       	movw	r20, r24
     2ae:	60 e0       	ldi	r22, 0x00	; 0
     2b0:	70 e0       	ldi	r23, 0x00	; 0
     2b2:	80 e2       	ldi	r24, 0x20	; 32
     2b4:	91 e4       	ldi	r25, 0x41	; 65
     2b6:	97 d6       	rcall	.+3374   	; 0xfe6 <pow>
     2b8:	ce 5b       	subi	r28, 0xBE	; 190
     2ba:	dd 4f       	sbci	r29, 0xFD	; 253
     2bc:	c8 81       	ld	r28, Y
     2be:	c0 53       	subi	r28, 0x30	; 48
     2c0:	d0 e0       	ldi	r29, 0x00	; 0
     2c2:	20 e0       	ldi	r18, 0x00	; 0
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	40 e0       	ldi	r20, 0x00	; 0
     2c8:	5f e3       	ldi	r21, 0x3F	; 63
     2ca:	6a d5       	rcall	.+2772   	; 0xda0 <__addsf3>
     2cc:	cd d5       	rcall	.+2970   	; 0xe68 <__fixsfsi>
     2ce:	c6 9f       	mul	r28, r22
     2d0:	90 01       	movw	r18, r0
     2d2:	c7 9f       	mul	r28, r23
     2d4:	30 0d       	add	r19, r0
     2d6:	d6 9f       	mul	r29, r22
     2d8:	30 0d       	add	r19, r0
     2da:	11 24       	eor	r1, r1
     2dc:	e2 0e       	add	r14, r18
     2de:	f3 1e       	adc	r15, r19
     2e0:	d3 94       	inc	r13
     2e2:	cd 2d       	mov	r28, r13
     2e4:	d0 e0       	ldi	r29, 0x00	; 0
     2e6:	0c 17       	cp	r16, r28
     2e8:	1d 07       	cpc	r17, r29
     2ea:	bc f6       	brge	.-82     	; 0x29a <__vector_25+0xc6>
     2ec:	48 c0       	rjmp	.+144    	; 0x37e <__vector_25+0x1aa>
     2ee:	88 23       	and	r24, r24
     2f0:	09 f4       	brne	.+2      	; 0x2f4 <__vector_25+0x120>
     2f2:	58 c0       	rjmp	.+176    	; 0x3a4 <__vector_25+0x1d0>
     2f4:	81 37       	cpi	r24, 0x71	; 113
     2f6:	d1 f1       	breq	.+116    	; 0x36c <__vector_25+0x198>
     2f8:	28 f4       	brcc	.+10     	; 0x304 <__vector_25+0x130>
     2fa:	81 36       	cpi	r24, 0x61	; 97
     2fc:	b1 f0       	breq	.+44     	; 0x32a <__vector_25+0x156>
     2fe:	84 36       	cpi	r24, 0x64	; 100
     300:	51 f1       	breq	.+84     	; 0x356 <__vector_25+0x182>
     302:	48 c0       	rjmp	.+144    	; 0x394 <__vector_25+0x1c0>
     304:	84 37       	cpi	r24, 0x74	; 116
     306:	c9 f1       	breq	.+114    	; 0x37a <__vector_25+0x1a6>
     308:	87 37       	cpi	r24, 0x77	; 119
     30a:	21 f0       	breq	.+8      	; 0x314 <__vector_25+0x140>
     30c:	83 37       	cpi	r24, 0x73	; 115
     30e:	09 f0       	breq	.+2      	; 0x312 <__vector_25+0x13e>
     310:	41 c0       	rjmp	.+130    	; 0x394 <__vector_25+0x1c0>
     312:	16 c0       	rjmp	.+44     	; 0x340 <__vector_25+0x16c>
     314:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <rp6Data+0x2>
     318:	81 30       	cpi	r24, 0x01	; 1
     31a:	19 f4       	brne	.+6      	; 0x322 <__vector_25+0x14e>
     31c:	10 92 88 03 	sts	0x0388, r1	; 0x800388 <rp6Data+0x2>
     320:	39 c0       	rjmp	.+114    	; 0x394 <__vector_25+0x1c0>
     322:	81 e0       	ldi	r24, 0x01	; 1
     324:	80 93 88 03 	sts	0x0388, r24	; 0x800388 <rp6Data+0x2>
     328:	35 c0       	rjmp	.+106    	; 0x394 <__vector_25+0x1c0>
     32a:	80 91 89 03 	lds	r24, 0x0389	; 0x800389 <rp6Data+0x3>
     32e:	8f 3f       	cpi	r24, 0xFF	; 255
     330:	19 f4       	brne	.+6      	; 0x338 <__vector_25+0x164>
     332:	10 92 89 03 	sts	0x0389, r1	; 0x800389 <rp6Data+0x3>
     336:	2e c0       	rjmp	.+92     	; 0x394 <__vector_25+0x1c0>
     338:	8f ef       	ldi	r24, 0xFF	; 255
     33a:	80 93 89 03 	sts	0x0389, r24	; 0x800389 <rp6Data+0x3>
     33e:	2a c0       	rjmp	.+84     	; 0x394 <__vector_25+0x1c0>
     340:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <rp6Data+0x2>
     344:	8f 3f       	cpi	r24, 0xFF	; 255
     346:	19 f4       	brne	.+6      	; 0x34e <__vector_25+0x17a>
     348:	10 92 88 03 	sts	0x0388, r1	; 0x800388 <rp6Data+0x2>
     34c:	23 c0       	rjmp	.+70     	; 0x394 <__vector_25+0x1c0>
     34e:	8f ef       	ldi	r24, 0xFF	; 255
     350:	80 93 88 03 	sts	0x0388, r24	; 0x800388 <rp6Data+0x2>
     354:	1f c0       	rjmp	.+62     	; 0x394 <__vector_25+0x1c0>
     356:	80 91 89 03 	lds	r24, 0x0389	; 0x800389 <rp6Data+0x3>
     35a:	81 30       	cpi	r24, 0x01	; 1
     35c:	19 f4       	brne	.+6      	; 0x364 <__vector_25+0x190>
     35e:	10 92 89 03 	sts	0x0389, r1	; 0x800389 <rp6Data+0x3>
     362:	18 c0       	rjmp	.+48     	; 0x394 <__vector_25+0x1c0>
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	80 93 89 03 	sts	0x0389, r24	; 0x800389 <rp6Data+0x3>
     36a:	14 c0       	rjmp	.+40     	; 0x394 <__vector_25+0x1c0>
     36c:	e6 e8       	ldi	r30, 0x86	; 134
     36e:	f3 e0       	ldi	r31, 0x03	; 3
     370:	11 82       	std	Z+1, r1	; 0x01
     372:	10 82       	st	Z, r1
     374:	13 82       	std	Z+3, r1	; 0x03
     376:	12 82       	std	Z+2, r1	; 0x02
     378:	0d c0       	rjmp	.+26     	; 0x394 <__vector_25+0x1c0>
     37a:	e1 2c       	mov	r14, r1
     37c:	f1 2c       	mov	r15, r1
     37e:	85 e6       	ldi	r24, 0x65	; 101
     380:	e8 16       	cp	r14, r24
     382:	f1 04       	cpc	r15, r1
     384:	38 f4       	brcc	.+14     	; 0x394 <__vector_25+0x1c0>
     386:	02 c0       	rjmp	.+4      	; 0x38c <__vector_25+0x1b8>
     388:	e1 2c       	mov	r14, r1
     38a:	f1 2c       	mov	r15, r1
     38c:	f0 92 87 03 	sts	0x0387, r15	; 0x800387 <rp6Data+0x1>
     390:	e0 92 86 03 	sts	0x0386, r14	; 0x800386 <rp6Data>
     394:	10 92 41 03 	sts	0x0341, r1	; 0x800341 <command.1978>
     398:	8f ef       	ldi	r24, 0xFF	; 255
     39a:	9f ef       	ldi	r25, 0xFF	; 255
     39c:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__data_start+0x1>
     3a0:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
     3a4:	ff 91       	pop	r31
     3a6:	ef 91       	pop	r30
     3a8:	df 91       	pop	r29
     3aa:	cf 91       	pop	r28
     3ac:	bf 91       	pop	r27
     3ae:	af 91       	pop	r26
     3b0:	9f 91       	pop	r25
     3b2:	8f 91       	pop	r24
     3b4:	7f 91       	pop	r23
     3b6:	6f 91       	pop	r22
     3b8:	5f 91       	pop	r21
     3ba:	4f 91       	pop	r20
     3bc:	3f 91       	pop	r19
     3be:	2f 91       	pop	r18
     3c0:	1f 91       	pop	r17
     3c2:	0f 91       	pop	r16
     3c4:	ff 90       	pop	r15
     3c6:	ef 90       	pop	r14
     3c8:	df 90       	pop	r13
     3ca:	0f 90       	pop	r0
     3cc:	0b be       	out	0x3b, r0	; 59
     3ce:	0f 90       	pop	r0
     3d0:	0f be       	out	0x3f, r0	; 63
     3d2:	0f 90       	pop	r0
     3d4:	1f 90       	pop	r1
     3d6:	18 95       	reti

000003d8 <init_micros>:
     3d8:	e1 e9       	ldi	r30, 0x91	; 145
     3da:	f0 e0       	ldi	r31, 0x00	; 0
     3dc:	80 81       	ld	r24, Z
     3de:	81 60       	ori	r24, 0x01	; 1
     3e0:	80 83       	st	Z, r24
     3e2:	e1 e7       	ldi	r30, 0x71	; 113
     3e4:	f0 e0       	ldi	r31, 0x00	; 0
     3e6:	80 81       	ld	r24, Z
     3e8:	81 60       	ori	r24, 0x01	; 1
     3ea:	80 83       	st	Z, r24
     3ec:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     3f0:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     3f4:	10 92 60 03 	sts	0x0360, r1	; 0x800360 <t3TotalOverflow>
     3f8:	10 92 61 03 	sts	0x0361, r1	; 0x800361 <t3TotalOverflow+0x1>
     3fc:	10 92 62 03 	sts	0x0362, r1	; 0x800362 <t3TotalOverflow+0x2>
     400:	10 92 63 03 	sts	0x0363, r1	; 0x800363 <t3TotalOverflow+0x3>
     404:	10 92 64 03 	sts	0x0364, r1	; 0x800364 <t3TotalOverflow+0x4>
     408:	10 92 65 03 	sts	0x0365, r1	; 0x800365 <t3TotalOverflow+0x5>
     40c:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <t3TotalOverflow+0x6>
     410:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <t3TotalOverflow+0x7>
     414:	08 95       	ret

00000416 <__vector_35>:
     416:	1f 92       	push	r1
     418:	0f 92       	push	r0
     41a:	0f b6       	in	r0, 0x3f	; 63
     41c:	0f 92       	push	r0
     41e:	11 24       	eor	r1, r1
     420:	2f 93       	push	r18
     422:	3f 93       	push	r19
     424:	4f 93       	push	r20
     426:	5f 93       	push	r21
     428:	6f 93       	push	r22
     42a:	7f 93       	push	r23
     42c:	8f 93       	push	r24
     42e:	9f 93       	push	r25
     430:	af 93       	push	r26
     432:	20 91 60 03 	lds	r18, 0x0360	; 0x800360 <t3TotalOverflow>
     436:	30 91 61 03 	lds	r19, 0x0361	; 0x800361 <t3TotalOverflow+0x1>
     43a:	40 91 62 03 	lds	r20, 0x0362	; 0x800362 <t3TotalOverflow+0x2>
     43e:	50 91 63 03 	lds	r21, 0x0363	; 0x800363 <t3TotalOverflow+0x3>
     442:	60 91 64 03 	lds	r22, 0x0364	; 0x800364 <t3TotalOverflow+0x4>
     446:	70 91 65 03 	lds	r23, 0x0365	; 0x800365 <t3TotalOverflow+0x5>
     44a:	80 91 66 03 	lds	r24, 0x0366	; 0x800366 <t3TotalOverflow+0x6>
     44e:	90 91 67 03 	lds	r25, 0x0367	; 0x800367 <t3TotalOverflow+0x7>
     452:	a1 e0       	ldi	r26, 0x01	; 1
     454:	0e 94 ed 0a 	call	0x15da	; 0x15da <__adddi3_s8>
     458:	20 93 60 03 	sts	0x0360, r18	; 0x800360 <t3TotalOverflow>
     45c:	30 93 61 03 	sts	0x0361, r19	; 0x800361 <t3TotalOverflow+0x1>
     460:	40 93 62 03 	sts	0x0362, r20	; 0x800362 <t3TotalOverflow+0x2>
     464:	50 93 63 03 	sts	0x0363, r21	; 0x800363 <t3TotalOverflow+0x3>
     468:	60 93 64 03 	sts	0x0364, r22	; 0x800364 <t3TotalOverflow+0x4>
     46c:	70 93 65 03 	sts	0x0365, r23	; 0x800365 <t3TotalOverflow+0x5>
     470:	80 93 66 03 	sts	0x0366, r24	; 0x800366 <t3TotalOverflow+0x6>
     474:	90 93 67 03 	sts	0x0367, r25	; 0x800367 <t3TotalOverflow+0x7>
     478:	af 91       	pop	r26
     47a:	9f 91       	pop	r25
     47c:	8f 91       	pop	r24
     47e:	7f 91       	pop	r23
     480:	6f 91       	pop	r22
     482:	5f 91       	pop	r21
     484:	4f 91       	pop	r20
     486:	3f 91       	pop	r19
     488:	2f 91       	pop	r18
     48a:	0f 90       	pop	r0
     48c:	0f be       	out	0x3f, r0	; 63
     48e:	0f 90       	pop	r0
     490:	1f 90       	pop	r1
     492:	18 95       	reti

00000494 <micros>:
     494:	4f 92       	push	r4
     496:	5f 92       	push	r5
     498:	6f 92       	push	r6
     49a:	7f 92       	push	r7
     49c:	8f 92       	push	r8
     49e:	9f 92       	push	r9
     4a0:	af 92       	push	r10
     4a2:	bf 92       	push	r11
     4a4:	cf 92       	push	r12
     4a6:	df 92       	push	r13
     4a8:	ef 92       	push	r14
     4aa:	ff 92       	push	r15
     4ac:	0f 93       	push	r16
     4ae:	1f 93       	push	r17
     4b0:	80 90 94 00 	lds	r8, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     4b4:	90 90 95 00 	lds	r9, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     4b8:	20 91 60 03 	lds	r18, 0x0360	; 0x800360 <t3TotalOverflow>
     4bc:	30 91 61 03 	lds	r19, 0x0361	; 0x800361 <t3TotalOverflow+0x1>
     4c0:	40 91 62 03 	lds	r20, 0x0362	; 0x800362 <t3TotalOverflow+0x2>
     4c4:	50 91 63 03 	lds	r21, 0x0363	; 0x800363 <t3TotalOverflow+0x3>
     4c8:	60 91 64 03 	lds	r22, 0x0364	; 0x800364 <t3TotalOverflow+0x4>
     4cc:	70 91 65 03 	lds	r23, 0x0365	; 0x800365 <t3TotalOverflow+0x5>
     4d0:	80 91 66 03 	lds	r24, 0x0366	; 0x800366 <t3TotalOverflow+0x6>
     4d4:	90 91 67 03 	lds	r25, 0x0367	; 0x800367 <t3TotalOverflow+0x7>
     4d8:	98 2c       	mov	r9, r8
     4da:	88 24       	eor	r8, r8
     4dc:	99 0c       	add	r9, r9
     4de:	99 0c       	add	r9, r9
     4e0:	99 0c       	add	r9, r9
     4e2:	99 0c       	add	r9, r9
     4e4:	09 2c       	mov	r0, r9
     4e6:	00 0c       	add	r0, r0
     4e8:	aa 08       	sbc	r10, r10
     4ea:	bb 08       	sbc	r11, r11
     4ec:	bb 20       	and	r11, r11
     4ee:	2c f4       	brge	.+10     	; 0x4fa <micros+0x66>
     4f0:	ef ef       	ldi	r30, 0xFF	; 255
     4f2:	8e 0e       	add	r8, r30
     4f4:	9e 1e       	adc	r9, r30
     4f6:	a1 1c       	adc	r10, r1
     4f8:	b1 1c       	adc	r11, r1
     4fa:	25 01       	movw	r4, r10
     4fc:	77 24       	eor	r7, r7
     4fe:	57 fc       	sbrc	r5, 7
     500:	70 94       	com	r7
     502:	67 2c       	mov	r6, r7
     504:	bb 0c       	add	r11, r11
     506:	88 08       	sbc	r8, r8
     508:	98 2c       	mov	r9, r8
     50a:	54 01       	movw	r10, r8
     50c:	0c e0       	ldi	r16, 0x0C	; 12
     50e:	0e 94 ad 0a 	call	0x155a	; 0x155a <__ashldi3>
     512:	f2 2f       	mov	r31, r18
     514:	e3 2f       	mov	r30, r19
     516:	c4 2e       	mov	r12, r20
     518:	d5 2e       	mov	r13, r21
     51a:	e6 2e       	mov	r14, r22
     51c:	f7 2e       	mov	r15, r23
     51e:	08 2f       	mov	r16, r24
     520:	19 2f       	mov	r17, r25
     522:	24 2d       	mov	r18, r4
     524:	35 2d       	mov	r19, r5
     526:	46 2d       	mov	r20, r6
     528:	57 2d       	mov	r21, r7
     52a:	68 2d       	mov	r22, r8
     52c:	78 2d       	mov	r23, r8
     52e:	88 2d       	mov	r24, r8
     530:	98 2d       	mov	r25, r8
     532:	af 2e       	mov	r10, r31
     534:	be 2e       	mov	r11, r30
     536:	0e 94 e4 0a 	call	0x15c8	; 0x15c8 <__adddi3>
     53a:	1f 91       	pop	r17
     53c:	0f 91       	pop	r16
     53e:	ff 90       	pop	r15
     540:	ef 90       	pop	r14
     542:	df 90       	pop	r13
     544:	cf 90       	pop	r12
     546:	bf 90       	pop	r11
     548:	af 90       	pop	r10
     54a:	9f 90       	pop	r9
     54c:	8f 90       	pop	r8
     54e:	7f 90       	pop	r7
     550:	6f 90       	pop	r6
     552:	5f 90       	pop	r5
     554:	4f 90       	pop	r4
     556:	08 95       	ret

00000558 <init_TWI>:
     558:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     55c:	88 e4       	ldi	r24, 0x48	; 72
     55e:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     562:	85 e0       	ldi	r24, 0x05	; 5
     564:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     568:	08 95       	ret

0000056a <init_TWI_Timer2>:
     56a:	e1 eb       	ldi	r30, 0xB1	; 177
     56c:	f0 e0       	ldi	r31, 0x00	; 0
     56e:	80 81       	ld	r24, Z
     570:	87 60       	ori	r24, 0x07	; 7
     572:	80 83       	st	Z, r24
     574:	e0 e7       	ldi	r30, 0x70	; 112
     576:	f0 e0       	ldi	r31, 0x00	; 0
     578:	80 81       	ld	r24, Z
     57a:	81 60       	ori	r24, 0x01	; 1
     57c:	80 83       	st	Z, r24
     57e:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7000b2>
     582:	08 95       	ret

00000584 <init_arduinoData>:
     584:	e8 e6       	ldi	r30, 0x68	; 104
     586:	f3 e0       	ldi	r31, 0x03	; 3
     588:	11 82       	std	Z+1, r1	; 0x01
     58a:	10 82       	st	Z, r1
     58c:	13 82       	std	Z+3, r1	; 0x03
     58e:	12 82       	std	Z+2, r1	; 0x02
     590:	08 95       	ret

00000592 <init_rp6Data>:
     592:	e6 e8       	ldi	r30, 0x86	; 134
     594:	f3 e0       	ldi	r31, 0x03	; 3
     596:	11 82       	std	Z+1, r1	; 0x01
     598:	10 82       	st	Z, r1
     59a:	12 82       	std	Z+2, r1	; 0x02
     59c:	13 82       	std	Z+3, r1	; 0x03
     59e:	80 ed       	ldi	r24, 0xD0	; 208
     5a0:	97 e0       	ldi	r25, 0x07	; 7
     5a2:	95 83       	std	Z+5, r25	; 0x05
     5a4:	84 83       	std	Z+4, r24	; 0x04
     5a6:	84 ec       	ldi	r24, 0xC4	; 196
     5a8:	99 e0       	ldi	r25, 0x09	; 9
     5aa:	97 83       	std	Z+7, r25	; 0x07
     5ac:	86 83       	std	Z+6, r24	; 0x06
     5ae:	80 ea       	ldi	r24, 0xA0	; 160
     5b0:	9f e0       	ldi	r25, 0x0F	; 15
     5b2:	91 87       	std	Z+9, r25	; 0x09
     5b4:	80 87       	std	Z+8, r24	; 0x08
     5b6:	88 ec       	ldi	r24, 0xC8	; 200
     5b8:	90 e0       	ldi	r25, 0x00	; 0
     5ba:	a0 e0       	ldi	r26, 0x00	; 0
     5bc:	b0 e0       	ldi	r27, 0x00	; 0
     5be:	82 87       	std	Z+10, r24	; 0x0a
     5c0:	93 87       	std	Z+11, r25	; 0x0b
     5c2:	a4 87       	std	Z+12, r26	; 0x0c
     5c4:	b5 87       	std	Z+13, r27	; 0x0d
     5c6:	81 e0       	ldi	r24, 0x01	; 1
     5c8:	86 87       	std	Z+14, r24	; 0x0e
     5ca:	08 95       	ret

000005cc <main>:
     5cc:	78 94       	sei
     5ce:	04 df       	rcall	.-504    	; 0x3d8 <init_micros>
     5d0:	eb dd       	rcall	.-1066   	; 0x1a8 <init_USART>
     5d2:	c2 df       	rcall	.-124    	; 0x558 <init_TWI>
     5d4:	ca df       	rcall	.-108    	; 0x56a <init_TWI_Timer2>
     5d6:	dd df       	rcall	.-70     	; 0x592 <init_rp6Data>
     5d8:	d5 df       	rcall	.-86     	; 0x584 <init_arduinoData>
     5da:	56 d3       	rcall	.+1708   	; 0xc88 <initTimer>
     5dc:	e5 dd       	rcall	.-1078   	; 0x1a8 <init_USART>
     5de:	c6 e8       	ldi	r28, 0x86	; 134
     5e0:	d3 e0       	ldi	r29, 0x03	; 3
     5e2:	40 90 48 03 	lds	r4, 0x0348	; 0x800348 <ultrasonicSensorTimer>
     5e6:	50 90 49 03 	lds	r5, 0x0349	; 0x800349 <ultrasonicSensorTimer+0x1>
     5ea:	60 90 4a 03 	lds	r6, 0x034A	; 0x80034a <ultrasonicSensorTimer+0x2>
     5ee:	70 90 4b 03 	lds	r7, 0x034B	; 0x80034b <ultrasonicSensorTimer+0x3>
     5f2:	50 df       	rcall	.-352    	; 0x494 <micros>
     5f4:	f2 2f       	mov	r31, r18
     5f6:	e3 2f       	mov	r30, r19
     5f8:	c4 2e       	mov	r12, r20
     5fa:	d5 2e       	mov	r13, r21
     5fc:	e6 2e       	mov	r14, r22
     5fe:	f7 2e       	mov	r15, r23
     600:	08 2f       	mov	r16, r24
     602:	19 2f       	mov	r17, r25
     604:	24 2d       	mov	r18, r4
     606:	35 2d       	mov	r19, r5
     608:	46 2d       	mov	r20, r6
     60a:	57 2d       	mov	r21, r7
     60c:	60 e0       	ldi	r22, 0x00	; 0
     60e:	70 e0       	ldi	r23, 0x00	; 0
     610:	80 e0       	ldi	r24, 0x00	; 0
     612:	90 e0       	ldi	r25, 0x00	; 0
     614:	af 2e       	mov	r10, r31
     616:	be 2e       	mov	r11, r30
     618:	f5 d7       	rcall	.+4074   	; 0x1604 <__cmpdi2>
     61a:	f8 f4       	brcc	.+62     	; 0x65a <main+0x8e>
     61c:	8f 85       	ldd	r24, Y+15	; 0x0f
     61e:	98 89       	ldd	r25, Y+16	; 0x10
     620:	18 d3       	rcall	.+1584   	; 0xc52 <writeInt>
     622:	8a e0       	ldi	r24, 0x0A	; 10
     624:	92 e0       	ldi	r25, 0x02	; 2
     626:	00 d3       	rcall	.+1536   	; 0xc28 <writeString>
     628:	35 df       	rcall	.-406    	; 0x494 <micros>
     62a:	82 2e       	mov	r8, r18
     62c:	93 2e       	mov	r9, r19
     62e:	a4 2e       	mov	r10, r20
     630:	b5 2e       	mov	r11, r21
     632:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrasonicSensorSpeed>
     636:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrasonicSensorSpeed+0x1>
     63a:	a0 91 08 02 	lds	r26, 0x0208	; 0x800208 <ultrasonicSensorSpeed+0x2>
     63e:	b0 91 09 02 	lds	r27, 0x0209	; 0x800209 <ultrasonicSensorSpeed+0x3>
     642:	88 0e       	add	r8, r24
     644:	99 1e       	adc	r9, r25
     646:	aa 1e       	adc	r10, r26
     648:	bb 1e       	adc	r11, r27
     64a:	80 92 48 03 	sts	0x0348, r8	; 0x800348 <ultrasonicSensorTimer>
     64e:	90 92 49 03 	sts	0x0349, r9	; 0x800349 <ultrasonicSensorTimer+0x1>
     652:	a0 92 4a 03 	sts	0x034A, r10	; 0x80034a <ultrasonicSensorTimer+0x2>
     656:	b0 92 4b 03 	sts	0x034B, r11	; 0x80034b <ultrasonicSensorTimer+0x3>
     65a:	40 90 44 03 	lds	r4, 0x0344	; 0x800344 <stoptimer>
     65e:	50 90 45 03 	lds	r5, 0x0345	; 0x800345 <stoptimer+0x1>
     662:	60 90 46 03 	lds	r6, 0x0346	; 0x800346 <stoptimer+0x2>
     666:	70 90 47 03 	lds	r7, 0x0347	; 0x800347 <stoptimer+0x3>
     66a:	14 df       	rcall	.-472    	; 0x494 <micros>
     66c:	f2 2f       	mov	r31, r18
     66e:	e3 2f       	mov	r30, r19
     670:	c4 2e       	mov	r12, r20
     672:	d5 2e       	mov	r13, r21
     674:	e6 2e       	mov	r14, r22
     676:	f7 2e       	mov	r15, r23
     678:	08 2f       	mov	r16, r24
     67a:	19 2f       	mov	r17, r25
     67c:	24 2d       	mov	r18, r4
     67e:	35 2d       	mov	r19, r5
     680:	46 2d       	mov	r20, r6
     682:	57 2d       	mov	r21, r7
     684:	60 e0       	ldi	r22, 0x00	; 0
     686:	70 e0       	ldi	r23, 0x00	; 0
     688:	80 e0       	ldi	r24, 0x00	; 0
     68a:	90 e0       	ldi	r25, 0x00	; 0
     68c:	af 2e       	mov	r10, r31
     68e:	be 2e       	mov	r11, r30
     690:	b9 d7       	rcall	.+3954   	; 0x1604 <__cmpdi2>
     692:	08 f0       	brcs	.+2      	; 0x696 <main+0xca>
     694:	a6 cf       	rjmp	.-180    	; 0x5e2 <main+0x16>
     696:	02 d3       	rcall	.+1540   	; 0xc9c <ultrasonicSensor>
     698:	28 81       	ld	r18, Y
     69a:	39 81       	ldd	r19, Y+1	; 0x01
     69c:	2d 33       	cpi	r18, 0x3D	; 61
     69e:	31 05       	cpc	r19, r1
     6a0:	48 f4       	brcc	.+18     	; 0x6b4 <main+0xe8>
     6a2:	2a 81       	ldd	r18, Y+2	; 0x02
     6a4:	21 30       	cpi	r18, 0x01	; 1
     6a6:	71 f4       	brne	.+28     	; 0x6c4 <main+0xf8>
     6a8:	84 3b       	cpi	r24, 0xB4	; 180
     6aa:	91 05       	cpc	r25, r1
     6ac:	58 f4       	brcc	.+22     	; 0x6c4 <main+0xf8>
     6ae:	19 82       	std	Y+1, r1	; 0x01
     6b0:	18 82       	st	Y, r1
     6b2:	08 c0       	rjmp	.+16     	; 0x6c4 <main+0xf8>
     6b4:	88 31       	cpi	r24, 0x18	; 24
     6b6:	91 40       	sbci	r25, 0x01	; 1
     6b8:	28 f4       	brcc	.+10     	; 0x6c4 <main+0xf8>
     6ba:	8a 81       	ldd	r24, Y+2	; 0x02
     6bc:	81 30       	cpi	r24, 0x01	; 1
     6be:	11 f4       	brne	.+4      	; 0x6c4 <main+0xf8>
     6c0:	19 82       	std	Y+1, r1	; 0x01
     6c2:	18 82       	st	Y, r1
     6c4:	e7 de       	rcall	.-562    	; 0x494 <micros>
     6c6:	82 2e       	mov	r8, r18
     6c8:	93 2e       	mov	r9, r19
     6ca:	a4 2e       	mov	r10, r20
     6cc:	b5 2e       	mov	r11, r21
     6ce:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <stoptimerspeed>
     6d2:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <stoptimerspeed+0x1>
     6d6:	a0 91 04 02 	lds	r26, 0x0204	; 0x800204 <stoptimerspeed+0x2>
     6da:	b0 91 05 02 	lds	r27, 0x0205	; 0x800205 <stoptimerspeed+0x3>
     6de:	88 0e       	add	r8, r24
     6e0:	99 1e       	adc	r9, r25
     6e2:	aa 1e       	adc	r10, r26
     6e4:	bb 1e       	adc	r11, r27
     6e6:	80 92 44 03 	sts	0x0344, r8	; 0x800344 <stoptimer>
     6ea:	90 92 45 03 	sts	0x0345, r9	; 0x800345 <stoptimer+0x1>
     6ee:	a0 92 46 03 	sts	0x0346, r10	; 0x800346 <stoptimer+0x2>
     6f2:	b0 92 47 03 	sts	0x0347, r11	; 0x800347 <stoptimer+0x3>
     6f6:	75 cf       	rjmp	.-278    	; 0x5e2 <main+0x16>

000006f8 <arduinoDataInterpreter>:
     6f8:	a8 e6       	ldi	r26, 0x68	; 104
     6fa:	b3 e0       	ldi	r27, 0x03	; 3
     6fc:	ec e4       	ldi	r30, 0x4C	; 76
     6fe:	f3 e0       	ldi	r31, 0x03	; 3
     700:	81 81       	ldd	r24, Z+1	; 0x01
     702:	90 e0       	ldi	r25, 0x00	; 0
     704:	98 2f       	mov	r25, r24
     706:	88 27       	eor	r24, r24
     708:	22 81       	ldd	r18, Z+2	; 0x02
     70a:	82 0f       	add	r24, r18
     70c:	91 1d       	adc	r25, r1
     70e:	11 96       	adiw	r26, 0x01	; 1
     710:	9c 93       	st	X, r25
     712:	8e 93       	st	-X, r24
     714:	83 81       	ldd	r24, Z+3	; 0x03
     716:	90 e0       	ldi	r25, 0x00	; 0
     718:	98 2f       	mov	r25, r24
     71a:	88 27       	eor	r24, r24
     71c:	24 81       	ldd	r18, Z+4	; 0x04
     71e:	82 0f       	add	r24, r18
     720:	91 1d       	adc	r25, r1
     722:	13 96       	adiw	r26, 0x03	; 3
     724:	9c 93       	st	X, r25
     726:	8e 93       	st	-X, r24
     728:	12 97       	sbiw	r26, 0x02	; 2
     72a:	85 81       	ldd	r24, Z+5	; 0x05
     72c:	90 e0       	ldi	r25, 0x00	; 0
     72e:	98 2f       	mov	r25, r24
     730:	88 27       	eor	r24, r24
     732:	26 81       	ldd	r18, Z+6	; 0x06
     734:	82 0f       	add	r24, r18
     736:	91 1d       	adc	r25, r1
     738:	15 96       	adiw	r26, 0x05	; 5
     73a:	9c 93       	st	X, r25
     73c:	8e 93       	st	-X, r24
     73e:	14 97       	sbiw	r26, 0x04	; 4
     740:	87 81       	ldd	r24, Z+7	; 0x07
     742:	90 e0       	ldi	r25, 0x00	; 0
     744:	98 2f       	mov	r25, r24
     746:	88 27       	eor	r24, r24
     748:	20 85       	ldd	r18, Z+8	; 0x08
     74a:	82 0f       	add	r24, r18
     74c:	91 1d       	adc	r25, r1
     74e:	17 96       	adiw	r26, 0x07	; 7
     750:	9c 93       	st	X, r25
     752:	8e 93       	st	-X, r24
     754:	16 97       	sbiw	r26, 0x06	; 6
     756:	81 85       	ldd	r24, Z+9	; 0x09
     758:	90 e0       	ldi	r25, 0x00	; 0
     75a:	98 2f       	mov	r25, r24
     75c:	88 27       	eor	r24, r24
     75e:	22 85       	ldd	r18, Z+10	; 0x0a
     760:	82 0f       	add	r24, r18
     762:	91 1d       	adc	r25, r1
     764:	19 96       	adiw	r26, 0x09	; 9
     766:	9c 93       	st	X, r25
     768:	8e 93       	st	-X, r24
     76a:	18 97       	sbiw	r26, 0x08	; 8
     76c:	08 95       	ret

0000076e <I2C_receiveInterpreter>:
     76e:	80 91 4c 03 	lds	r24, 0x034C	; 0x80034c <receiveDataTWI>
     772:	81 30       	cpi	r24, 0x01	; 1
     774:	09 f4       	brne	.+2      	; 0x778 <I2C_receiveInterpreter+0xa>
     776:	c0 cf       	rjmp	.-128    	; 0x6f8 <arduinoDataInterpreter>
     778:	08 95       	ret

0000077a <clearSendData>:
     77a:	e2 e7       	ldi	r30, 0x72	; 114
     77c:	f3 e0       	ldi	r31, 0x03	; 3
     77e:	86 e8       	ldi	r24, 0x86	; 134
     780:	93 e0       	ldi	r25, 0x03	; 3
     782:	11 92       	st	Z+, r1
     784:	e8 17       	cp	r30, r24
     786:	f9 07       	cpc	r31, r25
     788:	e1 f7       	brne	.-8      	; 0x782 <clearSendData+0x8>
     78a:	08 95       	ret

0000078c <clearReceiveData>:
     78c:	ec e4       	ldi	r30, 0x4C	; 76
     78e:	f3 e0       	ldi	r31, 0x03	; 3
     790:	80 e6       	ldi	r24, 0x60	; 96
     792:	93 e0       	ldi	r25, 0x03	; 3
     794:	11 92       	st	Z+, r1
     796:	e8 17       	cp	r30, r24
     798:	f9 07       	cpc	r31, r25
     79a:	e1 f7       	brne	.-8      	; 0x794 <clearReceiveData+0x8>
     79c:	08 95       	ret

0000079e <__vector_39>:
     79e:	1f 92       	push	r1
     7a0:	0f 92       	push	r0
     7a2:	0f b6       	in	r0, 0x3f	; 63
     7a4:	0f 92       	push	r0
     7a6:	11 24       	eor	r1, r1
     7a8:	0b b6       	in	r0, 0x3b	; 59
     7aa:	0f 92       	push	r0
     7ac:	af 92       	push	r10
     7ae:	bf 92       	push	r11
     7b0:	cf 92       	push	r12
     7b2:	df 92       	push	r13
     7b4:	ef 92       	push	r14
     7b6:	ff 92       	push	r15
     7b8:	0f 93       	push	r16
     7ba:	1f 93       	push	r17
     7bc:	2f 93       	push	r18
     7be:	3f 93       	push	r19
     7c0:	4f 93       	push	r20
     7c2:	5f 93       	push	r21
     7c4:	6f 93       	push	r22
     7c6:	7f 93       	push	r23
     7c8:	8f 93       	push	r24
     7ca:	9f 93       	push	r25
     7cc:	af 93       	push	r26
     7ce:	bf 93       	push	r27
     7d0:	cf 93       	push	r28
     7d2:	df 93       	push	r29
     7d4:	ef 93       	push	r30
     7d6:	ff 93       	push	r31
     7d8:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     7dc:	80 35       	cpi	r24, 0x50	; 80
     7de:	c1 f0       	breq	.+48     	; 0x810 <__vector_39+0x72>
     7e0:	88 35       	cpi	r24, 0x58	; 88
     7e2:	a9 f1       	breq	.+106    	; 0x84e <__vector_39+0xb0>
     7e4:	80 34       	cpi	r24, 0x40	; 64
     7e6:	09 f0       	breq	.+2      	; 0x7ea <__vector_39+0x4c>
     7e8:	84 c0       	rjmp	.+264    	; 0x8f2 <__vector_39+0x154>
     7ea:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <compassFlag>
     7ee:	90 91 43 03 	lds	r25, 0x0343	; 0x800343 <compassFlag+0x1>
     7f2:	89 2b       	or	r24, r25
     7f4:	21 f0       	breq	.+8      	; 0x7fe <__vector_39+0x60>
     7f6:	85 e8       	ldi	r24, 0x85	; 133
     7f8:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     7fc:	7a c0       	rjmp	.+244    	; 0x8f2 <__vector_39+0x154>
     7fe:	c6 df       	rcall	.-116    	; 0x78c <clearReceiveData>
     800:	10 92 41 02 	sts	0x0241, r1	; 0x800241 <bytecounter.2027+0x1>
     804:	10 92 40 02 	sts	0x0240, r1	; 0x800240 <bytecounter.2027>
     808:	85 ec       	ldi	r24, 0xC5	; 197
     80a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     80e:	71 c0       	rjmp	.+226    	; 0x8f2 <__vector_39+0x154>
     810:	80 91 40 02 	lds	r24, 0x0240	; 0x800240 <bytecounter.2027>
     814:	90 91 41 02 	lds	r25, 0x0241	; 0x800241 <bytecounter.2027+0x1>
     818:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     81c:	fc 01       	movw	r30, r24
     81e:	e4 5b       	subi	r30, 0xB4	; 180
     820:	fc 4f       	sbci	r31, 0xFC	; 252
     822:	20 83       	st	Z, r18
     824:	82 31       	cpi	r24, 0x12	; 18
     826:	91 05       	cpc	r25, r1
     828:	4c f4       	brge	.+18     	; 0x83c <__vector_39+0x9e>
     82a:	01 96       	adiw	r24, 0x01	; 1
     82c:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <bytecounter.2027+0x1>
     830:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <bytecounter.2027>
     834:	85 ec       	ldi	r24, 0xC5	; 197
     836:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     83a:	5b c0       	rjmp	.+182    	; 0x8f2 <__vector_39+0x154>
     83c:	01 96       	adiw	r24, 0x01	; 1
     83e:	90 93 41 02 	sts	0x0241, r25	; 0x800241 <bytecounter.2027+0x1>
     842:	80 93 40 02 	sts	0x0240, r24	; 0x800240 <bytecounter.2027>
     846:	85 e8       	ldi	r24, 0x85	; 133
     848:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     84c:	52 c0       	rjmp	.+164    	; 0x8f2 <__vector_39+0x154>
     84e:	80 91 42 03 	lds	r24, 0x0342	; 0x800342 <compassFlag>
     852:	90 91 43 03 	lds	r25, 0x0343	; 0x800343 <compassFlag+0x1>
     856:	89 2b       	or	r24, r25
     858:	71 f4       	brne	.+28     	; 0x876 <__vector_39+0xd8>
     85a:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     85e:	e0 91 40 02 	lds	r30, 0x0240	; 0x800240 <bytecounter.2027>
     862:	f0 91 41 02 	lds	r31, 0x0241	; 0x800241 <bytecounter.2027+0x1>
     866:	e4 5b       	subi	r30, 0xB4	; 180
     868:	fc 4f       	sbci	r31, 0xFC	; 252
     86a:	80 83       	st	Z, r24
     86c:	85 e9       	ldi	r24, 0x95	; 149
     86e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     872:	7d df       	rcall	.-262    	; 0x76e <I2C_receiveInterpreter>
     874:	3e c0       	rjmp	.+124    	; 0x8f2 <__vector_39+0x154>
     876:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     87a:	c6 e8       	ldi	r28, 0x86	; 134
     87c:	d3 e0       	ldi	r29, 0x03	; 3
     87e:	30 e0       	ldi	r19, 0x00	; 0
     880:	40 e0       	ldi	r20, 0x00	; 0
     882:	50 e0       	ldi	r21, 0x00	; 0
     884:	60 e0       	ldi	r22, 0x00	; 0
     886:	70 e0       	ldi	r23, 0x00	; 0
     888:	80 e0       	ldi	r24, 0x00	; 0
     88a:	90 e0       	ldi	r25, 0x00	; 0
     88c:	03 e0       	ldi	r16, 0x03	; 3
     88e:	65 d6       	rcall	.+3274   	; 0x155a <__ashldi3>
     890:	a2 2e       	mov	r10, r18
     892:	b3 2e       	mov	r11, r19
     894:	c4 2e       	mov	r12, r20
     896:	d5 2e       	mov	r13, r21
     898:	e6 2e       	mov	r14, r22
     89a:	f7 2e       	mov	r15, r23
     89c:	e8 2f       	mov	r30, r24
     89e:	19 2f       	mov	r17, r25
     8a0:	02 e0       	ldi	r16, 0x02	; 2
     8a2:	5b d6       	rcall	.+3254   	; 0x155a <__ashldi3>
     8a4:	0e 2f       	mov	r16, r30
     8a6:	a5 d6       	rcall	.+3402   	; 0x15f2 <__subdi3>
     8a8:	a2 2e       	mov	r10, r18
     8aa:	b3 2e       	mov	r11, r19
     8ac:	c4 2e       	mov	r12, r20
     8ae:	d5 2e       	mov	r13, r21
     8b0:	e6 2e       	mov	r14, r22
     8b2:	f7 2e       	mov	r15, r23
     8b4:	e8 2f       	mov	r30, r24
     8b6:	19 2f       	mov	r17, r25
     8b8:	04 e0       	ldi	r16, 0x04	; 4
     8ba:	4f d6       	rcall	.+3230   	; 0x155a <__ashldi3>
     8bc:	0e 2f       	mov	r16, r30
     8be:	99 d6       	rcall	.+3378   	; 0x15f2 <__subdi3>
     8c0:	aa 24       	eor	r10, r10
     8c2:	aa 94       	dec	r10
     8c4:	b1 2c       	mov	r11, r1
     8c6:	c1 2c       	mov	r12, r1
     8c8:	d1 2c       	mov	r13, r1
     8ca:	e1 2c       	mov	r14, r1
     8cc:	f1 2c       	mov	r15, r1
     8ce:	00 e0       	ldi	r16, 0x00	; 0
     8d0:	10 e0       	ldi	r17, 0x00	; 0
     8d2:	e7 d5       	rcall	.+3022   	; 0x14a2 <__udivdi3>
     8d4:	2f 87       	std	Y+15, r18	; 0x0f
     8d6:	38 8b       	std	Y+16, r19	; 0x10
     8d8:	49 8b       	std	Y+17, r20	; 0x11
     8da:	5a 8b       	std	Y+18, r21	; 0x12
     8dc:	6b 8b       	std	Y+19, r22	; 0x13
     8de:	7c 8b       	std	Y+20, r23	; 0x14
     8e0:	8d 8b       	std	Y+21, r24	; 0x15
     8e2:	9e 8b       	std	Y+22, r25	; 0x16
     8e4:	85 e9       	ldi	r24, 0x95	; 149
     8e6:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     8ea:	10 92 43 03 	sts	0x0343, r1	; 0x800343 <compassFlag+0x1>
     8ee:	10 92 42 03 	sts	0x0342, r1	; 0x800342 <compassFlag>
     8f2:	ff 91       	pop	r31
     8f4:	ef 91       	pop	r30
     8f6:	df 91       	pop	r29
     8f8:	cf 91       	pop	r28
     8fa:	bf 91       	pop	r27
     8fc:	af 91       	pop	r26
     8fe:	9f 91       	pop	r25
     900:	8f 91       	pop	r24
     902:	7f 91       	pop	r23
     904:	6f 91       	pop	r22
     906:	5f 91       	pop	r21
     908:	4f 91       	pop	r20
     90a:	3f 91       	pop	r19
     90c:	2f 91       	pop	r18
     90e:	1f 91       	pop	r17
     910:	0f 91       	pop	r16
     912:	ff 90       	pop	r15
     914:	ef 90       	pop	r14
     916:	df 90       	pop	r13
     918:	cf 90       	pop	r12
     91a:	bf 90       	pop	r11
     91c:	af 90       	pop	r10
     91e:	0f 90       	pop	r0
     920:	0b be       	out	0x3b, r0	; 59
     922:	0f 90       	pop	r0
     924:	0f be       	out	0x3f, r0	; 63
     926:	0f 90       	pop	r0
     928:	1f 90       	pop	r1
     92a:	18 95       	reti

0000092c <TWIwaitUntilReady>:


void TWIwaitUntilReady(){
	while (!(TWCR & (1 << TWINT)));
     92c:	ec eb       	ldi	r30, 0xBC	; 188
     92e:	f0 e0       	ldi	r31, 0x00	; 0
     930:	80 81       	ld	r24, Z
     932:	88 23       	and	r24, r24
     934:	ec f7       	brge	.-6      	; 0x930 <TWIwaitUntilReady+0x4>
}
     936:	08 95       	ret

00000938 <checkCode>:


void checkCode(uint8_t code){
     938:	cf 93       	push	r28
     93a:	df 93       	push	r29
     93c:	cd b7       	in	r28, 0x3d	; 61
     93e:	de b7       	in	r29, 0x3e	; 62
     940:	cf 5f       	subi	r28, 0xFF	; 255
     942:	d1 09       	sbc	r29, r1
     944:	0f b6       	in	r0, 0x3f	; 63
     946:	f8 94       	cli
     948:	de bf       	out	0x3e, r29	; 62
     94a:	0f be       	out	0x3f, r0	; 63
     94c:	cd bf       	out	0x3d, r28	; 61
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     94e:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
	while (!(TWCR & (1 << TWINT)));
}


void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
     952:	98 7f       	andi	r25, 0xF8	; 248
     954:	89 17       	cp	r24, r25
     956:	81 f0       	breq	.+32     	; 0x978 <checkCode+0x40>
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
     958:	8e e0       	ldi	r24, 0x0E	; 14
     95a:	92 e0       	ldi	r25, 0x02	; 2
     95c:	65 d1       	rcall	.+714    	; 0xc28 <writeString>
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     95e:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     962:	88 7f       	andi	r24, 0xF8	; 248
     964:	40 e1       	ldi	r20, 0x10	; 16
     966:	be 01       	movw	r22, r28
     968:	6f 5f       	subi	r22, 0xFF	; 255
     96a:	7f 4f       	sbci	r23, 0xFF	; 255
     96c:	90 e0       	ldi	r25, 0x00	; 0

void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
		writeString( itoa( TWIGetStatus(), buffer, 16) );
     96e:	62 d6       	rcall	.+3268   	; 0x1634 <__itoa_ncheck>
		writeString("\n\n\r");
     970:	5b d1       	rcall	.+694    	; 0xc28 <writeString>
     972:	89 e3       	ldi	r24, 0x39	; 57
     974:	92 e0       	ldi	r25, 0x02	; 2
     976:	58 d1       	rcall	.+688    	; 0xc28 <writeString>
	}
}
     978:	c1 50       	subi	r28, 0x01	; 1
     97a:	df 4f       	sbci	r29, 0xFF	; 255
     97c:	0f b6       	in	r0, 0x3f	; 63
     97e:	f8 94       	cli
     980:	de bf       	out	0x3e, r29	; 62
     982:	0f be       	out	0x3f, r0	; 63
     984:	cd bf       	out	0x3d, r28	; 61
     986:	df 91       	pop	r29
     988:	cf 91       	pop	r28
     98a:	08 95       	ret

0000098c <writeToSlave>:


void writeToSlave(uint8_t address, uint8_t dataByte[]){
     98c:	af 92       	push	r10
     98e:	bf 92       	push	r11
     990:	cf 92       	push	r12
     992:	df 92       	push	r13
     994:	ff 92       	push	r15
     996:	0f 93       	push	r16
     998:	1f 93       	push	r17
     99a:	cf 93       	push	r28
     99c:	df 93       	push	r29
     99e:	c8 2f       	mov	r28, r24
     9a0:	8b 01       	movw	r16, r22
	
	TWISendStart();
     9a2:	0f 2e       	mov	r0, r31
     9a4:	fc eb       	ldi	r31, 0xBC	; 188
     9a6:	cf 2e       	mov	r12, r31
     9a8:	d1 2c       	mov	r13, r1
     9aa:	f0 2d       	mov	r31, r0
     9ac:	85 ea       	ldi	r24, 0xA5	; 165
     9ae:	f6 01       	movw	r30, r12
     9b0:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     9b2:	bc df       	rcall	.-136    	; 0x92c <TWIwaitUntilReady>
	checkCode(0x08);
     9b4:	88 e0       	ldi	r24, 0x08	; 8
     9b6:	c0 df       	rcall	.-128    	; 0x938 <checkCode>
	
	TWIWrite((address << 1));
     9b8:	cc 0f       	add	r28, r28
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     9ba:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     9be:	85 e8       	ldi	r24, 0x85	; 133
     9c0:	f6 01       	movw	r30, r12
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
     9c2:	80 83       	st	Z, r24
	checkCode(0x18);
     9c4:	b3 df       	rcall	.-154    	; 0x92c <TWIwaitUntilReady>
     9c6:	88 e1       	ldi	r24, 0x18	; 24
     9c8:	b7 df       	rcall	.-146    	; 0x938 <checkCode>
     9ca:	e8 01       	movw	r28, r16
     9cc:	0c 5e       	subi	r16, 0xEC	; 236
     9ce:	1f 4f       	sbci	r17, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     9d0:	0f 2e       	mov	r0, r31
     9d2:	fb eb       	ldi	r31, 0xBB	; 187
     9d4:	af 2e       	mov	r10, r31
     9d6:	b1 2c       	mov	r11, r1
     9d8:	f0 2d       	mov	r31, r0
	TWISendTransmit();
     9da:	0f 2e       	mov	r0, r31
     9dc:	f5 e8       	ldi	r31, 0x85	; 133
     9de:	ff 2e       	mov	r15, r31
     9e0:	f0 2d       	mov	r31, r0
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
     9e2:	89 91       	ld	r24, Y+
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     9e4:	f5 01       	movw	r30, r10
	TWISendTransmit();
     9e6:	80 83       	st	Z, r24
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
     9e8:	f6 01       	movw	r30, r12
     9ea:	f0 82       	st	Z, r15
		checkCode(0x28);
     9ec:	9f df       	rcall	.-194    	; 0x92c <TWIwaitUntilReady>
     9ee:	88 e2       	ldi	r24, 0x28	; 40
     9f0:	a3 df       	rcall	.-186    	; 0x938 <checkCode>
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
     9f2:	c0 17       	cp	r28, r16
     9f4:	d1 07       	cpc	r29, r17
     9f6:	a9 f7       	brne	.-22     	; 0x9e2 <writeToSlave+0x56>
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
		checkCode(0x28);
	}
	
	TWISendStop();
     9f8:	85 e9       	ldi	r24, 0x95	; 149
     9fa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
}
     9fe:	df 91       	pop	r29
     a00:	cf 91       	pop	r28
     a02:	1f 91       	pop	r17
     a04:	0f 91       	pop	r16
     a06:	ff 90       	pop	r15
     a08:	df 90       	pop	r13
     a0a:	cf 90       	pop	r12
     a0c:	bf 90       	pop	r11
     a0e:	af 90       	pop	r10
     a10:	08 95       	ret

00000a12 <rp6DataConstructor>:
	arduinoData.distanceDrivenR = (receiveDataTWI[7] << 8) + receiveDataTWI[8];
	arduinoData.totalDistance = (receiveDataTWI[9] << 8) + receiveDataTWI[10];
}


void rp6DataConstructor(){
     a12:	0f 93       	push	r16
     a14:	cf 93       	push	r28
	clearSendData();
     a16:	b1 de       	rcall	.-670    	; 0x77a <clearSendData>
	
	sendDataTWI[0] = 1;
     a18:	81 e0       	ldi	r24, 0x01	; 1
     a1a:	80 93 72 03 	sts	0x0372, r24	; 0x800372 <sendDataTWI>
	if(rp6Data.driveSpeed > 100){rp6Data.driveSpeed = 100;}
     a1e:	80 91 86 03 	lds	r24, 0x0386	; 0x800386 <rp6Data>
     a22:	90 91 87 03 	lds	r25, 0x0387	; 0x800387 <rp6Data+0x1>
     a26:	85 36       	cpi	r24, 0x65	; 101
     a28:	91 05       	cpc	r25, r1
     a2a:	30 f0       	brcs	.+12     	; 0xa38 <rp6DataConstructor+0x26>
     a2c:	84 e6       	ldi	r24, 0x64	; 100
     a2e:	90 e0       	ldi	r25, 0x00	; 0
     a30:	90 93 87 03 	sts	0x0387, r25	; 0x800387 <rp6Data+0x1>
     a34:	80 93 86 03 	sts	0x0386, r24	; 0x800386 <rp6Data>
	sendDataTWI[1] = rp6Data.driveSpeed;
     a38:	a2 e7       	ldi	r26, 0x72	; 114
     a3a:	b3 e0       	ldi	r27, 0x03	; 3
     a3c:	e6 e8       	ldi	r30, 0x86	; 134
     a3e:	f3 e0       	ldi	r31, 0x03	; 3
     a40:	80 81       	ld	r24, Z
     a42:	11 96       	adiw	r26, 0x01	; 1
     a44:	8c 93       	st	X, r24
     a46:	11 97       	sbiw	r26, 0x01	; 1
	sendDataTWI[2] = rp6Data.driveDirection + 1;
     a48:	82 81       	ldd	r24, Z+2	; 0x02
     a4a:	8f 5f       	subi	r24, 0xFF	; 255
     a4c:	12 96       	adiw	r26, 0x02	; 2
     a4e:	8c 93       	st	X, r24
     a50:	12 97       	sbiw	r26, 0x02	; 2
	sendDataTWI[3] = rp6Data.turnDirection + 1;
     a52:	83 81       	ldd	r24, Z+3	; 0x03
     a54:	8f 5f       	subi	r24, 0xFF	; 255
     a56:	13 96       	adiw	r26, 0x03	; 3
     a58:	8c 93       	st	X, r24
     a5a:	13 97       	sbiw	r26, 0x03	; 3
	
	sendDataTWI[4] = (rp6Data.accelerationRate >> 8);
     a5c:	84 81       	ldd	r24, Z+4	; 0x04
     a5e:	95 81       	ldd	r25, Z+5	; 0x05
     a60:	14 96       	adiw	r26, 0x04	; 4
     a62:	9c 93       	st	X, r25
     a64:	14 97       	sbiw	r26, 0x04	; 4
	sendDataTWI[5] = rp6Data.accelerationRate;
     a66:	15 96       	adiw	r26, 0x05	; 5
     a68:	8c 93       	st	X, r24
     a6a:	15 97       	sbiw	r26, 0x05	; 5
	
	sendDataTWI[6] = (rp6Data.turnRate >> 8);
     a6c:	86 81       	ldd	r24, Z+6	; 0x06
     a6e:	97 81       	ldd	r25, Z+7	; 0x07
     a70:	16 96       	adiw	r26, 0x06	; 6
     a72:	9c 93       	st	X, r25
     a74:	16 97       	sbiw	r26, 0x06	; 6
	sendDataTWI[7] = rp6Data.turnRate;
     a76:	17 96       	adiw	r26, 0x07	; 7
     a78:	8c 93       	st	X, r24
     a7a:	17 97       	sbiw	r26, 0x07	; 7
	
	sendDataTWI[8] = (rp6Data.driveSpeedThreshold >> 8);
     a7c:	80 85       	ldd	r24, Z+8	; 0x08
     a7e:	91 85       	ldd	r25, Z+9	; 0x09
     a80:	18 96       	adiw	r26, 0x08	; 8
     a82:	9c 93       	st	X, r25
     a84:	18 97       	sbiw	r26, 0x08	; 8
	sendDataTWI[9] = rp6Data.driveSpeedThreshold;
     a86:	19 96       	adiw	r26, 0x09	; 9
     a88:	8c 93       	st	X, r24
     a8a:	19 97       	sbiw	r26, 0x09	; 9
	
	sendDataTWI[10] = (rp6Data.updateSpeed >> 8);
     a8c:	82 85       	ldd	r24, Z+10	; 0x0a
     a8e:	93 85       	ldd	r25, Z+11	; 0x0b
     a90:	1a 96       	adiw	r26, 0x0a	; 10
     a92:	9c 93       	st	X, r25
     a94:	1a 97       	sbiw	r26, 0x0a	; 10
	sendDataTWI[11] = rp6Data.updateSpeed;
     a96:	1b 96       	adiw	r26, 0x0b	; 11
     a98:	8c 93       	st	X, r24
     a9a:	1b 97       	sbiw	r26, 0x0b	; 11
	
	sendDataTWI[12] = rp6Data.enableBeeper;
     a9c:	86 85       	ldd	r24, Z+14	; 0x0e
     a9e:	1c 96       	adiw	r26, 0x0c	; 12
     aa0:	8c 93       	st	X, r24
     aa2:	1c 97       	sbiw	r26, 0x0c	; 12
	
	sendDataTWI[13] = (rp6Data.compassAngle >> 8);
     aa4:	c7 85       	ldd	r28, Z+15	; 0x0f
     aa6:	30 89       	ldd	r19, Z+16	; 0x10
     aa8:	41 89       	ldd	r20, Z+17	; 0x11
     aaa:	52 89       	ldd	r21, Z+18	; 0x12
     aac:	63 89       	ldd	r22, Z+19	; 0x13
     aae:	74 89       	ldd	r23, Z+20	; 0x14
     ab0:	2c 2f       	mov	r18, r28
     ab2:	85 89       	ldd	r24, Z+21	; 0x15
     ab4:	96 89       	ldd	r25, Z+22	; 0x16
     ab6:	08 e0       	ldi	r16, 0x08	; 8
     ab8:	6b d5       	rcall	.+2774   	; 0x1590 <__lshrdi3>
     aba:	1d 96       	adiw	r26, 0x0d	; 13
     abc:	2c 93       	st	X, r18
     abe:	1d 97       	sbiw	r26, 0x0d	; 13
	sendDataTWI[14] = rp6Data.compassAngle;
     ac0:	1e 96       	adiw	r26, 0x0e	; 14
     ac2:	cc 93       	st	X, r28
     ac4:	1e 97       	sbiw	r26, 0x0e	; 14
	
	for(int i = 15; i < DATASIZE; i++){
		sendDataTWI[i] = 0;
     ac6:	1f 96       	adiw	r26, 0x0f	; 15
     ac8:	1c 92       	st	X, r1
     aca:	1f 97       	sbiw	r26, 0x0f	; 15
     acc:	50 96       	adiw	r26, 0x10	; 16
     ace:	1c 92       	st	X, r1
     ad0:	50 97       	sbiw	r26, 0x10	; 16
     ad2:	51 96       	adiw	r26, 0x11	; 17
     ad4:	1c 92       	st	X, r1
     ad6:	51 97       	sbiw	r26, 0x11	; 17
     ad8:	52 96       	adiw	r26, 0x12	; 18
     ada:	1c 92       	st	X, r1
     adc:	52 97       	sbiw	r26, 0x12	; 18
     ade:	53 96       	adiw	r26, 0x13	; 19
     ae0:	1c 92       	st	X, r1
     ae2:	53 97       	sbiw	r26, 0x13	; 19
	}
	
	writeToSlave(RP6_ADDRESS, sendDataTWI);
     ae4:	bd 01       	movw	r22, r26
     ae6:	83 e0       	ldi	r24, 0x03	; 3
     ae8:	51 df       	rcall	.-350    	; 0x98c <writeToSlave>
}
     aea:	cf 91       	pop	r28
     aec:	0f 91       	pop	r16
     aee:	08 95       	ret

00000af0 <readFromCompass>:
	
	TWISendStop();
	
}

void readFromCompass(){
     af0:	ef 92       	push	r14
     af2:	ff 92       	push	r15
     af4:	0f 93       	push	r16
     af6:	1f 93       	push	r17
     af8:	cf 93       	push	r28
     afa:	df 93       	push	r29
	compassFlag = 1;
     afc:	81 e0       	ldi	r24, 0x01	; 1
     afe:	90 e0       	ldi	r25, 0x00	; 0
     b00:	90 93 43 03 	sts	0x0343, r25	; 0x800343 <compassFlag+0x1>
     b04:	80 93 42 03 	sts	0x0342, r24	; 0x800342 <compassFlag>
	TWISendStart();
     b08:	cc eb       	ldi	r28, 0xBC	; 188
     b0a:	d0 e0       	ldi	r29, 0x00	; 0
     b0c:	05 ea       	ldi	r16, 0xA5	; 165
     b0e:	08 83       	st	Y, r16
	TWIwaitUntilReady();
     b10:	0d df       	rcall	.-486    	; 0x92c <TWIwaitUntilReady>
	checkCode(0x08);
     b12:	88 e0       	ldi	r24, 0x08	; 8
     b14:	11 df       	rcall	.-478    	; 0x938 <checkCode>
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     b16:	0f 2e       	mov	r0, r31
     b18:	fb eb       	ldi	r31, 0xBB	; 187
     b1a:	ef 2e       	mov	r14, r31
     b1c:	f1 2c       	mov	r15, r1
     b1e:	f0 2d       	mov	r31, r0
     b20:	80 ec       	ldi	r24, 0xC0	; 192
     b22:	f7 01       	movw	r30, r14
     b24:	80 83       	st	Z, r24
	TWISendTransmit();
     b26:	15 e8       	ldi	r17, 0x85	; 133
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite(0xC0);
	TWIwaitUntilReady();
     b28:	18 83       	st	Y, r17
	checkCode(0x18);
     b2a:	00 df       	rcall	.-512    	; 0x92c <TWIwaitUntilReady>
     b2c:	88 e1       	ldi	r24, 0x18	; 24
     b2e:	04 df       	rcall	.-504    	; 0x938 <checkCode>
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     b30:	81 e0       	ldi	r24, 0x01	; 1
     b32:	f7 01       	movw	r30, r14
	TWISendTransmit();
     b34:	80 83       	st	Z, r24
	TWIWrite(0xC0);
	TWIwaitUntilReady();
	checkCode(0x18);
	
	TWIWrite(1);
	TWIwaitUntilReady();
     b36:	18 83       	st	Y, r17
	checkCode(0x28);
     b38:	f9 de       	rcall	.-526    	; 0x92c <TWIwaitUntilReady>
     b3a:	88 e2       	ldi	r24, 0x28	; 40
	
	TWISendStart();
     b3c:	fd de       	rcall	.-518    	; 0x938 <checkCode>
	TWIwaitUntilReady();
     b3e:	08 83       	st	Y, r16
	checkCode(0x10);
     b40:	f5 de       	rcall	.-534    	; 0x92c <TWIwaitUntilReady>
     b42:	80 e1       	ldi	r24, 0x10	; 16
     b44:	f9 de       	rcall	.-526    	; 0x938 <checkCode>
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     b46:	81 ec       	ldi	r24, 0xC1	; 193
     b48:	f7 01       	movw	r30, r14
     b4a:	80 83       	st	Z, r24
	TWISendTransmit();
     b4c:	18 83       	st	Y, r17
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x10);
	
	TWIWrite(0xC1);
	TWIwaitUntilReady();
     b4e:	ee de       	rcall	.-548    	; 0x92c <TWIwaitUntilReady>
     b50:	df 91       	pop	r29
}
     b52:	cf 91       	pop	r28
     b54:	1f 91       	pop	r17
     b56:	0f 91       	pop	r16
     b58:	ff 90       	pop	r15
     b5a:	ef 90       	pop	r14
     b5c:	08 95       	ret

00000b5e <readFromSlave>:
     b5e:	0f 93       	push	r16


void readFromSlave(uint8_t address){
     b60:	1f 93       	push	r17
     b62:	cf 93       	push	r28
     b64:	c8 2f       	mov	r28, r24
	
	TWISendStart();
     b66:	0c eb       	ldi	r16, 0xBC	; 188
     b68:	10 e0       	ldi	r17, 0x00	; 0
     b6a:	85 ea       	ldi	r24, 0xA5	; 165
     b6c:	f8 01       	movw	r30, r16
     b6e:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     b70:	dd de       	rcall	.-582    	; 0x92c <TWIwaitUntilReady>
	checkCode(0x08);
     b72:	88 e0       	ldi	r24, 0x08	; 8
     b74:	e1 de       	rcall	.-574    	; 0x938 <checkCode>
	
	TWIWrite( (address << 1) + 1 );
     b76:	cc 0f       	add	r28, r28
     b78:	cf 5f       	subi	r28, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     b7a:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     b7e:	85 e8       	ldi	r24, 0x85	; 133
     b80:	f8 01       	movw	r30, r16
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite( (address << 1) + 1 );
	TWIwaitUntilReady();
     b82:	80 83       	st	Z, r24
     b84:	d3 de       	rcall	.-602    	; 0x92c <TWIwaitUntilReady>
	
}
     b86:	cf 91       	pop	r28
     b88:	1f 91       	pop	r17
     b8a:	0f 91       	pop	r16
     b8c:	08 95       	ret

00000b8e <__vector_15>:
		break;
	}
}


ISR(TIMER2_OVF_vect){
     b8e:	1f 92       	push	r1
     b90:	0f 92       	push	r0
     b92:	0f b6       	in	r0, 0x3f	; 63
     b94:	0f 92       	push	r0
     b96:	11 24       	eor	r1, r1
     b98:	0b b6       	in	r0, 0x3b	; 59
     b9a:	0f 92       	push	r0
     b9c:	2f 93       	push	r18
     b9e:	3f 93       	push	r19
     ba0:	4f 93       	push	r20
     ba2:	5f 93       	push	r21
     ba4:	6f 93       	push	r22
     ba6:	7f 93       	push	r23
     ba8:	8f 93       	push	r24
     baa:	9f 93       	push	r25
     bac:	af 93       	push	r26
     bae:	bf 93       	push	r27
     bb0:	ef 93       	push	r30
     bb2:	ff 93       	push	r31
	static int counter = 0;
	
	if(counter == 4){
     bb4:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <__data_end>
     bb8:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <__data_end+0x1>
     bbc:	84 30       	cpi	r24, 0x04	; 4
     bbe:	91 05       	cpc	r25, r1
     bc0:	11 f4       	brne	.+4      	; 0xbc6 <__vector_15+0x38>
		rp6DataConstructor();
     bc2:	27 df       	rcall	.-434    	; 0xa12 <rp6DataConstructor>
     bc4:	0d c0       	rjmp	.+26     	; 0xbe0 <__vector_15+0x52>
	}else if(counter == 8){
     bc6:	88 30       	cpi	r24, 0x08	; 8
     bc8:	91 05       	cpc	r25, r1
		readFromCompass();
     bca:	11 f4       	brne	.+4      	; 0xbd0 <__vector_15+0x42>
     bcc:	91 df       	rcall	.-222    	; 0xaf0 <readFromCompass>
     bce:	08 c0       	rjmp	.+16     	; 0xbe0 <__vector_15+0x52>
	}else if(counter >= 12){
     bd0:	0c 97       	sbiw	r24, 0x0c	; 12
		readFromSlave(RP6_ADDRESS);
     bd2:	34 f0       	brlt	.+12     	; 0xbe0 <__vector_15+0x52>
     bd4:	83 e0       	ldi	r24, 0x03	; 3
     bd6:	c3 df       	rcall	.-122    	; 0xb5e <readFromSlave>
		counter = 0;
     bd8:	10 92 3f 02 	sts	0x023F, r1	; 0x80023f <__data_end+0x1>
     bdc:	10 92 3e 02 	sts	0x023E, r1	; 0x80023e <__data_end>
	}
	
	counter++;
     be0:	80 91 3e 02 	lds	r24, 0x023E	; 0x80023e <__data_end>
     be4:	90 91 3f 02 	lds	r25, 0x023F	; 0x80023f <__data_end+0x1>
     be8:	01 96       	adiw	r24, 0x01	; 1
     bea:	90 93 3f 02 	sts	0x023F, r25	; 0x80023f <__data_end+0x1>
     bee:	80 93 3e 02 	sts	0x023E, r24	; 0x80023e <__data_end>
}
     bf2:	ff 91       	pop	r31
     bf4:	ef 91       	pop	r30
     bf6:	bf 91       	pop	r27
     bf8:	af 91       	pop	r26
     bfa:	9f 91       	pop	r25
     bfc:	8f 91       	pop	r24
     bfe:	7f 91       	pop	r23
     c00:	6f 91       	pop	r22
     c02:	5f 91       	pop	r21
     c04:	4f 91       	pop	r20
     c06:	3f 91       	pop	r19
     c08:	2f 91       	pop	r18
     c0a:	0f 90       	pop	r0
     c0c:	0b be       	out	0x3b, r0	; 59
     c0e:	0f 90       	pop	r0
     c10:	0f be       	out	0x3f, r0	; 63
     c12:	0f 90       	pop	r0
     c14:	1f 90       	pop	r1
     c16:	18 95       	reti

00000c18 <writeChar>:
     c18:	e0 ec       	ldi	r30, 0xC0	; 192
     c1a:	f0 e0       	ldi	r31, 0x00	; 0
     c1c:	90 81       	ld	r25, Z
     c1e:	95 ff       	sbrs	r25, 5
     c20:	fd cf       	rjmp	.-6      	; 0xc1c <writeChar+0x4>
     c22:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     c26:	08 95       	ret

00000c28 <writeString>:
     c28:	0f 93       	push	r16
     c2a:	1f 93       	push	r17
     c2c:	cf 93       	push	r28
     c2e:	fc 01       	movw	r30, r24
     c30:	80 81       	ld	r24, Z
     c32:	88 23       	and	r24, r24
     c34:	51 f0       	breq	.+20     	; 0xc4a <writeString+0x22>
     c36:	8f 01       	movw	r16, r30
     c38:	c0 e0       	ldi	r28, 0x00	; 0
     c3a:	ee df       	rcall	.-36     	; 0xc18 <writeChar>
     c3c:	cf 5f       	subi	r28, 0xFF	; 255
     c3e:	f8 01       	movw	r30, r16
     c40:	ec 0f       	add	r30, r28
     c42:	f1 1d       	adc	r31, r1
     c44:	80 81       	ld	r24, Z
     c46:	81 11       	cpse	r24, r1
     c48:	f8 cf       	rjmp	.-16     	; 0xc3a <writeString+0x12>
     c4a:	cf 91       	pop	r28
     c4c:	1f 91       	pop	r17
     c4e:	0f 91       	pop	r16
     c50:	08 95       	ret

00000c52 <writeInt>:
     c52:	cf 93       	push	r28
     c54:	df 93       	push	r29
     c56:	cd b7       	in	r28, 0x3d	; 61
     c58:	de b7       	in	r29, 0x3e	; 62
     c5a:	28 97       	sbiw	r28, 0x08	; 8
     c5c:	0f b6       	in	r0, 0x3f	; 63
     c5e:	f8 94       	cli
     c60:	de bf       	out	0x3e, r29	; 62
     c62:	0f be       	out	0x3f, r0	; 63
     c64:	cd bf       	out	0x3d, r28	; 61
     c66:	4a e0       	ldi	r20, 0x0A	; 10
     c68:	be 01       	movw	r22, r28
     c6a:	6f 5f       	subi	r22, 0xFF	; 255
     c6c:	7f 4f       	sbci	r23, 0xFF	; 255
     c6e:	e2 d4       	rcall	.+2500   	; 0x1634 <__itoa_ncheck>
     c70:	ce 01       	movw	r24, r28
     c72:	01 96       	adiw	r24, 0x01	; 1
     c74:	d9 df       	rcall	.-78     	; 0xc28 <writeString>
     c76:	28 96       	adiw	r28, 0x08	; 8
     c78:	0f b6       	in	r0, 0x3f	; 63
     c7a:	f8 94       	cli
     c7c:	de bf       	out	0x3e, r29	; 62
     c7e:	0f be       	out	0x3f, r0	; 63
     c80:	cd bf       	out	0x3d, r28	; 61
     c82:	df 91       	pop	r29
     c84:	cf 91       	pop	r28
     c86:	08 95       	ret

00000c88 <initTimer>:
     c88:	e1 e8       	ldi	r30, 0x81	; 129
     c8a:	f0 e0       	ldi	r31, 0x00	; 0
     c8c:	80 81       	ld	r24, Z
     c8e:	82 60       	ori	r24, 0x02	; 2
     c90:	80 83       	st	Z, r24
     c92:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     c96:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     c9a:	08 95       	ret

00000c9c <ultrasonicSensor>:
     c9c:	cf 93       	push	r28
     c9e:	df 93       	push	r29
     ca0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     ca4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     ca8:	aa e0       	ldi	r26, 0x0A	; 10
     caa:	b1 e0       	ldi	r27, 0x01	; 1
     cac:	8c 91       	ld	r24, X
     cae:	82 60       	ori	r24, 0x02	; 2
     cb0:	8c 93       	st	X, r24
     cb2:	eb e0       	ldi	r30, 0x0B	; 11
     cb4:	f1 e0       	ldi	r31, 0x01	; 1
     cb6:	80 81       	ld	r24, Z
     cb8:	8d 7f       	andi	r24, 0xFD	; 253
     cba:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     cbc:	2a e0       	ldi	r18, 0x0A	; 10
     cbe:	2a 95       	dec	r18
     cc0:	f1 f7       	brne	.-4      	; 0xcbe <ultrasonicSensor+0x22>
     cc2:	00 c0       	rjmp	.+0      	; 0xcc4 <ultrasonicSensor+0x28>
     cc4:	80 81       	ld	r24, Z
     cc6:	82 60       	ori	r24, 0x02	; 2
     cc8:	80 83       	st	Z, r24
     cca:	8a e1       	ldi	r24, 0x1A	; 26
     ccc:	8a 95       	dec	r24
     cce:	f1 f7       	brne	.-4      	; 0xccc <ultrasonicSensor+0x30>
     cd0:	00 c0       	rjmp	.+0      	; 0xcd2 <ultrasonicSensor+0x36>
     cd2:	80 81       	ld	r24, Z
     cd4:	8d 7f       	andi	r24, 0xFD	; 253
     cd6:	80 83       	st	Z, r24
     cd8:	8c 91       	ld	r24, X
     cda:	8d 7f       	andi	r24, 0xFD	; 253
     cdc:	8c 93       	st	X, r24
     cde:	80 e0       	ldi	r24, 0x00	; 0
     ce0:	90 e0       	ldi	r25, 0x00	; 0
     ce2:	dc 01       	movw	r26, r24
     ce4:	e9 e0       	ldi	r30, 0x09	; 9
     ce6:	f1 e0       	ldi	r31, 0x01	; 1
     ce8:	0a c0       	rjmp	.+20     	; 0xcfe <ultrasonicSensor+0x62>
     cea:	01 96       	adiw	r24, 0x01	; 1
     cec:	a1 1d       	adc	r26, r1
     cee:	b1 1d       	adc	r27, r1
     cf0:	81 34       	cpi	r24, 0x41	; 65
     cf2:	2c e9       	ldi	r18, 0x9C	; 156
     cf4:	92 07       	cpc	r25, r18
     cf6:	a1 05       	cpc	r26, r1
     cf8:	b1 05       	cpc	r27, r1
     cfa:	09 f4       	brne	.+2      	; 0xcfe <ultrasonicSensor+0x62>
     cfc:	45 c0       	rjmp	.+138    	; 0xd88 <ultrasonicSensor+0xec>
     cfe:	20 81       	ld	r18, Z
     d00:	21 fd       	sbrc	r18, 1
     d02:	f3 cf       	rjmp	.-26     	; 0xcea <ultrasonicSensor+0x4e>
     d04:	e9 e0       	ldi	r30, 0x09	; 9
     d06:	f1 e0       	ldi	r31, 0x01	; 1
     d08:	0d c0       	rjmp	.+26     	; 0xd24 <ultrasonicSensor+0x88>
     d0a:	ac 01       	movw	r20, r24
     d0c:	bd 01       	movw	r22, r26
     d0e:	4f 5f       	subi	r20, 0xFF	; 255
     d10:	5f 4f       	sbci	r21, 0xFF	; 255
     d12:	6f 4f       	sbci	r22, 0xFF	; 255
     d14:	7f 4f       	sbci	r23, 0xFF	; 255
     d16:	80 34       	cpi	r24, 0x40	; 64
     d18:	9c 49       	sbci	r25, 0x9C	; 156
     d1a:	a1 05       	cpc	r26, r1
     d1c:	b1 05       	cpc	r27, r1
     d1e:	b9 f1       	breq	.+110    	; 0xd8e <ultrasonicSensor+0xf2>
     d20:	db 01       	movw	r26, r22
     d22:	ca 01       	movw	r24, r20
     d24:	20 81       	ld	r18, Z
     d26:	21 ff       	sbrs	r18, 1
     d28:	f0 cf       	rjmp	.-32     	; 0xd0a <ultrasonicSensor+0x6e>
     d2a:	c0 91 84 00 	lds	r28, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     d2e:	d0 91 85 00 	lds	r29, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     d32:	e9 e0       	ldi	r30, 0x09	; 9
     d34:	f1 e0       	ldi	r31, 0x01	; 1
     d36:	0d c0       	rjmp	.+26     	; 0xd52 <ultrasonicSensor+0xb6>
     d38:	ac 01       	movw	r20, r24
     d3a:	bd 01       	movw	r22, r26
     d3c:	4f 5f       	subi	r20, 0xFF	; 255
     d3e:	5f 4f       	sbci	r21, 0xFF	; 255
     d40:	6f 4f       	sbci	r22, 0xFF	; 255
     d42:	7f 4f       	sbci	r23, 0xFF	; 255
     d44:	80 34       	cpi	r24, 0x40	; 64
     d46:	9c 49       	sbci	r25, 0x9C	; 156
     d48:	a1 05       	cpc	r26, r1
     d4a:	b1 05       	cpc	r27, r1
     d4c:	19 f1       	breq	.+70     	; 0xd94 <ultrasonicSensor+0xf8>
     d4e:	db 01       	movw	r26, r22
     d50:	ca 01       	movw	r24, r20
     d52:	20 81       	ld	r18, Z
     d54:	21 fd       	sbrc	r18, 1
     d56:	f0 cf       	rjmp	.-32     	; 0xd38 <ultrasonicSensor+0x9c>
     d58:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     d5c:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     d60:	c9 01       	movw	r24, r18
     d62:	a0 e0       	ldi	r26, 0x00	; 0
     d64:	b0 e0       	ldi	r27, 0x00	; 0
     d66:	9c 01       	movw	r18, r24
     d68:	ad 01       	movw	r20, r26
     d6a:	2c 1b       	sub	r18, r28
     d6c:	3d 0b       	sbc	r19, r29
     d6e:	41 09       	sbc	r20, r1
     d70:	51 09       	sbc	r21, r1
     d72:	a3 eb       	ldi	r26, 0xB3	; 179
     d74:	b6 e0       	ldi	r27, 0x06	; 6
     d76:	89 d3       	rcall	.+1810   	; 0x148a <__muluhisi3>
     d78:	20 e2       	ldi	r18, 0x20	; 32
     d7a:	3e e4       	ldi	r19, 0x4E	; 78
     d7c:	40 e0       	ldi	r20, 0x00	; 0
     d7e:	50 e0       	ldi	r21, 0x00	; 0
     d80:	62 d3       	rcall	.+1732   	; 0x1446 <__udivmodsi4>
     d82:	c9 01       	movw	r24, r18
     d84:	05 97       	sbiw	r24, 0x05	; 5
     d86:	08 c0       	rjmp	.+16     	; 0xd98 <ultrasonicSensor+0xfc>
     d88:	80 e0       	ldi	r24, 0x00	; 0
     d8a:	90 e0       	ldi	r25, 0x00	; 0
     d8c:	05 c0       	rjmp	.+10     	; 0xd98 <ultrasonicSensor+0xfc>
     d8e:	80 e0       	ldi	r24, 0x00	; 0
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	02 c0       	rjmp	.+4      	; 0xd98 <ultrasonicSensor+0xfc>
     d94:	80 e0       	ldi	r24, 0x00	; 0
     d96:	90 e0       	ldi	r25, 0x00	; 0
     d98:	df 91       	pop	r29
     d9a:	cf 91       	pop	r28
     d9c:	08 95       	ret

00000d9e <__subsf3>:
     d9e:	50 58       	subi	r21, 0x80	; 128

00000da0 <__addsf3>:
     da0:	bb 27       	eor	r27, r27
     da2:	aa 27       	eor	r26, r26
     da4:	0e d0       	rcall	.+28     	; 0xdc2 <__addsf3x>
     da6:	e5 c0       	rjmp	.+458    	; 0xf72 <__fp_round>
     da8:	d6 d0       	rcall	.+428    	; 0xf56 <__fp_pscA>
     daa:	30 f0       	brcs	.+12     	; 0xdb8 <__addsf3+0x18>
     dac:	db d0       	rcall	.+438    	; 0xf64 <__fp_pscB>
     dae:	20 f0       	brcs	.+8      	; 0xdb8 <__addsf3+0x18>
     db0:	31 f4       	brne	.+12     	; 0xdbe <__addsf3+0x1e>
     db2:	9f 3f       	cpi	r25, 0xFF	; 255
     db4:	11 f4       	brne	.+4      	; 0xdba <__addsf3+0x1a>
     db6:	1e f4       	brtc	.+6      	; 0xdbe <__addsf3+0x1e>
     db8:	cb c0       	rjmp	.+406    	; 0xf50 <__fp_nan>
     dba:	0e f4       	brtc	.+2      	; 0xdbe <__addsf3+0x1e>
     dbc:	e0 95       	com	r30
     dbe:	e7 fb       	bst	r30, 7
     dc0:	c1 c0       	rjmp	.+386    	; 0xf44 <__fp_inf>

00000dc2 <__addsf3x>:
     dc2:	e9 2f       	mov	r30, r25
     dc4:	e7 d0       	rcall	.+462    	; 0xf94 <__fp_split3>
     dc6:	80 f3       	brcs	.-32     	; 0xda8 <__addsf3+0x8>
     dc8:	ba 17       	cp	r27, r26
     dca:	62 07       	cpc	r22, r18
     dcc:	73 07       	cpc	r23, r19
     dce:	84 07       	cpc	r24, r20
     dd0:	95 07       	cpc	r25, r21
     dd2:	18 f0       	brcs	.+6      	; 0xdda <__addsf3x+0x18>
     dd4:	71 f4       	brne	.+28     	; 0xdf2 <__addsf3x+0x30>
     dd6:	9e f5       	brtc	.+102    	; 0xe3e <__addsf3x+0x7c>
     dd8:	ff c0       	rjmp	.+510    	; 0xfd8 <__fp_zero>
     dda:	0e f4       	brtc	.+2      	; 0xdde <__addsf3x+0x1c>
     ddc:	e0 95       	com	r30
     dde:	0b 2e       	mov	r0, r27
     de0:	ba 2f       	mov	r27, r26
     de2:	a0 2d       	mov	r26, r0
     de4:	0b 01       	movw	r0, r22
     de6:	b9 01       	movw	r22, r18
     de8:	90 01       	movw	r18, r0
     dea:	0c 01       	movw	r0, r24
     dec:	ca 01       	movw	r24, r20
     dee:	a0 01       	movw	r20, r0
     df0:	11 24       	eor	r1, r1
     df2:	ff 27       	eor	r31, r31
     df4:	59 1b       	sub	r21, r25
     df6:	99 f0       	breq	.+38     	; 0xe1e <__addsf3x+0x5c>
     df8:	59 3f       	cpi	r21, 0xF9	; 249
     dfa:	50 f4       	brcc	.+20     	; 0xe10 <__addsf3x+0x4e>
     dfc:	50 3e       	cpi	r21, 0xE0	; 224
     dfe:	68 f1       	brcs	.+90     	; 0xe5a <__addsf3x+0x98>
     e00:	1a 16       	cp	r1, r26
     e02:	f0 40       	sbci	r31, 0x00	; 0
     e04:	a2 2f       	mov	r26, r18
     e06:	23 2f       	mov	r18, r19
     e08:	34 2f       	mov	r19, r20
     e0a:	44 27       	eor	r20, r20
     e0c:	58 5f       	subi	r21, 0xF8	; 248
     e0e:	f3 cf       	rjmp	.-26     	; 0xdf6 <__addsf3x+0x34>
     e10:	46 95       	lsr	r20
     e12:	37 95       	ror	r19
     e14:	27 95       	ror	r18
     e16:	a7 95       	ror	r26
     e18:	f0 40       	sbci	r31, 0x00	; 0
     e1a:	53 95       	inc	r21
     e1c:	c9 f7       	brne	.-14     	; 0xe10 <__addsf3x+0x4e>
     e1e:	7e f4       	brtc	.+30     	; 0xe3e <__addsf3x+0x7c>
     e20:	1f 16       	cp	r1, r31
     e22:	ba 0b       	sbc	r27, r26
     e24:	62 0b       	sbc	r22, r18
     e26:	73 0b       	sbc	r23, r19
     e28:	84 0b       	sbc	r24, r20
     e2a:	ba f0       	brmi	.+46     	; 0xe5a <__addsf3x+0x98>
     e2c:	91 50       	subi	r25, 0x01	; 1
     e2e:	a1 f0       	breq	.+40     	; 0xe58 <__addsf3x+0x96>
     e30:	ff 0f       	add	r31, r31
     e32:	bb 1f       	adc	r27, r27
     e34:	66 1f       	adc	r22, r22
     e36:	77 1f       	adc	r23, r23
     e38:	88 1f       	adc	r24, r24
     e3a:	c2 f7       	brpl	.-16     	; 0xe2c <__addsf3x+0x6a>
     e3c:	0e c0       	rjmp	.+28     	; 0xe5a <__addsf3x+0x98>
     e3e:	ba 0f       	add	r27, r26
     e40:	62 1f       	adc	r22, r18
     e42:	73 1f       	adc	r23, r19
     e44:	84 1f       	adc	r24, r20
     e46:	48 f4       	brcc	.+18     	; 0xe5a <__addsf3x+0x98>
     e48:	87 95       	ror	r24
     e4a:	77 95       	ror	r23
     e4c:	67 95       	ror	r22
     e4e:	b7 95       	ror	r27
     e50:	f7 95       	ror	r31
     e52:	9e 3f       	cpi	r25, 0xFE	; 254
     e54:	08 f0       	brcs	.+2      	; 0xe58 <__addsf3x+0x96>
     e56:	b3 cf       	rjmp	.-154    	; 0xdbe <__addsf3+0x1e>
     e58:	93 95       	inc	r25
     e5a:	88 0f       	add	r24, r24
     e5c:	08 f0       	brcs	.+2      	; 0xe60 <__addsf3x+0x9e>
     e5e:	99 27       	eor	r25, r25
     e60:	ee 0f       	add	r30, r30
     e62:	97 95       	ror	r25
     e64:	87 95       	ror	r24
     e66:	08 95       	ret

00000e68 <__fixsfsi>:
     e68:	04 d0       	rcall	.+8      	; 0xe72 <__fixunssfsi>
     e6a:	68 94       	set
     e6c:	b1 11       	cpse	r27, r1
     e6e:	b5 c0       	rjmp	.+362    	; 0xfda <__fp_szero>
     e70:	08 95       	ret

00000e72 <__fixunssfsi>:
     e72:	98 d0       	rcall	.+304    	; 0xfa4 <__fp_splitA>
     e74:	88 f0       	brcs	.+34     	; 0xe98 <__fixunssfsi+0x26>
     e76:	9f 57       	subi	r25, 0x7F	; 127
     e78:	90 f0       	brcs	.+36     	; 0xe9e <__fixunssfsi+0x2c>
     e7a:	b9 2f       	mov	r27, r25
     e7c:	99 27       	eor	r25, r25
     e7e:	b7 51       	subi	r27, 0x17	; 23
     e80:	a0 f0       	brcs	.+40     	; 0xeaa <__fixunssfsi+0x38>
     e82:	d1 f0       	breq	.+52     	; 0xeb8 <__fixunssfsi+0x46>
     e84:	66 0f       	add	r22, r22
     e86:	77 1f       	adc	r23, r23
     e88:	88 1f       	adc	r24, r24
     e8a:	99 1f       	adc	r25, r25
     e8c:	1a f0       	brmi	.+6      	; 0xe94 <__fixunssfsi+0x22>
     e8e:	ba 95       	dec	r27
     e90:	c9 f7       	brne	.-14     	; 0xe84 <__fixunssfsi+0x12>
     e92:	12 c0       	rjmp	.+36     	; 0xeb8 <__fixunssfsi+0x46>
     e94:	b1 30       	cpi	r27, 0x01	; 1
     e96:	81 f0       	breq	.+32     	; 0xeb8 <__fixunssfsi+0x46>
     e98:	9f d0       	rcall	.+318    	; 0xfd8 <__fp_zero>
     e9a:	b1 e0       	ldi	r27, 0x01	; 1
     e9c:	08 95       	ret
     e9e:	9c c0       	rjmp	.+312    	; 0xfd8 <__fp_zero>
     ea0:	67 2f       	mov	r22, r23
     ea2:	78 2f       	mov	r23, r24
     ea4:	88 27       	eor	r24, r24
     ea6:	b8 5f       	subi	r27, 0xF8	; 248
     ea8:	39 f0       	breq	.+14     	; 0xeb8 <__fixunssfsi+0x46>
     eaa:	b9 3f       	cpi	r27, 0xF9	; 249
     eac:	cc f3       	brlt	.-14     	; 0xea0 <__fixunssfsi+0x2e>
     eae:	86 95       	lsr	r24
     eb0:	77 95       	ror	r23
     eb2:	67 95       	ror	r22
     eb4:	b3 95       	inc	r27
     eb6:	d9 f7       	brne	.-10     	; 0xeae <__fixunssfsi+0x3c>
     eb8:	3e f4       	brtc	.+14     	; 0xec8 <__fixunssfsi+0x56>
     eba:	90 95       	com	r25
     ebc:	80 95       	com	r24
     ebe:	70 95       	com	r23
     ec0:	61 95       	neg	r22
     ec2:	7f 4f       	sbci	r23, 0xFF	; 255
     ec4:	8f 4f       	sbci	r24, 0xFF	; 255
     ec6:	9f 4f       	sbci	r25, 0xFF	; 255
     ec8:	08 95       	ret

00000eca <__floatunsisf>:
     eca:	e8 94       	clt
     ecc:	09 c0       	rjmp	.+18     	; 0xee0 <__floatsisf+0x12>

00000ece <__floatsisf>:
     ece:	97 fb       	bst	r25, 7
     ed0:	3e f4       	brtc	.+14     	; 0xee0 <__floatsisf+0x12>
     ed2:	90 95       	com	r25
     ed4:	80 95       	com	r24
     ed6:	70 95       	com	r23
     ed8:	61 95       	neg	r22
     eda:	7f 4f       	sbci	r23, 0xFF	; 255
     edc:	8f 4f       	sbci	r24, 0xFF	; 255
     ede:	9f 4f       	sbci	r25, 0xFF	; 255
     ee0:	99 23       	and	r25, r25
     ee2:	a9 f0       	breq	.+42     	; 0xf0e <__floatsisf+0x40>
     ee4:	f9 2f       	mov	r31, r25
     ee6:	96 e9       	ldi	r25, 0x96	; 150
     ee8:	bb 27       	eor	r27, r27
     eea:	93 95       	inc	r25
     eec:	f6 95       	lsr	r31
     eee:	87 95       	ror	r24
     ef0:	77 95       	ror	r23
     ef2:	67 95       	ror	r22
     ef4:	b7 95       	ror	r27
     ef6:	f1 11       	cpse	r31, r1
     ef8:	f8 cf       	rjmp	.-16     	; 0xeea <__floatsisf+0x1c>
     efa:	fa f4       	brpl	.+62     	; 0xf3a <__floatsisf+0x6c>
     efc:	bb 0f       	add	r27, r27
     efe:	11 f4       	brne	.+4      	; 0xf04 <__floatsisf+0x36>
     f00:	60 ff       	sbrs	r22, 0
     f02:	1b c0       	rjmp	.+54     	; 0xf3a <__floatsisf+0x6c>
     f04:	6f 5f       	subi	r22, 0xFF	; 255
     f06:	7f 4f       	sbci	r23, 0xFF	; 255
     f08:	8f 4f       	sbci	r24, 0xFF	; 255
     f0a:	9f 4f       	sbci	r25, 0xFF	; 255
     f0c:	16 c0       	rjmp	.+44     	; 0xf3a <__floatsisf+0x6c>
     f0e:	88 23       	and	r24, r24
     f10:	11 f0       	breq	.+4      	; 0xf16 <__floatsisf+0x48>
     f12:	96 e9       	ldi	r25, 0x96	; 150
     f14:	11 c0       	rjmp	.+34     	; 0xf38 <__floatsisf+0x6a>
     f16:	77 23       	and	r23, r23
     f18:	21 f0       	breq	.+8      	; 0xf22 <__floatsisf+0x54>
     f1a:	9e e8       	ldi	r25, 0x8E	; 142
     f1c:	87 2f       	mov	r24, r23
     f1e:	76 2f       	mov	r23, r22
     f20:	05 c0       	rjmp	.+10     	; 0xf2c <__floatsisf+0x5e>
     f22:	66 23       	and	r22, r22
     f24:	71 f0       	breq	.+28     	; 0xf42 <__floatsisf+0x74>
     f26:	96 e8       	ldi	r25, 0x86	; 134
     f28:	86 2f       	mov	r24, r22
     f2a:	70 e0       	ldi	r23, 0x00	; 0
     f2c:	60 e0       	ldi	r22, 0x00	; 0
     f2e:	2a f0       	brmi	.+10     	; 0xf3a <__floatsisf+0x6c>
     f30:	9a 95       	dec	r25
     f32:	66 0f       	add	r22, r22
     f34:	77 1f       	adc	r23, r23
     f36:	88 1f       	adc	r24, r24
     f38:	da f7       	brpl	.-10     	; 0xf30 <__floatsisf+0x62>
     f3a:	88 0f       	add	r24, r24
     f3c:	96 95       	lsr	r25
     f3e:	87 95       	ror	r24
     f40:	97 f9       	bld	r25, 7
     f42:	08 95       	ret

00000f44 <__fp_inf>:
     f44:	97 f9       	bld	r25, 7
     f46:	9f 67       	ori	r25, 0x7F	; 127
     f48:	80 e8       	ldi	r24, 0x80	; 128
     f4a:	70 e0       	ldi	r23, 0x00	; 0
     f4c:	60 e0       	ldi	r22, 0x00	; 0
     f4e:	08 95       	ret

00000f50 <__fp_nan>:
     f50:	9f ef       	ldi	r25, 0xFF	; 255
     f52:	80 ec       	ldi	r24, 0xC0	; 192
     f54:	08 95       	ret

00000f56 <__fp_pscA>:
     f56:	00 24       	eor	r0, r0
     f58:	0a 94       	dec	r0
     f5a:	16 16       	cp	r1, r22
     f5c:	17 06       	cpc	r1, r23
     f5e:	18 06       	cpc	r1, r24
     f60:	09 06       	cpc	r0, r25
     f62:	08 95       	ret

00000f64 <__fp_pscB>:
     f64:	00 24       	eor	r0, r0
     f66:	0a 94       	dec	r0
     f68:	12 16       	cp	r1, r18
     f6a:	13 06       	cpc	r1, r19
     f6c:	14 06       	cpc	r1, r20
     f6e:	05 06       	cpc	r0, r21
     f70:	08 95       	ret

00000f72 <__fp_round>:
     f72:	09 2e       	mov	r0, r25
     f74:	03 94       	inc	r0
     f76:	00 0c       	add	r0, r0
     f78:	11 f4       	brne	.+4      	; 0xf7e <__fp_round+0xc>
     f7a:	88 23       	and	r24, r24
     f7c:	52 f0       	brmi	.+20     	; 0xf92 <__fp_round+0x20>
     f7e:	bb 0f       	add	r27, r27
     f80:	40 f4       	brcc	.+16     	; 0xf92 <__fp_round+0x20>
     f82:	bf 2b       	or	r27, r31
     f84:	11 f4       	brne	.+4      	; 0xf8a <__fp_round+0x18>
     f86:	60 ff       	sbrs	r22, 0
     f88:	04 c0       	rjmp	.+8      	; 0xf92 <__fp_round+0x20>
     f8a:	6f 5f       	subi	r22, 0xFF	; 255
     f8c:	7f 4f       	sbci	r23, 0xFF	; 255
     f8e:	8f 4f       	sbci	r24, 0xFF	; 255
     f90:	9f 4f       	sbci	r25, 0xFF	; 255
     f92:	08 95       	ret

00000f94 <__fp_split3>:
     f94:	57 fd       	sbrc	r21, 7
     f96:	90 58       	subi	r25, 0x80	; 128
     f98:	44 0f       	add	r20, r20
     f9a:	55 1f       	adc	r21, r21
     f9c:	59 f0       	breq	.+22     	; 0xfb4 <__fp_splitA+0x10>
     f9e:	5f 3f       	cpi	r21, 0xFF	; 255
     fa0:	71 f0       	breq	.+28     	; 0xfbe <__fp_splitA+0x1a>
     fa2:	47 95       	ror	r20

00000fa4 <__fp_splitA>:
     fa4:	88 0f       	add	r24, r24
     fa6:	97 fb       	bst	r25, 7
     fa8:	99 1f       	adc	r25, r25
     faa:	61 f0       	breq	.+24     	; 0xfc4 <__fp_splitA+0x20>
     fac:	9f 3f       	cpi	r25, 0xFF	; 255
     fae:	79 f0       	breq	.+30     	; 0xfce <__fp_splitA+0x2a>
     fb0:	87 95       	ror	r24
     fb2:	08 95       	ret
     fb4:	12 16       	cp	r1, r18
     fb6:	13 06       	cpc	r1, r19
     fb8:	14 06       	cpc	r1, r20
     fba:	55 1f       	adc	r21, r21
     fbc:	f2 cf       	rjmp	.-28     	; 0xfa2 <__fp_split3+0xe>
     fbe:	46 95       	lsr	r20
     fc0:	f1 df       	rcall	.-30     	; 0xfa4 <__fp_splitA>
     fc2:	08 c0       	rjmp	.+16     	; 0xfd4 <__fp_splitA+0x30>
     fc4:	16 16       	cp	r1, r22
     fc6:	17 06       	cpc	r1, r23
     fc8:	18 06       	cpc	r1, r24
     fca:	99 1f       	adc	r25, r25
     fcc:	f1 cf       	rjmp	.-30     	; 0xfb0 <__fp_splitA+0xc>
     fce:	86 95       	lsr	r24
     fd0:	71 05       	cpc	r23, r1
     fd2:	61 05       	cpc	r22, r1
     fd4:	08 94       	sec
     fd6:	08 95       	ret

00000fd8 <__fp_zero>:
     fd8:	e8 94       	clt

00000fda <__fp_szero>:
     fda:	bb 27       	eor	r27, r27
     fdc:	66 27       	eor	r22, r22
     fde:	77 27       	eor	r23, r23
     fe0:	cb 01       	movw	r24, r22
     fe2:	97 f9       	bld	r25, 7
     fe4:	08 95       	ret

00000fe6 <pow>:
     fe6:	fa 01       	movw	r30, r20
     fe8:	ee 0f       	add	r30, r30
     fea:	ff 1f       	adc	r31, r31
     fec:	30 96       	adiw	r30, 0x00	; 0
     fee:	21 05       	cpc	r18, r1
     ff0:	31 05       	cpc	r19, r1
     ff2:	99 f1       	breq	.+102    	; 0x105a <pow+0x74>
     ff4:	61 15       	cp	r22, r1
     ff6:	71 05       	cpc	r23, r1
     ff8:	61 f4       	brne	.+24     	; 0x1012 <pow+0x2c>
     ffa:	80 38       	cpi	r24, 0x80	; 128
     ffc:	bf e3       	ldi	r27, 0x3F	; 63
     ffe:	9b 07       	cpc	r25, r27
    1000:	49 f1       	breq	.+82     	; 0x1054 <pow+0x6e>
    1002:	68 94       	set
    1004:	90 38       	cpi	r25, 0x80	; 128
    1006:	81 05       	cpc	r24, r1
    1008:	61 f0       	breq	.+24     	; 0x1022 <pow+0x3c>
    100a:	80 38       	cpi	r24, 0x80	; 128
    100c:	bf ef       	ldi	r27, 0xFF	; 255
    100e:	9b 07       	cpc	r25, r27
    1010:	41 f0       	breq	.+16     	; 0x1022 <pow+0x3c>
    1012:	99 23       	and	r25, r25
    1014:	42 f5       	brpl	.+80     	; 0x1066 <pow+0x80>
    1016:	ff 3f       	cpi	r31, 0xFF	; 255
    1018:	e1 05       	cpc	r30, r1
    101a:	31 05       	cpc	r19, r1
    101c:	21 05       	cpc	r18, r1
    101e:	11 f1       	breq	.+68     	; 0x1064 <pow+0x7e>
    1020:	e8 94       	clt
    1022:	08 94       	sec
    1024:	e7 95       	ror	r30
    1026:	d9 01       	movw	r26, r18
    1028:	aa 23       	and	r26, r26
    102a:	29 f4       	brne	.+10     	; 0x1036 <pow+0x50>
    102c:	ab 2f       	mov	r26, r27
    102e:	be 2f       	mov	r27, r30
    1030:	f8 5f       	subi	r31, 0xF8	; 248
    1032:	d0 f3       	brcs	.-12     	; 0x1028 <pow+0x42>
    1034:	10 c0       	rjmp	.+32     	; 0x1056 <pow+0x70>
    1036:	ff 5f       	subi	r31, 0xFF	; 255
    1038:	70 f4       	brcc	.+28     	; 0x1056 <pow+0x70>
    103a:	a6 95       	lsr	r26
    103c:	e0 f7       	brcc	.-8      	; 0x1036 <pow+0x50>
    103e:	f7 39       	cpi	r31, 0x97	; 151
    1040:	50 f0       	brcs	.+20     	; 0x1056 <pow+0x70>
    1042:	19 f0       	breq	.+6      	; 0x104a <pow+0x64>
    1044:	ff 3a       	cpi	r31, 0xAF	; 175
    1046:	38 f4       	brcc	.+14     	; 0x1056 <pow+0x70>
    1048:	9f 77       	andi	r25, 0x7F	; 127
    104a:	9f 93       	push	r25
    104c:	0c d0       	rcall	.+24     	; 0x1066 <pow+0x80>
    104e:	0f 90       	pop	r0
    1050:	07 fc       	sbrc	r0, 7
    1052:	90 58       	subi	r25, 0x80	; 128
    1054:	08 95       	ret
    1056:	3e f0       	brts	.+14     	; 0x1066 <pow+0x80>
    1058:	7b cf       	rjmp	.-266    	; 0xf50 <__fp_nan>
    105a:	60 e0       	ldi	r22, 0x00	; 0
    105c:	70 e0       	ldi	r23, 0x00	; 0
    105e:	80 e8       	ldi	r24, 0x80	; 128
    1060:	9f e3       	ldi	r25, 0x3F	; 63
    1062:	08 95       	ret
    1064:	4f e7       	ldi	r20, 0x7F	; 127
    1066:	9f 77       	andi	r25, 0x7F	; 127
    1068:	5f 93       	push	r21
    106a:	4f 93       	push	r20
    106c:	3f 93       	push	r19
    106e:	2f 93       	push	r18
    1070:	9e d0       	rcall	.+316    	; 0x11ae <log>
    1072:	2f 91       	pop	r18
    1074:	3f 91       	pop	r19
    1076:	4f 91       	pop	r20
    1078:	5f 91       	pop	r21
    107a:	0c d1       	rcall	.+536    	; 0x1294 <__mulsf3>
    107c:	05 c0       	rjmp	.+10     	; 0x1088 <exp>
    107e:	19 f4       	brne	.+6      	; 0x1086 <pow+0xa0>
    1080:	0e f0       	brts	.+2      	; 0x1084 <pow+0x9e>
    1082:	60 cf       	rjmp	.-320    	; 0xf44 <__fp_inf>
    1084:	a9 cf       	rjmp	.-174    	; 0xfd8 <__fp_zero>
    1086:	64 cf       	rjmp	.-312    	; 0xf50 <__fp_nan>

00001088 <exp>:
    1088:	8d df       	rcall	.-230    	; 0xfa4 <__fp_splitA>
    108a:	c8 f3       	brcs	.-14     	; 0x107e <pow+0x98>
    108c:	96 38       	cpi	r25, 0x86	; 134
    108e:	c0 f7       	brcc	.-16     	; 0x1080 <pow+0x9a>
    1090:	07 f8       	bld	r0, 7
    1092:	0f 92       	push	r0
    1094:	e8 94       	clt
    1096:	2b e3       	ldi	r18, 0x3B	; 59
    1098:	3a ea       	ldi	r19, 0xAA	; 170
    109a:	48 eb       	ldi	r20, 0xB8	; 184
    109c:	5f e7       	ldi	r21, 0x7F	; 127
    109e:	08 d1       	rcall	.+528    	; 0x12b0 <__mulsf3_pse>
    10a0:	0f 92       	push	r0
    10a2:	0f 92       	push	r0
    10a4:	0f 92       	push	r0
    10a6:	4d b7       	in	r20, 0x3d	; 61
    10a8:	5e b7       	in	r21, 0x3e	; 62
    10aa:	0f 92       	push	r0
    10ac:	c0 d0       	rcall	.+384    	; 0x122e <modf>
    10ae:	e4 ee       	ldi	r30, 0xE4	; 228
    10b0:	f0 e0       	ldi	r31, 0x00	; 0
    10b2:	16 d0       	rcall	.+44     	; 0x10e0 <__fp_powser>
    10b4:	4f 91       	pop	r20
    10b6:	5f 91       	pop	r21
    10b8:	ef 91       	pop	r30
    10ba:	ff 91       	pop	r31
    10bc:	e5 95       	asr	r30
    10be:	ee 1f       	adc	r30, r30
    10c0:	ff 1f       	adc	r31, r31
    10c2:	49 f0       	breq	.+18     	; 0x10d6 <exp+0x4e>
    10c4:	fe 57       	subi	r31, 0x7E	; 126
    10c6:	e0 68       	ori	r30, 0x80	; 128
    10c8:	44 27       	eor	r20, r20
    10ca:	ee 0f       	add	r30, r30
    10cc:	44 1f       	adc	r20, r20
    10ce:	fa 95       	dec	r31
    10d0:	e1 f7       	brne	.-8      	; 0x10ca <exp+0x42>
    10d2:	41 95       	neg	r20
    10d4:	55 0b       	sbc	r21, r21
    10d6:	32 d0       	rcall	.+100    	; 0x113c <ldexp>
    10d8:	0f 90       	pop	r0
    10da:	07 fe       	sbrs	r0, 7
    10dc:	26 c0       	rjmp	.+76     	; 0x112a <inverse>
    10de:	08 95       	ret

000010e0 <__fp_powser>:
    10e0:	df 93       	push	r29
    10e2:	cf 93       	push	r28
    10e4:	1f 93       	push	r17
    10e6:	0f 93       	push	r16
    10e8:	ff 92       	push	r15
    10ea:	ef 92       	push	r14
    10ec:	df 92       	push	r13
    10ee:	7b 01       	movw	r14, r22
    10f0:	8c 01       	movw	r16, r24
    10f2:	68 94       	set
    10f4:	05 c0       	rjmp	.+10     	; 0x1100 <__fp_powser+0x20>
    10f6:	da 2e       	mov	r13, r26
    10f8:	ef 01       	movw	r28, r30
    10fa:	d8 d0       	rcall	.+432    	; 0x12ac <__mulsf3x>
    10fc:	fe 01       	movw	r30, r28
    10fe:	e8 94       	clt
    1100:	a5 91       	lpm	r26, Z+
    1102:	25 91       	lpm	r18, Z+
    1104:	35 91       	lpm	r19, Z+
    1106:	45 91       	lpm	r20, Z+
    1108:	55 91       	lpm	r21, Z+
    110a:	ae f3       	brts	.-22     	; 0x10f6 <__fp_powser+0x16>
    110c:	ef 01       	movw	r28, r30
    110e:	59 de       	rcall	.-846    	; 0xdc2 <__addsf3x>
    1110:	fe 01       	movw	r30, r28
    1112:	97 01       	movw	r18, r14
    1114:	a8 01       	movw	r20, r16
    1116:	da 94       	dec	r13
    1118:	79 f7       	brne	.-34     	; 0x10f8 <__fp_powser+0x18>
    111a:	df 90       	pop	r13
    111c:	ef 90       	pop	r14
    111e:	ff 90       	pop	r15
    1120:	0f 91       	pop	r16
    1122:	1f 91       	pop	r17
    1124:	cf 91       	pop	r28
    1126:	df 91       	pop	r29
    1128:	08 95       	ret

0000112a <inverse>:
    112a:	9b 01       	movw	r18, r22
    112c:	ac 01       	movw	r20, r24
    112e:	60 e0       	ldi	r22, 0x00	; 0
    1130:	70 e0       	ldi	r23, 0x00	; 0
    1132:	80 e8       	ldi	r24, 0x80	; 128
    1134:	9f e3       	ldi	r25, 0x3F	; 63
    1136:	11 c1       	rjmp	.+546    	; 0x135a <__divsf3>
    1138:	05 cf       	rjmp	.-502    	; 0xf44 <__fp_inf>
    113a:	77 c1       	rjmp	.+750    	; 0x142a <__fp_mpack>

0000113c <ldexp>:
    113c:	33 df       	rcall	.-410    	; 0xfa4 <__fp_splitA>
    113e:	e8 f3       	brcs	.-6      	; 0x113a <inverse+0x10>
    1140:	99 23       	and	r25, r25
    1142:	d9 f3       	breq	.-10     	; 0x113a <inverse+0x10>
    1144:	94 0f       	add	r25, r20
    1146:	51 1d       	adc	r21, r1
    1148:	bb f3       	brvs	.-18     	; 0x1138 <inverse+0xe>
    114a:	91 50       	subi	r25, 0x01	; 1
    114c:	50 40       	sbci	r21, 0x00	; 0
    114e:	94 f0       	brlt	.+36     	; 0x1174 <ldexp+0x38>
    1150:	59 f0       	breq	.+22     	; 0x1168 <ldexp+0x2c>
    1152:	88 23       	and	r24, r24
    1154:	32 f0       	brmi	.+12     	; 0x1162 <ldexp+0x26>
    1156:	66 0f       	add	r22, r22
    1158:	77 1f       	adc	r23, r23
    115a:	88 1f       	adc	r24, r24
    115c:	91 50       	subi	r25, 0x01	; 1
    115e:	50 40       	sbci	r21, 0x00	; 0
    1160:	c1 f7       	brne	.-16     	; 0x1152 <ldexp+0x16>
    1162:	9e 3f       	cpi	r25, 0xFE	; 254
    1164:	51 05       	cpc	r21, r1
    1166:	44 f7       	brge	.-48     	; 0x1138 <inverse+0xe>
    1168:	88 0f       	add	r24, r24
    116a:	91 1d       	adc	r25, r1
    116c:	96 95       	lsr	r25
    116e:	87 95       	ror	r24
    1170:	97 f9       	bld	r25, 7
    1172:	08 95       	ret
    1174:	5f 3f       	cpi	r21, 0xFF	; 255
    1176:	ac f0       	brlt	.+42     	; 0x11a2 <ldexp+0x66>
    1178:	98 3e       	cpi	r25, 0xE8	; 232
    117a:	9c f0       	brlt	.+38     	; 0x11a2 <ldexp+0x66>
    117c:	bb 27       	eor	r27, r27
    117e:	86 95       	lsr	r24
    1180:	77 95       	ror	r23
    1182:	67 95       	ror	r22
    1184:	b7 95       	ror	r27
    1186:	08 f4       	brcc	.+2      	; 0x118a <ldexp+0x4e>
    1188:	b1 60       	ori	r27, 0x01	; 1
    118a:	93 95       	inc	r25
    118c:	c1 f7       	brne	.-16     	; 0x117e <ldexp+0x42>
    118e:	bb 0f       	add	r27, r27
    1190:	58 f7       	brcc	.-42     	; 0x1168 <ldexp+0x2c>
    1192:	11 f4       	brne	.+4      	; 0x1198 <ldexp+0x5c>
    1194:	60 ff       	sbrs	r22, 0
    1196:	e8 cf       	rjmp	.-48     	; 0x1168 <ldexp+0x2c>
    1198:	6f 5f       	subi	r22, 0xFF	; 255
    119a:	7f 4f       	sbci	r23, 0xFF	; 255
    119c:	8f 4f       	sbci	r24, 0xFF	; 255
    119e:	9f 4f       	sbci	r25, 0xFF	; 255
    11a0:	e3 cf       	rjmp	.-58     	; 0x1168 <ldexp+0x2c>
    11a2:	1b cf       	rjmp	.-458    	; 0xfda <__fp_szero>
    11a4:	0e f0       	brts	.+2      	; 0x11a8 <ldexp+0x6c>
    11a6:	41 c1       	rjmp	.+642    	; 0x142a <__fp_mpack>
    11a8:	d3 ce       	rjmp	.-602    	; 0xf50 <__fp_nan>
    11aa:	68 94       	set
    11ac:	cb ce       	rjmp	.-618    	; 0xf44 <__fp_inf>

000011ae <log>:
    11ae:	fa de       	rcall	.-524    	; 0xfa4 <__fp_splitA>
    11b0:	c8 f3       	brcs	.-14     	; 0x11a4 <ldexp+0x68>
    11b2:	99 23       	and	r25, r25
    11b4:	d1 f3       	breq	.-12     	; 0x11aa <ldexp+0x6e>
    11b6:	c6 f3       	brts	.-16     	; 0x11a8 <ldexp+0x6c>
    11b8:	df 93       	push	r29
    11ba:	cf 93       	push	r28
    11bc:	1f 93       	push	r17
    11be:	0f 93       	push	r16
    11c0:	ff 92       	push	r15
    11c2:	c9 2f       	mov	r28, r25
    11c4:	dd 27       	eor	r29, r29
    11c6:	88 23       	and	r24, r24
    11c8:	2a f0       	brmi	.+10     	; 0x11d4 <log+0x26>
    11ca:	21 97       	sbiw	r28, 0x01	; 1
    11cc:	66 0f       	add	r22, r22
    11ce:	77 1f       	adc	r23, r23
    11d0:	88 1f       	adc	r24, r24
    11d2:	da f7       	brpl	.-10     	; 0x11ca <log+0x1c>
    11d4:	20 e0       	ldi	r18, 0x00	; 0
    11d6:	30 e0       	ldi	r19, 0x00	; 0
    11d8:	40 e8       	ldi	r20, 0x80	; 128
    11da:	5f eb       	ldi	r21, 0xBF	; 191
    11dc:	9f e3       	ldi	r25, 0x3F	; 63
    11de:	88 39       	cpi	r24, 0x98	; 152
    11e0:	20 f0       	brcs	.+8      	; 0x11ea <log+0x3c>
    11e2:	80 3e       	cpi	r24, 0xE0	; 224
    11e4:	30 f0       	brcs	.+12     	; 0x11f2 <log+0x44>
    11e6:	21 96       	adiw	r28, 0x01	; 1
    11e8:	8f 77       	andi	r24, 0x7F	; 127
    11ea:	da dd       	rcall	.-1100   	; 0xda0 <__addsf3>
    11ec:	ec e0       	ldi	r30, 0x0C	; 12
    11ee:	f1 e0       	ldi	r31, 0x01	; 1
    11f0:	03 c0       	rjmp	.+6      	; 0x11f8 <log+0x4a>
    11f2:	d6 dd       	rcall	.-1108   	; 0xda0 <__addsf3>
    11f4:	e9 e3       	ldi	r30, 0x39	; 57
    11f6:	f1 e0       	ldi	r31, 0x01	; 1
    11f8:	73 df       	rcall	.-282    	; 0x10e0 <__fp_powser>
    11fa:	8b 01       	movw	r16, r22
    11fc:	be 01       	movw	r22, r28
    11fe:	ec 01       	movw	r28, r24
    1200:	fb 2e       	mov	r15, r27
    1202:	6f 57       	subi	r22, 0x7F	; 127
    1204:	71 09       	sbc	r23, r1
    1206:	75 95       	asr	r23
    1208:	77 1f       	adc	r23, r23
    120a:	88 0b       	sbc	r24, r24
    120c:	99 0b       	sbc	r25, r25
    120e:	5f de       	rcall	.-834    	; 0xece <__floatsisf>
    1210:	28 e1       	ldi	r18, 0x18	; 24
    1212:	32 e7       	ldi	r19, 0x72	; 114
    1214:	41 e3       	ldi	r20, 0x31	; 49
    1216:	5f e3       	ldi	r21, 0x3F	; 63
    1218:	49 d0       	rcall	.+146    	; 0x12ac <__mulsf3x>
    121a:	af 2d       	mov	r26, r15
    121c:	98 01       	movw	r18, r16
    121e:	ae 01       	movw	r20, r28
    1220:	ff 90       	pop	r15
    1222:	0f 91       	pop	r16
    1224:	1f 91       	pop	r17
    1226:	cf 91       	pop	r28
    1228:	df 91       	pop	r29
    122a:	cb dd       	rcall	.-1130   	; 0xdc2 <__addsf3x>
    122c:	a2 ce       	rjmp	.-700    	; 0xf72 <__fp_round>

0000122e <modf>:
    122e:	fa 01       	movw	r30, r20
    1230:	dc 01       	movw	r26, r24
    1232:	aa 0f       	add	r26, r26
    1234:	bb 1f       	adc	r27, r27
    1236:	9b 01       	movw	r18, r22
    1238:	ac 01       	movw	r20, r24
    123a:	bf 57       	subi	r27, 0x7F	; 127
    123c:	28 f4       	brcc	.+10     	; 0x1248 <modf+0x1a>
    123e:	22 27       	eor	r18, r18
    1240:	33 27       	eor	r19, r19
    1242:	44 27       	eor	r20, r20
    1244:	50 78       	andi	r21, 0x80	; 128
    1246:	1f c0       	rjmp	.+62     	; 0x1286 <modf+0x58>
    1248:	b7 51       	subi	r27, 0x17	; 23
    124a:	88 f4       	brcc	.+34     	; 0x126e <modf+0x40>
    124c:	ab 2f       	mov	r26, r27
    124e:	00 24       	eor	r0, r0
    1250:	46 95       	lsr	r20
    1252:	37 95       	ror	r19
    1254:	27 95       	ror	r18
    1256:	01 1c       	adc	r0, r1
    1258:	a3 95       	inc	r26
    125a:	d2 f3       	brmi	.-12     	; 0x1250 <modf+0x22>
    125c:	00 20       	and	r0, r0
    125e:	69 f0       	breq	.+26     	; 0x127a <modf+0x4c>
    1260:	22 0f       	add	r18, r18
    1262:	33 1f       	adc	r19, r19
    1264:	44 1f       	adc	r20, r20
    1266:	b3 95       	inc	r27
    1268:	da f3       	brmi	.-10     	; 0x1260 <modf+0x32>
    126a:	0d d0       	rcall	.+26     	; 0x1286 <modf+0x58>
    126c:	98 cd       	rjmp	.-1232   	; 0xd9e <__subsf3>
    126e:	61 30       	cpi	r22, 0x01	; 1
    1270:	71 05       	cpc	r23, r1
    1272:	a0 e8       	ldi	r26, 0x80	; 128
    1274:	8a 07       	cpc	r24, r26
    1276:	b9 46       	sbci	r27, 0x69	; 105
    1278:	30 f4       	brcc	.+12     	; 0x1286 <modf+0x58>
    127a:	9b 01       	movw	r18, r22
    127c:	ac 01       	movw	r20, r24
    127e:	66 27       	eor	r22, r22
    1280:	77 27       	eor	r23, r23
    1282:	88 27       	eor	r24, r24
    1284:	90 78       	andi	r25, 0x80	; 128
    1286:	30 96       	adiw	r30, 0x00	; 0
    1288:	21 f0       	breq	.+8      	; 0x1292 <modf+0x64>
    128a:	20 83       	st	Z, r18
    128c:	31 83       	std	Z+1, r19	; 0x01
    128e:	42 83       	std	Z+2, r20	; 0x02
    1290:	53 83       	std	Z+3, r21	; 0x03
    1292:	08 95       	ret

00001294 <__mulsf3>:
    1294:	0b d0       	rcall	.+22     	; 0x12ac <__mulsf3x>
    1296:	6d ce       	rjmp	.-806    	; 0xf72 <__fp_round>
    1298:	5e de       	rcall	.-836    	; 0xf56 <__fp_pscA>
    129a:	28 f0       	brcs	.+10     	; 0x12a6 <__mulsf3+0x12>
    129c:	63 de       	rcall	.-826    	; 0xf64 <__fp_pscB>
    129e:	18 f0       	brcs	.+6      	; 0x12a6 <__mulsf3+0x12>
    12a0:	95 23       	and	r25, r21
    12a2:	09 f0       	breq	.+2      	; 0x12a6 <__mulsf3+0x12>
    12a4:	4f ce       	rjmp	.-866    	; 0xf44 <__fp_inf>
    12a6:	54 ce       	rjmp	.-856    	; 0xf50 <__fp_nan>
    12a8:	11 24       	eor	r1, r1
    12aa:	97 ce       	rjmp	.-722    	; 0xfda <__fp_szero>

000012ac <__mulsf3x>:
    12ac:	73 de       	rcall	.-794    	; 0xf94 <__fp_split3>
    12ae:	a0 f3       	brcs	.-24     	; 0x1298 <__mulsf3+0x4>

000012b0 <__mulsf3_pse>:
    12b0:	95 9f       	mul	r25, r21
    12b2:	d1 f3       	breq	.-12     	; 0x12a8 <__mulsf3+0x14>
    12b4:	95 0f       	add	r25, r21
    12b6:	50 e0       	ldi	r21, 0x00	; 0
    12b8:	55 1f       	adc	r21, r21
    12ba:	62 9f       	mul	r22, r18
    12bc:	f0 01       	movw	r30, r0
    12be:	72 9f       	mul	r23, r18
    12c0:	bb 27       	eor	r27, r27
    12c2:	f0 0d       	add	r31, r0
    12c4:	b1 1d       	adc	r27, r1
    12c6:	63 9f       	mul	r22, r19
    12c8:	aa 27       	eor	r26, r26
    12ca:	f0 0d       	add	r31, r0
    12cc:	b1 1d       	adc	r27, r1
    12ce:	aa 1f       	adc	r26, r26
    12d0:	64 9f       	mul	r22, r20
    12d2:	66 27       	eor	r22, r22
    12d4:	b0 0d       	add	r27, r0
    12d6:	a1 1d       	adc	r26, r1
    12d8:	66 1f       	adc	r22, r22
    12da:	82 9f       	mul	r24, r18
    12dc:	22 27       	eor	r18, r18
    12de:	b0 0d       	add	r27, r0
    12e0:	a1 1d       	adc	r26, r1
    12e2:	62 1f       	adc	r22, r18
    12e4:	73 9f       	mul	r23, r19
    12e6:	b0 0d       	add	r27, r0
    12e8:	a1 1d       	adc	r26, r1
    12ea:	62 1f       	adc	r22, r18
    12ec:	83 9f       	mul	r24, r19
    12ee:	a0 0d       	add	r26, r0
    12f0:	61 1d       	adc	r22, r1
    12f2:	22 1f       	adc	r18, r18
    12f4:	74 9f       	mul	r23, r20
    12f6:	33 27       	eor	r19, r19
    12f8:	a0 0d       	add	r26, r0
    12fa:	61 1d       	adc	r22, r1
    12fc:	23 1f       	adc	r18, r19
    12fe:	84 9f       	mul	r24, r20
    1300:	60 0d       	add	r22, r0
    1302:	21 1d       	adc	r18, r1
    1304:	82 2f       	mov	r24, r18
    1306:	76 2f       	mov	r23, r22
    1308:	6a 2f       	mov	r22, r26
    130a:	11 24       	eor	r1, r1
    130c:	9f 57       	subi	r25, 0x7F	; 127
    130e:	50 40       	sbci	r21, 0x00	; 0
    1310:	8a f0       	brmi	.+34     	; 0x1334 <__mulsf3_pse+0x84>
    1312:	e1 f0       	breq	.+56     	; 0x134c <__mulsf3_pse+0x9c>
    1314:	88 23       	and	r24, r24
    1316:	4a f0       	brmi	.+18     	; 0x132a <__mulsf3_pse+0x7a>
    1318:	ee 0f       	add	r30, r30
    131a:	ff 1f       	adc	r31, r31
    131c:	bb 1f       	adc	r27, r27
    131e:	66 1f       	adc	r22, r22
    1320:	77 1f       	adc	r23, r23
    1322:	88 1f       	adc	r24, r24
    1324:	91 50       	subi	r25, 0x01	; 1
    1326:	50 40       	sbci	r21, 0x00	; 0
    1328:	a9 f7       	brne	.-22     	; 0x1314 <__mulsf3_pse+0x64>
    132a:	9e 3f       	cpi	r25, 0xFE	; 254
    132c:	51 05       	cpc	r21, r1
    132e:	70 f0       	brcs	.+28     	; 0x134c <__mulsf3_pse+0x9c>
    1330:	09 ce       	rjmp	.-1006   	; 0xf44 <__fp_inf>
    1332:	53 ce       	rjmp	.-858    	; 0xfda <__fp_szero>
    1334:	5f 3f       	cpi	r21, 0xFF	; 255
    1336:	ec f3       	brlt	.-6      	; 0x1332 <__mulsf3_pse+0x82>
    1338:	98 3e       	cpi	r25, 0xE8	; 232
    133a:	dc f3       	brlt	.-10     	; 0x1332 <__mulsf3_pse+0x82>
    133c:	86 95       	lsr	r24
    133e:	77 95       	ror	r23
    1340:	67 95       	ror	r22
    1342:	b7 95       	ror	r27
    1344:	f7 95       	ror	r31
    1346:	e7 95       	ror	r30
    1348:	9f 5f       	subi	r25, 0xFF	; 255
    134a:	c1 f7       	brne	.-16     	; 0x133c <__mulsf3_pse+0x8c>
    134c:	fe 2b       	or	r31, r30
    134e:	88 0f       	add	r24, r24
    1350:	91 1d       	adc	r25, r1
    1352:	96 95       	lsr	r25
    1354:	87 95       	ror	r24
    1356:	97 f9       	bld	r25, 7
    1358:	08 95       	ret

0000135a <__divsf3>:
    135a:	0c d0       	rcall	.+24     	; 0x1374 <__divsf3x>
    135c:	0a ce       	rjmp	.-1004   	; 0xf72 <__fp_round>
    135e:	02 de       	rcall	.-1020   	; 0xf64 <__fp_pscB>
    1360:	40 f0       	brcs	.+16     	; 0x1372 <__divsf3+0x18>
    1362:	f9 dd       	rcall	.-1038   	; 0xf56 <__fp_pscA>
    1364:	30 f0       	brcs	.+12     	; 0x1372 <__divsf3+0x18>
    1366:	21 f4       	brne	.+8      	; 0x1370 <__divsf3+0x16>
    1368:	5f 3f       	cpi	r21, 0xFF	; 255
    136a:	19 f0       	breq	.+6      	; 0x1372 <__divsf3+0x18>
    136c:	eb cd       	rjmp	.-1066   	; 0xf44 <__fp_inf>
    136e:	51 11       	cpse	r21, r1
    1370:	34 ce       	rjmp	.-920    	; 0xfda <__fp_szero>
    1372:	ee cd       	rjmp	.-1060   	; 0xf50 <__fp_nan>

00001374 <__divsf3x>:
    1374:	0f de       	rcall	.-994    	; 0xf94 <__fp_split3>
    1376:	98 f3       	brcs	.-26     	; 0x135e <__divsf3+0x4>

00001378 <__divsf3_pse>:
    1378:	99 23       	and	r25, r25
    137a:	c9 f3       	breq	.-14     	; 0x136e <__divsf3+0x14>
    137c:	55 23       	and	r21, r21
    137e:	b1 f3       	breq	.-20     	; 0x136c <__divsf3+0x12>
    1380:	95 1b       	sub	r25, r21
    1382:	55 0b       	sbc	r21, r21
    1384:	bb 27       	eor	r27, r27
    1386:	aa 27       	eor	r26, r26
    1388:	62 17       	cp	r22, r18
    138a:	73 07       	cpc	r23, r19
    138c:	84 07       	cpc	r24, r20
    138e:	38 f0       	brcs	.+14     	; 0x139e <__divsf3_pse+0x26>
    1390:	9f 5f       	subi	r25, 0xFF	; 255
    1392:	5f 4f       	sbci	r21, 0xFF	; 255
    1394:	22 0f       	add	r18, r18
    1396:	33 1f       	adc	r19, r19
    1398:	44 1f       	adc	r20, r20
    139a:	aa 1f       	adc	r26, r26
    139c:	a9 f3       	breq	.-22     	; 0x1388 <__divsf3_pse+0x10>
    139e:	33 d0       	rcall	.+102    	; 0x1406 <__divsf3_pse+0x8e>
    13a0:	0e 2e       	mov	r0, r30
    13a2:	3a f0       	brmi	.+14     	; 0x13b2 <__divsf3_pse+0x3a>
    13a4:	e0 e8       	ldi	r30, 0x80	; 128
    13a6:	30 d0       	rcall	.+96     	; 0x1408 <__divsf3_pse+0x90>
    13a8:	91 50       	subi	r25, 0x01	; 1
    13aa:	50 40       	sbci	r21, 0x00	; 0
    13ac:	e6 95       	lsr	r30
    13ae:	00 1c       	adc	r0, r0
    13b0:	ca f7       	brpl	.-14     	; 0x13a4 <__divsf3_pse+0x2c>
    13b2:	29 d0       	rcall	.+82     	; 0x1406 <__divsf3_pse+0x8e>
    13b4:	fe 2f       	mov	r31, r30
    13b6:	27 d0       	rcall	.+78     	; 0x1406 <__divsf3_pse+0x8e>
    13b8:	66 0f       	add	r22, r22
    13ba:	77 1f       	adc	r23, r23
    13bc:	88 1f       	adc	r24, r24
    13be:	bb 1f       	adc	r27, r27
    13c0:	26 17       	cp	r18, r22
    13c2:	37 07       	cpc	r19, r23
    13c4:	48 07       	cpc	r20, r24
    13c6:	ab 07       	cpc	r26, r27
    13c8:	b0 e8       	ldi	r27, 0x80	; 128
    13ca:	09 f0       	breq	.+2      	; 0x13ce <__divsf3_pse+0x56>
    13cc:	bb 0b       	sbc	r27, r27
    13ce:	80 2d       	mov	r24, r0
    13d0:	bf 01       	movw	r22, r30
    13d2:	ff 27       	eor	r31, r31
    13d4:	93 58       	subi	r25, 0x83	; 131
    13d6:	5f 4f       	sbci	r21, 0xFF	; 255
    13d8:	2a f0       	brmi	.+10     	; 0x13e4 <__divsf3_pse+0x6c>
    13da:	9e 3f       	cpi	r25, 0xFE	; 254
    13dc:	51 05       	cpc	r21, r1
    13de:	68 f0       	brcs	.+26     	; 0x13fa <__divsf3_pse+0x82>
    13e0:	b1 cd       	rjmp	.-1182   	; 0xf44 <__fp_inf>
    13e2:	fb cd       	rjmp	.-1034   	; 0xfda <__fp_szero>
    13e4:	5f 3f       	cpi	r21, 0xFF	; 255
    13e6:	ec f3       	brlt	.-6      	; 0x13e2 <__divsf3_pse+0x6a>
    13e8:	98 3e       	cpi	r25, 0xE8	; 232
    13ea:	dc f3       	brlt	.-10     	; 0x13e2 <__divsf3_pse+0x6a>
    13ec:	86 95       	lsr	r24
    13ee:	77 95       	ror	r23
    13f0:	67 95       	ror	r22
    13f2:	b7 95       	ror	r27
    13f4:	f7 95       	ror	r31
    13f6:	9f 5f       	subi	r25, 0xFF	; 255
    13f8:	c9 f7       	brne	.-14     	; 0x13ec <__divsf3_pse+0x74>
    13fa:	88 0f       	add	r24, r24
    13fc:	91 1d       	adc	r25, r1
    13fe:	96 95       	lsr	r25
    1400:	87 95       	ror	r24
    1402:	97 f9       	bld	r25, 7
    1404:	08 95       	ret
    1406:	e1 e0       	ldi	r30, 0x01	; 1
    1408:	66 0f       	add	r22, r22
    140a:	77 1f       	adc	r23, r23
    140c:	88 1f       	adc	r24, r24
    140e:	bb 1f       	adc	r27, r27
    1410:	62 17       	cp	r22, r18
    1412:	73 07       	cpc	r23, r19
    1414:	84 07       	cpc	r24, r20
    1416:	ba 07       	cpc	r27, r26
    1418:	20 f0       	brcs	.+8      	; 0x1422 <__divsf3_pse+0xaa>
    141a:	62 1b       	sub	r22, r18
    141c:	73 0b       	sbc	r23, r19
    141e:	84 0b       	sbc	r24, r20
    1420:	ba 0b       	sbc	r27, r26
    1422:	ee 1f       	adc	r30, r30
    1424:	88 f7       	brcc	.-30     	; 0x1408 <__divsf3_pse+0x90>
    1426:	e0 95       	com	r30
    1428:	08 95       	ret

0000142a <__fp_mpack>:
    142a:	9f 3f       	cpi	r25, 0xFF	; 255
    142c:	31 f0       	breq	.+12     	; 0x143a <__fp_mpack_finite+0xc>

0000142e <__fp_mpack_finite>:
    142e:	91 50       	subi	r25, 0x01	; 1
    1430:	20 f4       	brcc	.+8      	; 0x143a <__fp_mpack_finite+0xc>
    1432:	87 95       	ror	r24
    1434:	77 95       	ror	r23
    1436:	67 95       	ror	r22
    1438:	b7 95       	ror	r27
    143a:	88 0f       	add	r24, r24
    143c:	91 1d       	adc	r25, r1
    143e:	96 95       	lsr	r25
    1440:	87 95       	ror	r24
    1442:	97 f9       	bld	r25, 7
    1444:	08 95       	ret

00001446 <__udivmodsi4>:
    1446:	a1 e2       	ldi	r26, 0x21	; 33
    1448:	1a 2e       	mov	r1, r26
    144a:	aa 1b       	sub	r26, r26
    144c:	bb 1b       	sub	r27, r27
    144e:	fd 01       	movw	r30, r26
    1450:	0d c0       	rjmp	.+26     	; 0x146c <__udivmodsi4_ep>

00001452 <__udivmodsi4_loop>:
    1452:	aa 1f       	adc	r26, r26
    1454:	bb 1f       	adc	r27, r27
    1456:	ee 1f       	adc	r30, r30
    1458:	ff 1f       	adc	r31, r31
    145a:	a2 17       	cp	r26, r18
    145c:	b3 07       	cpc	r27, r19
    145e:	e4 07       	cpc	r30, r20
    1460:	f5 07       	cpc	r31, r21
    1462:	20 f0       	brcs	.+8      	; 0x146c <__udivmodsi4_ep>
    1464:	a2 1b       	sub	r26, r18
    1466:	b3 0b       	sbc	r27, r19
    1468:	e4 0b       	sbc	r30, r20
    146a:	f5 0b       	sbc	r31, r21

0000146c <__udivmodsi4_ep>:
    146c:	66 1f       	adc	r22, r22
    146e:	77 1f       	adc	r23, r23
    1470:	88 1f       	adc	r24, r24
    1472:	99 1f       	adc	r25, r25
    1474:	1a 94       	dec	r1
    1476:	69 f7       	brne	.-38     	; 0x1452 <__udivmodsi4_loop>
    1478:	60 95       	com	r22
    147a:	70 95       	com	r23
    147c:	80 95       	com	r24
    147e:	90 95       	com	r25
    1480:	9b 01       	movw	r18, r22
    1482:	ac 01       	movw	r20, r24
    1484:	bd 01       	movw	r22, r26
    1486:	cf 01       	movw	r24, r30
    1488:	08 95       	ret

0000148a <__muluhisi3>:
    148a:	c5 d0       	rcall	.+394    	; 0x1616 <__umulhisi3>
    148c:	a5 9f       	mul	r26, r21
    148e:	90 0d       	add	r25, r0
    1490:	b4 9f       	mul	r27, r20
    1492:	90 0d       	add	r25, r0
    1494:	a4 9f       	mul	r26, r20
    1496:	80 0d       	add	r24, r0
    1498:	91 1d       	adc	r25, r1
    149a:	11 24       	eor	r1, r1
    149c:	08 95       	ret

0000149e <__umoddi3>:
    149e:	68 94       	set
    14a0:	01 c0       	rjmp	.+2      	; 0x14a4 <__udivdi3_umoddi3>

000014a2 <__udivdi3>:
    14a2:	e8 94       	clt

000014a4 <__udivdi3_umoddi3>:
    14a4:	8f 92       	push	r8
    14a6:	9f 92       	push	r9
    14a8:	cf 93       	push	r28
    14aa:	df 93       	push	r29
    14ac:	05 d0       	rcall	.+10     	; 0x14b8 <__udivmod64>
    14ae:	df 91       	pop	r29
    14b0:	cf 91       	pop	r28
    14b2:	9f 90       	pop	r9
    14b4:	8f 90       	pop	r8
    14b6:	08 95       	ret

000014b8 <__udivmod64>:
    14b8:	88 24       	eor	r8, r8
    14ba:	99 24       	eor	r9, r9
    14bc:	f4 01       	movw	r30, r8
    14be:	e4 01       	movw	r28, r8
    14c0:	b0 e4       	ldi	r27, 0x40	; 64
    14c2:	9f 93       	push	r25
    14c4:	aa 27       	eor	r26, r26
    14c6:	9a 15       	cp	r25, r10
    14c8:	8b 04       	cpc	r8, r11
    14ca:	9c 04       	cpc	r9, r12
    14cc:	ed 05       	cpc	r30, r13
    14ce:	fe 05       	cpc	r31, r14
    14d0:	cf 05       	cpc	r28, r15
    14d2:	d0 07       	cpc	r29, r16
    14d4:	a1 07       	cpc	r26, r17
    14d6:	98 f4       	brcc	.+38     	; 0x14fe <__udivmod64+0x46>
    14d8:	ad 2f       	mov	r26, r29
    14da:	dc 2f       	mov	r29, r28
    14dc:	cf 2f       	mov	r28, r31
    14de:	fe 2f       	mov	r31, r30
    14e0:	e9 2d       	mov	r30, r9
    14e2:	98 2c       	mov	r9, r8
    14e4:	89 2e       	mov	r8, r25
    14e6:	98 2f       	mov	r25, r24
    14e8:	87 2f       	mov	r24, r23
    14ea:	76 2f       	mov	r23, r22
    14ec:	65 2f       	mov	r22, r21
    14ee:	54 2f       	mov	r21, r20
    14f0:	43 2f       	mov	r20, r19
    14f2:	32 2f       	mov	r19, r18
    14f4:	22 27       	eor	r18, r18
    14f6:	b8 50       	subi	r27, 0x08	; 8
    14f8:	31 f7       	brne	.-52     	; 0x14c6 <__udivmod64+0xe>
    14fa:	bf 91       	pop	r27
    14fc:	27 c0       	rjmp	.+78     	; 0x154c <__udivmod64+0x94>
    14fe:	1b 2e       	mov	r1, r27
    1500:	bf 91       	pop	r27
    1502:	bb 27       	eor	r27, r27
    1504:	22 0f       	add	r18, r18
    1506:	33 1f       	adc	r19, r19
    1508:	44 1f       	adc	r20, r20
    150a:	55 1f       	adc	r21, r21
    150c:	66 1f       	adc	r22, r22
    150e:	77 1f       	adc	r23, r23
    1510:	88 1f       	adc	r24, r24
    1512:	99 1f       	adc	r25, r25
    1514:	88 1c       	adc	r8, r8
    1516:	99 1c       	adc	r9, r9
    1518:	ee 1f       	adc	r30, r30
    151a:	ff 1f       	adc	r31, r31
    151c:	cc 1f       	adc	r28, r28
    151e:	dd 1f       	adc	r29, r29
    1520:	aa 1f       	adc	r26, r26
    1522:	bb 1f       	adc	r27, r27
    1524:	8a 14       	cp	r8, r10
    1526:	9b 04       	cpc	r9, r11
    1528:	ec 05       	cpc	r30, r12
    152a:	fd 05       	cpc	r31, r13
    152c:	ce 05       	cpc	r28, r14
    152e:	df 05       	cpc	r29, r15
    1530:	a0 07       	cpc	r26, r16
    1532:	b1 07       	cpc	r27, r17
    1534:	48 f0       	brcs	.+18     	; 0x1548 <__udivmod64+0x90>
    1536:	8a 18       	sub	r8, r10
    1538:	9b 08       	sbc	r9, r11
    153a:	ec 09       	sbc	r30, r12
    153c:	fd 09       	sbc	r31, r13
    153e:	ce 09       	sbc	r28, r14
    1540:	df 09       	sbc	r29, r15
    1542:	a0 0b       	sbc	r26, r16
    1544:	b1 0b       	sbc	r27, r17
    1546:	21 60       	ori	r18, 0x01	; 1
    1548:	1a 94       	dec	r1
    154a:	e1 f6       	brne	.-72     	; 0x1504 <__udivmod64+0x4c>
    154c:	2e f4       	brtc	.+10     	; 0x1558 <__udivmod64+0xa0>
    154e:	94 01       	movw	r18, r8
    1550:	af 01       	movw	r20, r30
    1552:	be 01       	movw	r22, r28
    1554:	cd 01       	movw	r24, r26
    1556:	00 0c       	add	r0, r0
    1558:	08 95       	ret

0000155a <__ashldi3>:
    155a:	0f 93       	push	r16
    155c:	08 30       	cpi	r16, 0x08	; 8
    155e:	90 f0       	brcs	.+36     	; 0x1584 <__ashldi3+0x2a>
    1560:	98 2f       	mov	r25, r24
    1562:	87 2f       	mov	r24, r23
    1564:	76 2f       	mov	r23, r22
    1566:	65 2f       	mov	r22, r21
    1568:	54 2f       	mov	r21, r20
    156a:	43 2f       	mov	r20, r19
    156c:	32 2f       	mov	r19, r18
    156e:	22 27       	eor	r18, r18
    1570:	08 50       	subi	r16, 0x08	; 8
    1572:	f4 cf       	rjmp	.-24     	; 0x155c <__ashldi3+0x2>
    1574:	22 0f       	add	r18, r18
    1576:	33 1f       	adc	r19, r19
    1578:	44 1f       	adc	r20, r20
    157a:	55 1f       	adc	r21, r21
    157c:	66 1f       	adc	r22, r22
    157e:	77 1f       	adc	r23, r23
    1580:	88 1f       	adc	r24, r24
    1582:	99 1f       	adc	r25, r25
    1584:	0a 95       	dec	r16
    1586:	b2 f7       	brpl	.-20     	; 0x1574 <__ashldi3+0x1a>
    1588:	0f 91       	pop	r16
    158a:	08 95       	ret

0000158c <__ashrdi3>:
    158c:	97 fb       	bst	r25, 7
    158e:	10 f8       	bld	r1, 0

00001590 <__lshrdi3>:
    1590:	16 94       	lsr	r1
    1592:	00 08       	sbc	r0, r0
    1594:	0f 93       	push	r16
    1596:	08 30       	cpi	r16, 0x08	; 8
    1598:	98 f0       	brcs	.+38     	; 0x15c0 <__lshrdi3+0x30>
    159a:	08 50       	subi	r16, 0x08	; 8
    159c:	23 2f       	mov	r18, r19
    159e:	34 2f       	mov	r19, r20
    15a0:	45 2f       	mov	r20, r21
    15a2:	56 2f       	mov	r21, r22
    15a4:	67 2f       	mov	r22, r23
    15a6:	78 2f       	mov	r23, r24
    15a8:	89 2f       	mov	r24, r25
    15aa:	90 2d       	mov	r25, r0
    15ac:	f4 cf       	rjmp	.-24     	; 0x1596 <__lshrdi3+0x6>
    15ae:	05 94       	asr	r0
    15b0:	97 95       	ror	r25
    15b2:	87 95       	ror	r24
    15b4:	77 95       	ror	r23
    15b6:	67 95       	ror	r22
    15b8:	57 95       	ror	r21
    15ba:	47 95       	ror	r20
    15bc:	37 95       	ror	r19
    15be:	27 95       	ror	r18
    15c0:	0a 95       	dec	r16
    15c2:	aa f7       	brpl	.-22     	; 0x15ae <__lshrdi3+0x1e>
    15c4:	0f 91       	pop	r16
    15c6:	08 95       	ret

000015c8 <__adddi3>:
    15c8:	2a 0d       	add	r18, r10
    15ca:	3b 1d       	adc	r19, r11
    15cc:	4c 1d       	adc	r20, r12
    15ce:	5d 1d       	adc	r21, r13
    15d0:	6e 1d       	adc	r22, r14
    15d2:	7f 1d       	adc	r23, r15
    15d4:	80 1f       	adc	r24, r16
    15d6:	91 1f       	adc	r25, r17
    15d8:	08 95       	ret

000015da <__adddi3_s8>:
    15da:	00 24       	eor	r0, r0
    15dc:	a7 fd       	sbrc	r26, 7
    15de:	00 94       	com	r0
    15e0:	2a 0f       	add	r18, r26
    15e2:	30 1d       	adc	r19, r0
    15e4:	40 1d       	adc	r20, r0
    15e6:	50 1d       	adc	r21, r0
    15e8:	60 1d       	adc	r22, r0
    15ea:	70 1d       	adc	r23, r0
    15ec:	80 1d       	adc	r24, r0
    15ee:	90 1d       	adc	r25, r0
    15f0:	08 95       	ret

000015f2 <__subdi3>:
    15f2:	2a 19       	sub	r18, r10
    15f4:	3b 09       	sbc	r19, r11
    15f6:	4c 09       	sbc	r20, r12
    15f8:	5d 09       	sbc	r21, r13
    15fa:	6e 09       	sbc	r22, r14
    15fc:	7f 09       	sbc	r23, r15
    15fe:	80 0b       	sbc	r24, r16
    1600:	91 0b       	sbc	r25, r17
    1602:	08 95       	ret

00001604 <__cmpdi2>:
    1604:	2a 15       	cp	r18, r10
    1606:	3b 05       	cpc	r19, r11
    1608:	4c 05       	cpc	r20, r12
    160a:	5d 05       	cpc	r21, r13
    160c:	6e 05       	cpc	r22, r14
    160e:	7f 05       	cpc	r23, r15
    1610:	80 07       	cpc	r24, r16
    1612:	91 07       	cpc	r25, r17
    1614:	08 95       	ret

00001616 <__umulhisi3>:
    1616:	a2 9f       	mul	r26, r18
    1618:	b0 01       	movw	r22, r0
    161a:	b3 9f       	mul	r27, r19
    161c:	c0 01       	movw	r24, r0
    161e:	a3 9f       	mul	r26, r19
    1620:	70 0d       	add	r23, r0
    1622:	81 1d       	adc	r24, r1
    1624:	11 24       	eor	r1, r1
    1626:	91 1d       	adc	r25, r1
    1628:	b2 9f       	mul	r27, r18
    162a:	70 0d       	add	r23, r0
    162c:	81 1d       	adc	r24, r1
    162e:	11 24       	eor	r1, r1
    1630:	91 1d       	adc	r25, r1
    1632:	08 95       	ret

00001634 <__itoa_ncheck>:
    1634:	bb 27       	eor	r27, r27
    1636:	4a 30       	cpi	r20, 0x0A	; 10
    1638:	31 f4       	brne	.+12     	; 0x1646 <__itoa_ncheck+0x12>
    163a:	99 23       	and	r25, r25
    163c:	22 f4       	brpl	.+8      	; 0x1646 <__itoa_ncheck+0x12>
    163e:	bd e2       	ldi	r27, 0x2D	; 45
    1640:	90 95       	com	r25
    1642:	81 95       	neg	r24
    1644:	9f 4f       	sbci	r25, 0xFF	; 255
    1646:	01 c0       	rjmp	.+2      	; 0x164a <__utoa_common>

00001648 <__utoa_ncheck>:
    1648:	bb 27       	eor	r27, r27

0000164a <__utoa_common>:
    164a:	fb 01       	movw	r30, r22
    164c:	55 27       	eor	r21, r21
    164e:	aa 27       	eor	r26, r26
    1650:	88 0f       	add	r24, r24
    1652:	99 1f       	adc	r25, r25
    1654:	aa 1f       	adc	r26, r26
    1656:	a4 17       	cp	r26, r20
    1658:	10 f0       	brcs	.+4      	; 0x165e <__utoa_common+0x14>
    165a:	a4 1b       	sub	r26, r20
    165c:	83 95       	inc	r24
    165e:	50 51       	subi	r21, 0x10	; 16
    1660:	b9 f7       	brne	.-18     	; 0x1650 <__utoa_common+0x6>
    1662:	a0 5d       	subi	r26, 0xD0	; 208
    1664:	aa 33       	cpi	r26, 0x3A	; 58
    1666:	08 f0       	brcs	.+2      	; 0x166a <__utoa_common+0x20>
    1668:	a9 5d       	subi	r26, 0xD9	; 217
    166a:	a1 93       	st	Z+, r26
    166c:	00 97       	sbiw	r24, 0x00	; 0
    166e:	79 f7       	brne	.-34     	; 0x164e <__utoa_common+0x4>
    1670:	b1 11       	cpse	r27, r1
    1672:	b1 93       	st	Z+, r27
    1674:	11 92       	st	Z+, r1
    1676:	cb 01       	movw	r24, r22
    1678:	00 c0       	rjmp	.+0      	; 0x167a <strrev>

0000167a <strrev>:
    167a:	dc 01       	movw	r26, r24
    167c:	fc 01       	movw	r30, r24
    167e:	67 2f       	mov	r22, r23
    1680:	71 91       	ld	r23, Z+
    1682:	77 23       	and	r23, r23
    1684:	e1 f7       	brne	.-8      	; 0x167e <strrev+0x4>
    1686:	32 97       	sbiw	r30, 0x02	; 2
    1688:	04 c0       	rjmp	.+8      	; 0x1692 <strrev+0x18>
    168a:	7c 91       	ld	r23, X
    168c:	6d 93       	st	X+, r22
    168e:	70 83       	st	Z, r23
    1690:	62 91       	ld	r22, -Z
    1692:	ae 17       	cp	r26, r30
    1694:	bf 07       	cpc	r27, r31
    1696:	c8 f3       	brcs	.-14     	; 0x168a <strrev+0x10>
    1698:	08 95       	ret

0000169a <_exit>:
    169a:	f8 94       	cli

0000169c <__stop_program>:
    169c:	ff cf       	rjmp	.-2      	; 0x169c <__stop_program>
