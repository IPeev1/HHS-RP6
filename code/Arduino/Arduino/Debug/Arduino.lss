
Arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800200  00000b96  00000c2a  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000b96  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000103  00800228  00800228  00000c52  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c52  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c84  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000080  00000000  00000000  00000cc4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000120f  00000000  00000000  00000d44  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000e63  00000000  00000000  00001f53  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006a7  00000000  00000000  00002db6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000001a0  00000000  00000000  00003460  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000006bb  00000000  00000000  00003600  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000005a2  00000000  00000000  00003cbb  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000078  00000000  00000000  0000425d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
   2:	00 00       	nop
   4:	cd c0       	rjmp	.+410    	; 0x1a0 <__bad_interrupt>
   6:	00 00       	nop
   8:	cb c0       	rjmp	.+406    	; 0x1a0 <__bad_interrupt>
   a:	00 00       	nop
   c:	c9 c0       	rjmp	.+402    	; 0x1a0 <__bad_interrupt>
   e:	00 00       	nop
  10:	c7 c0       	rjmp	.+398    	; 0x1a0 <__bad_interrupt>
  12:	00 00       	nop
  14:	c5 c0       	rjmp	.+394    	; 0x1a0 <__bad_interrupt>
  16:	00 00       	nop
  18:	c3 c0       	rjmp	.+390    	; 0x1a0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	c1 c0       	rjmp	.+386    	; 0x1a0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	bf c0       	rjmp	.+382    	; 0x1a0 <__bad_interrupt>
  22:	00 00       	nop
  24:	bd c0       	rjmp	.+378    	; 0x1a0 <__bad_interrupt>
  26:	00 00       	nop
  28:	bb c0       	rjmp	.+374    	; 0x1a0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	b9 c0       	rjmp	.+370    	; 0x1a0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	b7 c0       	rjmp	.+366    	; 0x1a0 <__bad_interrupt>
  32:	00 00       	nop
  34:	b5 c0       	rjmp	.+362    	; 0x1a0 <__bad_interrupt>
  36:	00 00       	nop
  38:	b3 c0       	rjmp	.+358    	; 0x1a0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	b1 c0       	rjmp	.+354    	; 0x1a0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	af c0       	rjmp	.+350    	; 0x1a0 <__bad_interrupt>
  42:	00 00       	nop
  44:	ad c0       	rjmp	.+346    	; 0x1a0 <__bad_interrupt>
  46:	00 00       	nop
  48:	ab c0       	rjmp	.+342    	; 0x1a0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	a9 c0       	rjmp	.+338    	; 0x1a0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	a7 c0       	rjmp	.+334    	; 0x1a0 <__bad_interrupt>
  52:	00 00       	nop
  54:	a5 c0       	rjmp	.+330    	; 0x1a0 <__bad_interrupt>
  56:	00 00       	nop
  58:	a3 c0       	rjmp	.+326    	; 0x1a0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	a1 c0       	rjmp	.+322    	; 0x1a0 <__bad_interrupt>
  5e:	00 00       	nop
  60:	9f c0       	rjmp	.+318    	; 0x1a0 <__bad_interrupt>
  62:	00 00       	nop
  64:	9e c0       	rjmp	.+316    	; 0x1a2 <__vector_25>
  66:	00 00       	nop
  68:	9b c0       	rjmp	.+310    	; 0x1a0 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	99 c0       	rjmp	.+306    	; 0x1a0 <__bad_interrupt>
  6e:	00 00       	nop
  70:	97 c0       	rjmp	.+302    	; 0x1a0 <__bad_interrupt>
  72:	00 00       	nop
  74:	95 c0       	rjmp	.+298    	; 0x1a0 <__bad_interrupt>
  76:	00 00       	nop
  78:	93 c0       	rjmp	.+294    	; 0x1a0 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	91 c0       	rjmp	.+290    	; 0x1a0 <__bad_interrupt>
  7e:	00 00       	nop
  80:	8f c0       	rjmp	.+286    	; 0x1a0 <__bad_interrupt>
  82:	00 00       	nop
  84:	8d c0       	rjmp	.+282    	; 0x1a0 <__bad_interrupt>
  86:	00 00       	nop
  88:	8b c0       	rjmp	.+278    	; 0x1a0 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	89 c0       	rjmp	.+274    	; 0x1a0 <__bad_interrupt>
  8e:	00 00       	nop
  90:	87 c0       	rjmp	.+270    	; 0x1a0 <__bad_interrupt>
  92:	00 00       	nop
  94:	85 c0       	rjmp	.+266    	; 0x1a0 <__bad_interrupt>
  96:	00 00       	nop
  98:	83 c0       	rjmp	.+262    	; 0x1a0 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	81 c0       	rjmp	.+258    	; 0x1a0 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	7f c0       	rjmp	.+254    	; 0x1a0 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	7d c0       	rjmp	.+250    	; 0x1a0 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	7b c0       	rjmp	.+246    	; 0x1a0 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	79 c0       	rjmp	.+242    	; 0x1a0 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	77 c0       	rjmp	.+238    	; 0x1a0 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	75 c0       	rjmp	.+234    	; 0x1a0 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	73 c0       	rjmp	.+230    	; 0x1a0 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	71 c0       	rjmp	.+226    	; 0x1a0 <__bad_interrupt>
  be:	00 00       	nop
  c0:	6f c0       	rjmp	.+222    	; 0x1a0 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	6d c0       	rjmp	.+218    	; 0x1a0 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	6b c0       	rjmp	.+214    	; 0x1a0 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	69 c0       	rjmp	.+210    	; 0x1a0 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	67 c0       	rjmp	.+206    	; 0x1a0 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	65 c0       	rjmp	.+202    	; 0x1a0 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	63 c0       	rjmp	.+198    	; 0x1a0 <__bad_interrupt>
  da:	00 00       	nop
  dc:	61 c0       	rjmp	.+194    	; 0x1a0 <__bad_interrupt>
  de:	00 00       	nop
  e0:	5f c0       	rjmp	.+190    	; 0x1a0 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	07 63       	ori	r16, 0x37	; 55
  e6:	42 36       	cpi	r20, 0x62	; 98
  e8:	b7 9b       	sbis	0x16, 7	; 22
  ea:	d8 a7       	std	Y+40, r29	; 0x28
  ec:	1a 39       	cpi	r17, 0x9A	; 154
  ee:	68 56       	subi	r22, 0x68	; 104
  f0:	18 ae       	std	Y+56, r1	; 0x38
  f2:	ba ab       	std	Y+50, r27	; 0x32
  f4:	55 8c       	ldd	r5, Z+29	; 0x1d
  f6:	1d 3c       	cpi	r17, 0xCD	; 205
  f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
  fa:	57 63       	ori	r21, 0x37	; 55
  fc:	bd 6d       	ori	r27, 0xDD	; 221
  fe:	ed fd       	.word	0xfded	; ????
 100:	75 3e       	cpi	r23, 0xE5	; 229
 102:	f6 17       	cp	r31, r22
 104:	72 31       	cpi	r23, 0x12	; 18
 106:	bf 00       	.word	0x00bf	; ????
 108:	00 00       	nop
 10a:	80 3f       	cpi	r24, 0xF0	; 240
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 00       	nop
 110:	be 92       	st	-X, r11
 112:	24 49       	sbci	r18, 0x94	; 148
 114:	12 3e       	cpi	r17, 0xE2	; 226
 116:	ab aa       	std	Y+51, r10	; 0x33
 118:	aa 2a       	or	r10, r26
 11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
 11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
 11e:	4c 3e       	cpi	r20, 0xEC	; 236
 120:	00 00       	nop
 122:	00 80       	ld	r0, Z
 124:	be ab       	std	Y+54, r27	; 0x36
 126:	aa aa       	std	Y+50, r10	; 0x32
 128:	aa 3e       	cpi	r26, 0xEA	; 234
 12a:	00 00       	nop
 12c:	00 00       	nop
 12e:	bf 00       	.word	0x00bf	; ????
 130:	00 00       	nop
 132:	80 3f       	cpi	r24, 0xF0	; 240
 134:	00 00       	nop
 136:	00 00       	nop
 138:	00 08       	sbc	r0, r0
 13a:	41 78       	andi	r20, 0x81	; 129
 13c:	d3 bb       	out	0x13, r29	; 19
 13e:	43 87       	std	Z+11, r20	; 0x0b
 140:	d1 13       	cpse	r29, r17
 142:	3d 19       	sub	r19, r13
 144:	0e 3c       	cpi	r16, 0xCE	; 206
 146:	c3 bd       	out	0x23, r28	; 35
 148:	42 82       	std	Z+2, r4	; 0x02
 14a:	ad 2b       	or	r26, r29
 14c:	3e 68       	ori	r19, 0x8E	; 142
 14e:	ec 82       	std	Y+4, r14	; 0x04
 150:	76 be       	out	0x36, r7	; 54
 152:	d9 8f       	std	Y+25, r29	; 0x19
 154:	e1 a9       	ldd	r30, Z+49	; 0x31
 156:	3e 4c       	sbci	r19, 0xCE	; 206
 158:	80 ef       	ldi	r24, 0xF0	; 240
 15a:	ff be       	out	0x3f, r15	; 63
 15c:	01 c4       	rjmp	.+2050   	; 0x960 <modf+0x4c>
 15e:	ff 7f       	andi	r31, 0xFF	; 255
 160:	3f 00       	.word	0x003f	; ????
 162:	00 00       	nop
	...

00000166 <__ctors_end>:
 166:	11 24       	eor	r1, r1
 168:	1f be       	out	0x3f, r1	; 63
 16a:	cf ef       	ldi	r28, 0xFF	; 255
 16c:	d1 e2       	ldi	r29, 0x21	; 33
 16e:	de bf       	out	0x3e, r29	; 62
 170:	cd bf       	out	0x3d, r28	; 61

00000172 <__do_copy_data>:
 172:	12 e0       	ldi	r17, 0x02	; 2
 174:	a0 e0       	ldi	r26, 0x00	; 0
 176:	b2 e0       	ldi	r27, 0x02	; 2
 178:	e6 e9       	ldi	r30, 0x96	; 150
 17a:	fb e0       	ldi	r31, 0x0B	; 11
 17c:	00 e0       	ldi	r16, 0x00	; 0
 17e:	0b bf       	out	0x3b, r16	; 59
 180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x14>
 182:	07 90       	elpm	r0, Z+
 184:	0d 92       	st	X+, r0
 186:	a8 32       	cpi	r26, 0x28	; 40
 188:	b1 07       	cpc	r27, r17
 18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0x10>

0000018c <__do_clear_bss>:
 18c:	23 e0       	ldi	r18, 0x03	; 3
 18e:	a8 e2       	ldi	r26, 0x28	; 40
 190:	b2 e0       	ldi	r27, 0x02	; 2
 192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
 194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
 196:	ab 32       	cpi	r26, 0x2B	; 43
 198:	b2 07       	cpc	r27, r18
 19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
 19c:	03 d1       	rcall	.+518    	; 0x3a4 <main>
 19e:	f9 c4       	rjmp	.+2546   	; 0xb92 <_exit>

000001a0 <__bad_interrupt>:
 1a0:	2f cf       	rjmp	.-418    	; 0x0 <__vectors>

000001a2 <__vector_25>:
// Global variables
int8_t globalDriveDirection;		// Value -1, 0 or 1
int8_t globalTurnDirection;			// Value -1, 0 or 1
int8_t globalDriveThrottle;			//value between 0 - 100

ISR(USART_INTERRUPT_VECTOR) {
 1a2:	1f 92       	push	r1
 1a4:	0f 92       	push	r0
 1a6:	0f b6       	in	r0, 0x3f	; 63
 1a8:	0f 92       	push	r0
 1aa:	11 24       	eor	r1, r1
 1ac:	0b b6       	in	r0, 0x3b	; 59
 1ae:	0f 92       	push	r0
 1b0:	df 92       	push	r13
 1b2:	ef 92       	push	r14
 1b4:	ff 92       	push	r15
 1b6:	0f 93       	push	r16
 1b8:	1f 93       	push	r17
 1ba:	2f 93       	push	r18
 1bc:	3f 93       	push	r19
 1be:	4f 93       	push	r20
 1c0:	5f 93       	push	r21
 1c2:	6f 93       	push	r22
 1c4:	7f 93       	push	r23
 1c6:	8f 93       	push	r24
 1c8:	9f 93       	push	r25
 1ca:	af 93       	push	r26
 1cc:	bf 93       	push	r27
 1ce:	cf 93       	push	r28
 1d0:	df 93       	push	r29
 1d2:	ef 93       	push	r30
 1d4:	ff 93       	push	r31
	static char buffer[BUFFER_SIZE];											//Character buffer to store numerals
	static int bufferPos = -1;													//Represents which buffer positions are currently in use to store numerals
	static char received = 0;													//Stores the last character received through USART
	static char command = 0;													//Stores a character that represents a command. Default value is null
	
	received = UDR0;
 1d6:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	
	if ('0' <= received && received <= '9') {									//If received contains a a numeral
 1da:	90 ed       	ldi	r25, 0xD0	; 208
 1dc:	98 0f       	add	r25, r24
 1de:	9a 30       	cpi	r25, 0x0A	; 10
 1e0:	c0 f4       	brcc	.+48     	; 0x212 <__vector_25+0x70>
		
		if (command == 't') {													//If command 't' is currently set
 1e2:	90 91 27 03 	lds	r25, 0x0327	; 0x800327 <command.1922>
 1e6:	94 37       	cpi	r25, 0x74	; 116
 1e8:	09 f0       	breq	.+2      	; 0x1ec <__vector_25+0x4a>
 1ea:	c2 c0       	rjmp	.+388    	; 0x370 <__vector_25+0x1ce>
			if (bufferPos < BUFFER_SIZE)										//Check to prevent overflow of the buffer
 1ec:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
 1f0:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
 1f4:	2f 3f       	cpi	r18, 0xFF	; 255
 1f6:	31 05       	cpc	r19, r1
 1f8:	0c f0       	brlt	.+2      	; 0x1fc <__vector_25+0x5a>
 1fa:	ba c0       	rjmp	.+372    	; 0x370 <__vector_25+0x1ce>
				buffer[++bufferPos] = received;									//Add numeral to buffer
 1fc:	2f 5f       	subi	r18, 0xFF	; 255
 1fe:	3f 4f       	sbci	r19, 0xFF	; 255
 200:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <__data_start+0x1>
 204:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <__data_start>
 208:	f9 01       	movw	r30, r18
 20a:	e8 5d       	subi	r30, 0xD8	; 216
 20c:	fd 4f       	sbci	r31, 0xFD	; 253
 20e:	80 83       	st	Z, r24
 210:	af c0       	rjmp	.+350    	; 0x370 <__vector_25+0x1ce>
		}
			
	} else if ('a' <= received && received <= 'z') {							//If received contains a (lower case) letter
 212:	9f e9       	ldi	r25, 0x9F	; 159
 214:	98 0f       	add	r25, r24
 216:	9a 31       	cpi	r25, 0x1A	; 26
 218:	80 f4       	brcc	.+32     	; 0x23a <__vector_25+0x98>
		
		switch(received) {														//Each valid command is represented by a case
 21a:	85 37       	cpi	r24, 0x75	; 117
 21c:	40 f4       	brcc	.+16     	; 0x22e <__vector_25+0x8c>
 21e:	83 37       	cpi	r24, 0x73	; 115
 220:	48 f4       	brcc	.+18     	; 0x234 <__vector_25+0x92>
 222:	81 36       	cpi	r24, 0x61	; 97
 224:	39 f0       	breq	.+14     	; 0x234 <__vector_25+0x92>
 226:	84 36       	cpi	r24, 0x64	; 100
 228:	09 f0       	breq	.+2      	; 0x22c <__vector_25+0x8a>
 22a:	a2 c0       	rjmp	.+324    	; 0x370 <__vector_25+0x1ce>
 22c:	03 c0       	rjmp	.+6      	; 0x234 <__vector_25+0x92>
 22e:	87 37       	cpi	r24, 0x77	; 119
 230:	09 f0       	breq	.+2      	; 0x234 <__vector_25+0x92>
 232:	9e c0       	rjmp	.+316    	; 0x370 <__vector_25+0x1ce>
			case 'w':
			case 'a':
			case 's':
			case 'd':
			case 't':
			command = received;
 234:	80 93 27 03 	sts	0x0327, r24	; 0x800327 <command.1922>
 238:	9b c0       	rjmp	.+310    	; 0x370 <__vector_25+0x1ce>
		}
	} else if (received == '\r') {												//If received contains a carriage return
 23a:	8d 30       	cpi	r24, 0x0D	; 13
 23c:	09 f0       	breq	.+2      	; 0x240 <__vector_25+0x9e>
 23e:	98 c0       	rjmp	.+304    	; 0x370 <__vector_25+0x1ce>
		
		uint16_t intValue = 0;													//Value to be passed over I2C with the command. Default value is 0.
		
		if (command == 't') {													//If the command is 't', the buffer is converted to an integer and stored in intValue
 240:	80 91 27 03 	lds	r24, 0x0327	; 0x800327 <command.1922>
 244:	84 37       	cpi	r24, 0x74	; 116
 246:	b1 f5       	brne	.+108    	; 0x2b4 <__vector_25+0x112>
			uint8_t charToInt;
		
			for (uint8_t i = 0; i <= bufferPos; i++) {
 248:	00 91 00 02 	lds	r16, 0x0200	; 0x800200 <__data_start>
 24c:	10 91 01 02 	lds	r17, 0x0201	; 0x800201 <__data_start+0x1>
 250:	11 23       	and	r17, r17
 252:	0c f4       	brge	.+2      	; 0x256 <__vector_25+0xb4>
 254:	71 c0       	rjmp	.+226    	; 0x338 <__vector_25+0x196>
 256:	c0 e0       	ldi	r28, 0x00	; 0
 258:	d0 e0       	ldi	r29, 0x00	; 0
 25a:	d1 2c       	mov	r13, r1
 25c:	e1 2c       	mov	r14, r1
 25e:	f1 2c       	mov	r15, r1
				charToInt = (int) (buffer[i] - '0');
				intValue += charToInt * ((int)(pow(10, bufferPos - i) + 0.5));	//The 0.5 is necessary to properly convert the return value of pow() into an integer
 260:	b8 01       	movw	r22, r16
 262:	6c 1b       	sub	r22, r28
 264:	7d 0b       	sbc	r23, r29
 266:	07 2e       	mov	r0, r23
 268:	00 0c       	add	r0, r0
 26a:	88 0b       	sbc	r24, r24
 26c:	99 0b       	sbc	r25, r25
 26e:	a2 d1       	rcall	.+836    	; 0x5b4 <__floatsisf>
 270:	9b 01       	movw	r18, r22
 272:	ac 01       	movw	r20, r24
 274:	60 e0       	ldi	r22, 0x00	; 0
 276:	70 e0       	ldi	r23, 0x00	; 0
 278:	80 e2       	ldi	r24, 0x20	; 32
 27a:	91 e4       	ldi	r25, 0x41	; 65
 27c:	27 d2       	rcall	.+1102   	; 0x6cc <pow>
		
		if (command == 't') {													//If the command is 't', the buffer is converted to an integer and stored in intValue
			uint8_t charToInt;
		
			for (uint8_t i = 0; i <= bufferPos; i++) {
				charToInt = (int) (buffer[i] - '0');
 27e:	c8 5d       	subi	r28, 0xD8	; 216
 280:	dd 4f       	sbci	r29, 0xFD	; 253
				intValue += charToInt * ((int)(pow(10, bufferPos - i) + 0.5));	//The 0.5 is necessary to properly convert the return value of pow() into an integer
 282:	c8 81       	ld	r28, Y
 284:	c0 53       	subi	r28, 0x30	; 48
 286:	d0 e0       	ldi	r29, 0x00	; 0
 288:	20 e0       	ldi	r18, 0x00	; 0
 28a:	30 e0       	ldi	r19, 0x00	; 0
 28c:	40 e0       	ldi	r20, 0x00	; 0
 28e:	5f e3       	ldi	r21, 0x3F	; 63
 290:	fa d0       	rcall	.+500    	; 0x486 <__addsf3>
 292:	5d d1       	rcall	.+698    	; 0x54e <__fixsfsi>
 294:	c6 9f       	mul	r28, r22
 296:	90 01       	movw	r18, r0
 298:	c7 9f       	mul	r28, r23
 29a:	30 0d       	add	r19, r0
 29c:	d6 9f       	mul	r29, r22
 29e:	30 0d       	add	r19, r0
 2a0:	11 24       	eor	r1, r1
 2a2:	e2 0e       	add	r14, r18
 2a4:	f3 1e       	adc	r15, r19
		uint16_t intValue = 0;													//Value to be passed over I2C with the command. Default value is 0.
		
		if (command == 't') {													//If the command is 't', the buffer is converted to an integer and stored in intValue
			uint8_t charToInt;
		
			for (uint8_t i = 0; i <= bufferPos; i++) {
 2a6:	d3 94       	inc	r13
 2a8:	cd 2d       	mov	r28, r13
 2aa:	d0 e0       	ldi	r29, 0x00	; 0
 2ac:	0c 17       	cp	r16, r28
 2ae:	1d 07       	cpc	r17, r29
 2b0:	bc f6       	brge	.-82     	; 0x260 <__vector_25+0xbe>
 2b2:	3d c0       	rjmp	.+122    	; 0x32e <__vector_25+0x18c>
				charToInt = (int) (buffer[i] - '0');
				intValue += charToInt * ((int)(pow(10, bufferPos - i) + 0.5));	//The 0.5 is necessary to properly convert the return value of pow() into an integer
			}
			
		}
		if (command) {															//Only if a command is set is data transmitted
 2b4:	88 23       	and	r24, r24
 2b6:	09 f4       	brne	.+2      	; 0x2ba <__vector_25+0x118>
 2b8:	5b c0       	rjmp	.+182    	; 0x370 <__vector_25+0x1ce>
			
			switch (command) {
 2ba:	83 37       	cpi	r24, 0x73	; 115
 2bc:	01 f1       	breq	.+64     	; 0x2fe <__vector_25+0x15c>
 2be:	28 f4       	brcc	.+10     	; 0x2ca <__vector_25+0x128>
 2c0:	81 36       	cpi	r24, 0x61	; 97
 2c2:	91 f0       	breq	.+36     	; 0x2e8 <__vector_25+0x146>
 2c4:	84 36       	cpi	r24, 0x64	; 100
 2c6:	31 f1       	breq	.+76     	; 0x314 <__vector_25+0x172>
 2c8:	3b c0       	rjmp	.+118    	; 0x340 <__vector_25+0x19e>
 2ca:	84 37       	cpi	r24, 0x74	; 116
 2cc:	71 f1       	breq	.+92     	; 0x32a <__vector_25+0x188>
 2ce:	87 37       	cpi	r24, 0x77	; 119
 2d0:	b9 f5       	brne	.+110    	; 0x340 <__vector_25+0x19e>
				
				case 'w':
				if (globalDriveDirection == 1) {
 2d2:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <globalDriveDirection>
 2d6:	81 30       	cpi	r24, 0x01	; 1
 2d8:	19 f4       	brne	.+6      	; 0x2e0 <__vector_25+0x13e>
					globalDriveDirection = 0;
 2da:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <globalDriveDirection>
 2de:	30 c0       	rjmp	.+96     	; 0x340 <__vector_25+0x19e>
				} else {
					globalDriveDirection = 1;
 2e0:	81 e0       	ldi	r24, 0x01	; 1
 2e2:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <globalDriveDirection>
 2e6:	2c c0       	rjmp	.+88     	; 0x340 <__vector_25+0x19e>
				}
				break;
				
				case 'a':
				if (globalTurnDirection == -1) {
 2e8:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <globalTurnDirection>
 2ec:	8f 3f       	cpi	r24, 0xFF	; 255
 2ee:	19 f4       	brne	.+6      	; 0x2f6 <__vector_25+0x154>
					globalTurnDirection = 0;
 2f0:	10 92 28 03 	sts	0x0328, r1	; 0x800328 <globalTurnDirection>
 2f4:	25 c0       	rjmp	.+74     	; 0x340 <__vector_25+0x19e>
					} else {
					globalTurnDirection = -1;
 2f6:	8f ef       	ldi	r24, 0xFF	; 255
 2f8:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <globalTurnDirection>
 2fc:	21 c0       	rjmp	.+66     	; 0x340 <__vector_25+0x19e>
				}
				break;
				
				case 's':
				if (globalDriveDirection == -1) {
 2fe:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <globalDriveDirection>
 302:	8f 3f       	cpi	r24, 0xFF	; 255
 304:	19 f4       	brne	.+6      	; 0x30c <__vector_25+0x16a>
					globalDriveDirection = 0;
 306:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <globalDriveDirection>
 30a:	1a c0       	rjmp	.+52     	; 0x340 <__vector_25+0x19e>
				} else {
					globalDriveDirection = -1;
 30c:	8f ef       	ldi	r24, 0xFF	; 255
 30e:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <globalDriveDirection>
 312:	16 c0       	rjmp	.+44     	; 0x340 <__vector_25+0x19e>
				}
				break;
				
				case 'd':
				if (globalTurnDirection == 1) {
 314:	80 91 28 03 	lds	r24, 0x0328	; 0x800328 <globalTurnDirection>
 318:	81 30       	cpi	r24, 0x01	; 1
 31a:	19 f4       	brne	.+6      	; 0x322 <__vector_25+0x180>
					globalTurnDirection = 0;
 31c:	10 92 28 03 	sts	0x0328, r1	; 0x800328 <globalTurnDirection>
 320:	0f c0       	rjmp	.+30     	; 0x340 <__vector_25+0x19e>
					} else {
					globalTurnDirection = 1;
 322:	81 e0       	ldi	r24, 0x01	; 1
 324:	80 93 28 03 	sts	0x0328, r24	; 0x800328 <globalTurnDirection>
 328:	0b c0       	rjmp	.+22     	; 0x340 <__vector_25+0x19e>
			case 't':
			command = received;
		}
	} else if (received == '\r') {												//If received contains a carriage return
		
		uint16_t intValue = 0;													//Value to be passed over I2C with the command. Default value is 0.
 32a:	e1 2c       	mov	r14, r1
 32c:	f1 2c       	mov	r15, r1
					globalTurnDirection = 1;
				}
				break;
				
				case 't':
				if (intValue <= 100) {
 32e:	85 e6       	ldi	r24, 0x65	; 101
 330:	e8 16       	cp	r14, r24
 332:	f1 04       	cpc	r15, r1
 334:	28 f4       	brcc	.+10     	; 0x340 <__vector_25+0x19e>
 336:	02 c0       	rjmp	.+4      	; 0x33c <__vector_25+0x19a>
		uint16_t intValue = 0;													//Value to be passed over I2C with the command. Default value is 0.
		
		if (command == 't') {													//If the command is 't', the buffer is converted to an integer and stored in intValue
			uint8_t charToInt;
		
			for (uint8_t i = 0; i <= bufferPos; i++) {
 338:	e1 2c       	mov	r14, r1
 33a:	f1 2c       	mov	r15, r1
				}
				break;
				
				case 't':
				if (intValue <= 100) {
					globalDriveThrottle = intValue;
 33c:	e0 92 29 03 	sts	0x0329, r14	; 0x800329 <globalDriveThrottle>
				}
				break;
			}
		
			command = 0;														//Reset command
 340:	10 92 27 03 	sts	0x0327, r1	; 0x800327 <command.1922>
			bufferPos = -1;													//Reset buffer position
 344:	8f ef       	ldi	r24, 0xFF	; 255
 346:	9f ef       	ldi	r25, 0xFF	; 255
 348:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__data_start+0x1>
 34c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
			
			globalVariablesTransmitUSART(globalDriveDirection, globalTurnDirection, globalDriveThrottle);
 350:	40 91 29 03 	lds	r20, 0x0329	; 0x800329 <globalDriveThrottle>
 354:	04 2e       	mov	r0, r20
 356:	00 0c       	add	r0, r0
 358:	55 0b       	sbc	r21, r21
 35a:	60 91 28 03 	lds	r22, 0x0328	; 0x800328 <globalTurnDirection>
 35e:	06 2e       	mov	r0, r22
 360:	00 0c       	add	r0, r0
 362:	77 0b       	sbc	r23, r23
 364:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <globalDriveDirection>
 368:	08 2e       	mov	r0, r24
 36a:	00 0c       	add	r0, r0
 36c:	99 0b       	sbc	r25, r25
 36e:	68 d0       	rcall	.+208    	; 0x440 <globalVariablesTransmitUSART>
		}
	}
}
 370:	ff 91       	pop	r31
 372:	ef 91       	pop	r30
 374:	df 91       	pop	r29
 376:	cf 91       	pop	r28
 378:	bf 91       	pop	r27
 37a:	af 91       	pop	r26
 37c:	9f 91       	pop	r25
 37e:	8f 91       	pop	r24
 380:	7f 91       	pop	r23
 382:	6f 91       	pop	r22
 384:	5f 91       	pop	r21
 386:	4f 91       	pop	r20
 388:	3f 91       	pop	r19
 38a:	2f 91       	pop	r18
 38c:	1f 91       	pop	r17
 38e:	0f 91       	pop	r16
 390:	ff 90       	pop	r15
 392:	ef 90       	pop	r14
 394:	df 90       	pop	r13
 396:	0f 90       	pop	r0
 398:	0b be       	out	0x3b, r0	; 59
 39a:	0f 90       	pop	r0
 39c:	0f be       	out	0x3f, r0	; 63
 39e:	0f 90       	pop	r0
 3a0:	1f 90       	pop	r1
 3a2:	18 95       	reti

000003a4 <main>:

int main(void)
{	
	//USART initialization
	UCSR0A = 0x00;								
 3a4:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UCSR0B |= (1 << RXCIE0 | 1 << RXEN0);		//Enable USART receiver, receiver interrupt
 3a8:	e1 ec       	ldi	r30, 0xC1	; 193
 3aa:	f0 e0       	ldi	r31, 0x00	; 0
 3ac:	80 81       	ld	r24, Z
 3ae:	80 69       	ori	r24, 0x90	; 144
 3b0:	80 83       	st	Z, r24
	UCSR0B |= 1 << TXEN0;	/*Transmitter enabled for testing*/
 3b2:	80 81       	ld	r24, Z
 3b4:	88 60       	ori	r24, 0x08	; 8
 3b6:	80 83       	st	Z, r24
	UCSR0C |= (1 << UCSZ01 | 1 << UCSZ00);		//Asynchronous USART, Parity none, 1 Stop bit, 8-bit character size
 3b8:	e2 ec       	ldi	r30, 0xC2	; 194
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	80 81       	ld	r24, Z
 3be:	86 60       	ori	r24, 0x06	; 6
 3c0:	80 83       	st	Z, r24
	UBRR0H = 00;
 3c2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = 103;								//Baudrate 9600
 3c6:	87 e6       	ldi	r24, 0x67	; 103
 3c8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	sei();										//Enable interrupt routines
 3cc:	78 94       	sei
 3ce:	ff cf       	rjmp	.-2      	; 0x3ce <main+0x2a>

000003d0 <writeChar>:
 3d0:	e0 ec       	ldi	r30, 0xC0	; 192
 3d2:	f0 e0       	ldi	r31, 0x00	; 0
 3d4:	90 81       	ld	r25, Z
 3d6:	95 ff       	sbrs	r25, 5
 3d8:	fd cf       	rjmp	.-6      	; 0x3d4 <writeChar+0x4>
 3da:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 3de:	08 95       	ret

000003e0 <writeString>:
 3e0:	0f 93       	push	r16
 3e2:	1f 93       	push	r17
 3e4:	cf 93       	push	r28
 3e6:	fc 01       	movw	r30, r24
 3e8:	80 81       	ld	r24, Z
 3ea:	88 23       	and	r24, r24
 3ec:	51 f0       	breq	.+20     	; 0x402 <__LOCK_REGION_LENGTH__+0x2>
 3ee:	8f 01       	movw	r16, r30
 3f0:	c0 e0       	ldi	r28, 0x00	; 0
 3f2:	ee df       	rcall	.-36     	; 0x3d0 <writeChar>
 3f4:	cf 5f       	subi	r28, 0xFF	; 255
 3f6:	f8 01       	movw	r30, r16
 3f8:	ec 0f       	add	r30, r28
 3fa:	f1 1d       	adc	r31, r1
 3fc:	80 81       	ld	r24, Z
 3fe:	81 11       	cpse	r24, r1
 400:	f8 cf       	rjmp	.-16     	; 0x3f2 <writeString+0x12>
 402:	cf 91       	pop	r28
 404:	1f 91       	pop	r17
 406:	0f 91       	pop	r16
 408:	08 95       	ret

0000040a <writeInt>:
 40a:	cf 93       	push	r28
 40c:	df 93       	push	r29
 40e:	cd b7       	in	r28, 0x3d	; 61
 410:	de b7       	in	r29, 0x3e	; 62
 412:	28 97       	sbiw	r28, 0x08	; 8
 414:	0f b6       	in	r0, 0x3f	; 63
 416:	f8 94       	cli
 418:	de bf       	out	0x3e, r29	; 62
 41a:	0f be       	out	0x3f, r0	; 63
 41c:	cd bf       	out	0x3d, r28	; 61
 41e:	4a e0       	ldi	r20, 0x0A	; 10
 420:	be 01       	movw	r22, r28
 422:	6f 5f       	subi	r22, 0xFF	; 255
 424:	7f 4f       	sbci	r23, 0xFF	; 255
 426:	82 d3       	rcall	.+1796   	; 0xb2c <__itoa_ncheck>
 428:	ce 01       	movw	r24, r28
 42a:	01 96       	adiw	r24, 0x01	; 1
 42c:	d9 df       	rcall	.-78     	; 0x3e0 <writeString>
 42e:	28 96       	adiw	r28, 0x08	; 8
 430:	0f b6       	in	r0, 0x3f	; 63
 432:	f8 94       	cli
 434:	de bf       	out	0x3e, r29	; 62
 436:	0f be       	out	0x3f, r0	; 63
 438:	cd bf       	out	0x3d, r28	; 61
 43a:	df 91       	pop	r29
 43c:	cf 91       	pop	r28
 43e:	08 95       	ret

00000440 <globalVariablesTransmitUSART>:
 440:	ef 92       	push	r14
 442:	ff 92       	push	r15
 444:	0f 93       	push	r16
 446:	1f 93       	push	r17
 448:	cf 93       	push	r28
 44a:	df 93       	push	r29
 44c:	7c 01       	movw	r14, r24
 44e:	8b 01       	movw	r16, r22
 450:	ea 01       	movw	r28, r20
 452:	85 e0       	ldi	r24, 0x05	; 5
 454:	92 e0       	ldi	r25, 0x02	; 2
 456:	c4 df       	rcall	.-120    	; 0x3e0 <writeString>
 458:	c7 01       	movw	r24, r14
 45a:	d7 df       	rcall	.-82     	; 0x40a <writeInt>
 45c:	81 e1       	ldi	r24, 0x11	; 17
 45e:	92 e0       	ldi	r25, 0x02	; 2
 460:	bf df       	rcall	.-130    	; 0x3e0 <writeString>
 462:	c8 01       	movw	r24, r16
 464:	d2 df       	rcall	.-92     	; 0x40a <writeInt>
 466:	8a e1       	ldi	r24, 0x1A	; 26
 468:	92 e0       	ldi	r25, 0x02	; 2
 46a:	ba df       	rcall	.-140    	; 0x3e0 <writeString>
 46c:	ce 01       	movw	r24, r28
 46e:	cd df       	rcall	.-102    	; 0x40a <writeInt>
 470:	82 e0       	ldi	r24, 0x02	; 2
 472:	92 e0       	ldi	r25, 0x02	; 2
 474:	b5 df       	rcall	.-150    	; 0x3e0 <writeString>
 476:	df 91       	pop	r29
 478:	cf 91       	pop	r28
 47a:	1f 91       	pop	r17
 47c:	0f 91       	pop	r16
 47e:	ff 90       	pop	r15
 480:	ef 90       	pop	r14
 482:	08 95       	ret

00000484 <__subsf3>:
 484:	50 58       	subi	r21, 0x80	; 128

00000486 <__addsf3>:
 486:	bb 27       	eor	r27, r27
 488:	aa 27       	eor	r26, r26
 48a:	0e d0       	rcall	.+28     	; 0x4a8 <__addsf3x>
 48c:	e5 c0       	rjmp	.+458    	; 0x658 <__fp_round>
 48e:	d6 d0       	rcall	.+428    	; 0x63c <__fp_pscA>
 490:	30 f0       	brcs	.+12     	; 0x49e <__addsf3+0x18>
 492:	db d0       	rcall	.+438    	; 0x64a <__fp_pscB>
 494:	20 f0       	brcs	.+8      	; 0x49e <__addsf3+0x18>
 496:	31 f4       	brne	.+12     	; 0x4a4 <__addsf3+0x1e>
 498:	9f 3f       	cpi	r25, 0xFF	; 255
 49a:	11 f4       	brne	.+4      	; 0x4a0 <__addsf3+0x1a>
 49c:	1e f4       	brtc	.+6      	; 0x4a4 <__addsf3+0x1e>
 49e:	cb c0       	rjmp	.+406    	; 0x636 <__fp_nan>
 4a0:	0e f4       	brtc	.+2      	; 0x4a4 <__addsf3+0x1e>
 4a2:	e0 95       	com	r30
 4a4:	e7 fb       	bst	r30, 7
 4a6:	c1 c0       	rjmp	.+386    	; 0x62a <__fp_inf>

000004a8 <__addsf3x>:
 4a8:	e9 2f       	mov	r30, r25
 4aa:	e7 d0       	rcall	.+462    	; 0x67a <__fp_split3>
 4ac:	80 f3       	brcs	.-32     	; 0x48e <__addsf3+0x8>
 4ae:	ba 17       	cp	r27, r26
 4b0:	62 07       	cpc	r22, r18
 4b2:	73 07       	cpc	r23, r19
 4b4:	84 07       	cpc	r24, r20
 4b6:	95 07       	cpc	r25, r21
 4b8:	18 f0       	brcs	.+6      	; 0x4c0 <__addsf3x+0x18>
 4ba:	71 f4       	brne	.+28     	; 0x4d8 <__addsf3x+0x30>
 4bc:	9e f5       	brtc	.+102    	; 0x524 <__addsf3x+0x7c>
 4be:	ff c0       	rjmp	.+510    	; 0x6be <__fp_zero>
 4c0:	0e f4       	brtc	.+2      	; 0x4c4 <__addsf3x+0x1c>
 4c2:	e0 95       	com	r30
 4c4:	0b 2e       	mov	r0, r27
 4c6:	ba 2f       	mov	r27, r26
 4c8:	a0 2d       	mov	r26, r0
 4ca:	0b 01       	movw	r0, r22
 4cc:	b9 01       	movw	r22, r18
 4ce:	90 01       	movw	r18, r0
 4d0:	0c 01       	movw	r0, r24
 4d2:	ca 01       	movw	r24, r20
 4d4:	a0 01       	movw	r20, r0
 4d6:	11 24       	eor	r1, r1
 4d8:	ff 27       	eor	r31, r31
 4da:	59 1b       	sub	r21, r25
 4dc:	99 f0       	breq	.+38     	; 0x504 <__addsf3x+0x5c>
 4de:	59 3f       	cpi	r21, 0xF9	; 249
 4e0:	50 f4       	brcc	.+20     	; 0x4f6 <__addsf3x+0x4e>
 4e2:	50 3e       	cpi	r21, 0xE0	; 224
 4e4:	68 f1       	brcs	.+90     	; 0x540 <__addsf3x+0x98>
 4e6:	1a 16       	cp	r1, r26
 4e8:	f0 40       	sbci	r31, 0x00	; 0
 4ea:	a2 2f       	mov	r26, r18
 4ec:	23 2f       	mov	r18, r19
 4ee:	34 2f       	mov	r19, r20
 4f0:	44 27       	eor	r20, r20
 4f2:	58 5f       	subi	r21, 0xF8	; 248
 4f4:	f3 cf       	rjmp	.-26     	; 0x4dc <__addsf3x+0x34>
 4f6:	46 95       	lsr	r20
 4f8:	37 95       	ror	r19
 4fa:	27 95       	ror	r18
 4fc:	a7 95       	ror	r26
 4fe:	f0 40       	sbci	r31, 0x00	; 0
 500:	53 95       	inc	r21
 502:	c9 f7       	brne	.-14     	; 0x4f6 <__addsf3x+0x4e>
 504:	7e f4       	brtc	.+30     	; 0x524 <__addsf3x+0x7c>
 506:	1f 16       	cp	r1, r31
 508:	ba 0b       	sbc	r27, r26
 50a:	62 0b       	sbc	r22, r18
 50c:	73 0b       	sbc	r23, r19
 50e:	84 0b       	sbc	r24, r20
 510:	ba f0       	brmi	.+46     	; 0x540 <__addsf3x+0x98>
 512:	91 50       	subi	r25, 0x01	; 1
 514:	a1 f0       	breq	.+40     	; 0x53e <__addsf3x+0x96>
 516:	ff 0f       	add	r31, r31
 518:	bb 1f       	adc	r27, r27
 51a:	66 1f       	adc	r22, r22
 51c:	77 1f       	adc	r23, r23
 51e:	88 1f       	adc	r24, r24
 520:	c2 f7       	brpl	.-16     	; 0x512 <__addsf3x+0x6a>
 522:	0e c0       	rjmp	.+28     	; 0x540 <__addsf3x+0x98>
 524:	ba 0f       	add	r27, r26
 526:	62 1f       	adc	r22, r18
 528:	73 1f       	adc	r23, r19
 52a:	84 1f       	adc	r24, r20
 52c:	48 f4       	brcc	.+18     	; 0x540 <__addsf3x+0x98>
 52e:	87 95       	ror	r24
 530:	77 95       	ror	r23
 532:	67 95       	ror	r22
 534:	b7 95       	ror	r27
 536:	f7 95       	ror	r31
 538:	9e 3f       	cpi	r25, 0xFE	; 254
 53a:	08 f0       	brcs	.+2      	; 0x53e <__addsf3x+0x96>
 53c:	b3 cf       	rjmp	.-154    	; 0x4a4 <__addsf3+0x1e>
 53e:	93 95       	inc	r25
 540:	88 0f       	add	r24, r24
 542:	08 f0       	brcs	.+2      	; 0x546 <__addsf3x+0x9e>
 544:	99 27       	eor	r25, r25
 546:	ee 0f       	add	r30, r30
 548:	97 95       	ror	r25
 54a:	87 95       	ror	r24
 54c:	08 95       	ret

0000054e <__fixsfsi>:
 54e:	04 d0       	rcall	.+8      	; 0x558 <__fixunssfsi>
 550:	68 94       	set
 552:	b1 11       	cpse	r27, r1
 554:	b5 c0       	rjmp	.+362    	; 0x6c0 <__fp_szero>
 556:	08 95       	ret

00000558 <__fixunssfsi>:
 558:	98 d0       	rcall	.+304    	; 0x68a <__fp_splitA>
 55a:	88 f0       	brcs	.+34     	; 0x57e <__fixunssfsi+0x26>
 55c:	9f 57       	subi	r25, 0x7F	; 127
 55e:	90 f0       	brcs	.+36     	; 0x584 <__fixunssfsi+0x2c>
 560:	b9 2f       	mov	r27, r25
 562:	99 27       	eor	r25, r25
 564:	b7 51       	subi	r27, 0x17	; 23
 566:	a0 f0       	brcs	.+40     	; 0x590 <__fixunssfsi+0x38>
 568:	d1 f0       	breq	.+52     	; 0x59e <__fixunssfsi+0x46>
 56a:	66 0f       	add	r22, r22
 56c:	77 1f       	adc	r23, r23
 56e:	88 1f       	adc	r24, r24
 570:	99 1f       	adc	r25, r25
 572:	1a f0       	brmi	.+6      	; 0x57a <__fixunssfsi+0x22>
 574:	ba 95       	dec	r27
 576:	c9 f7       	brne	.-14     	; 0x56a <__fixunssfsi+0x12>
 578:	12 c0       	rjmp	.+36     	; 0x59e <__fixunssfsi+0x46>
 57a:	b1 30       	cpi	r27, 0x01	; 1
 57c:	81 f0       	breq	.+32     	; 0x59e <__fixunssfsi+0x46>
 57e:	9f d0       	rcall	.+318    	; 0x6be <__fp_zero>
 580:	b1 e0       	ldi	r27, 0x01	; 1
 582:	08 95       	ret
 584:	9c c0       	rjmp	.+312    	; 0x6be <__fp_zero>
 586:	67 2f       	mov	r22, r23
 588:	78 2f       	mov	r23, r24
 58a:	88 27       	eor	r24, r24
 58c:	b8 5f       	subi	r27, 0xF8	; 248
 58e:	39 f0       	breq	.+14     	; 0x59e <__fixunssfsi+0x46>
 590:	b9 3f       	cpi	r27, 0xF9	; 249
 592:	cc f3       	brlt	.-14     	; 0x586 <__fixunssfsi+0x2e>
 594:	86 95       	lsr	r24
 596:	77 95       	ror	r23
 598:	67 95       	ror	r22
 59a:	b3 95       	inc	r27
 59c:	d9 f7       	brne	.-10     	; 0x594 <__fixunssfsi+0x3c>
 59e:	3e f4       	brtc	.+14     	; 0x5ae <__fixunssfsi+0x56>
 5a0:	90 95       	com	r25
 5a2:	80 95       	com	r24
 5a4:	70 95       	com	r23
 5a6:	61 95       	neg	r22
 5a8:	7f 4f       	sbci	r23, 0xFF	; 255
 5aa:	8f 4f       	sbci	r24, 0xFF	; 255
 5ac:	9f 4f       	sbci	r25, 0xFF	; 255
 5ae:	08 95       	ret

000005b0 <__floatunsisf>:
 5b0:	e8 94       	clt
 5b2:	09 c0       	rjmp	.+18     	; 0x5c6 <__floatsisf+0x12>

000005b4 <__floatsisf>:
 5b4:	97 fb       	bst	r25, 7
 5b6:	3e f4       	brtc	.+14     	; 0x5c6 <__floatsisf+0x12>
 5b8:	90 95       	com	r25
 5ba:	80 95       	com	r24
 5bc:	70 95       	com	r23
 5be:	61 95       	neg	r22
 5c0:	7f 4f       	sbci	r23, 0xFF	; 255
 5c2:	8f 4f       	sbci	r24, 0xFF	; 255
 5c4:	9f 4f       	sbci	r25, 0xFF	; 255
 5c6:	99 23       	and	r25, r25
 5c8:	a9 f0       	breq	.+42     	; 0x5f4 <__floatsisf+0x40>
 5ca:	f9 2f       	mov	r31, r25
 5cc:	96 e9       	ldi	r25, 0x96	; 150
 5ce:	bb 27       	eor	r27, r27
 5d0:	93 95       	inc	r25
 5d2:	f6 95       	lsr	r31
 5d4:	87 95       	ror	r24
 5d6:	77 95       	ror	r23
 5d8:	67 95       	ror	r22
 5da:	b7 95       	ror	r27
 5dc:	f1 11       	cpse	r31, r1
 5de:	f8 cf       	rjmp	.-16     	; 0x5d0 <__floatsisf+0x1c>
 5e0:	fa f4       	brpl	.+62     	; 0x620 <__floatsisf+0x6c>
 5e2:	bb 0f       	add	r27, r27
 5e4:	11 f4       	brne	.+4      	; 0x5ea <__floatsisf+0x36>
 5e6:	60 ff       	sbrs	r22, 0
 5e8:	1b c0       	rjmp	.+54     	; 0x620 <__floatsisf+0x6c>
 5ea:	6f 5f       	subi	r22, 0xFF	; 255
 5ec:	7f 4f       	sbci	r23, 0xFF	; 255
 5ee:	8f 4f       	sbci	r24, 0xFF	; 255
 5f0:	9f 4f       	sbci	r25, 0xFF	; 255
 5f2:	16 c0       	rjmp	.+44     	; 0x620 <__floatsisf+0x6c>
 5f4:	88 23       	and	r24, r24
 5f6:	11 f0       	breq	.+4      	; 0x5fc <__floatsisf+0x48>
 5f8:	96 e9       	ldi	r25, 0x96	; 150
 5fa:	11 c0       	rjmp	.+34     	; 0x61e <__floatsisf+0x6a>
 5fc:	77 23       	and	r23, r23
 5fe:	21 f0       	breq	.+8      	; 0x608 <__floatsisf+0x54>
 600:	9e e8       	ldi	r25, 0x8E	; 142
 602:	87 2f       	mov	r24, r23
 604:	76 2f       	mov	r23, r22
 606:	05 c0       	rjmp	.+10     	; 0x612 <__floatsisf+0x5e>
 608:	66 23       	and	r22, r22
 60a:	71 f0       	breq	.+28     	; 0x628 <__floatsisf+0x74>
 60c:	96 e8       	ldi	r25, 0x86	; 134
 60e:	86 2f       	mov	r24, r22
 610:	70 e0       	ldi	r23, 0x00	; 0
 612:	60 e0       	ldi	r22, 0x00	; 0
 614:	2a f0       	brmi	.+10     	; 0x620 <__floatsisf+0x6c>
 616:	9a 95       	dec	r25
 618:	66 0f       	add	r22, r22
 61a:	77 1f       	adc	r23, r23
 61c:	88 1f       	adc	r24, r24
 61e:	da f7       	brpl	.-10     	; 0x616 <__floatsisf+0x62>
 620:	88 0f       	add	r24, r24
 622:	96 95       	lsr	r25
 624:	87 95       	ror	r24
 626:	97 f9       	bld	r25, 7
 628:	08 95       	ret

0000062a <__fp_inf>:
 62a:	97 f9       	bld	r25, 7
 62c:	9f 67       	ori	r25, 0x7F	; 127
 62e:	80 e8       	ldi	r24, 0x80	; 128
 630:	70 e0       	ldi	r23, 0x00	; 0
 632:	60 e0       	ldi	r22, 0x00	; 0
 634:	08 95       	ret

00000636 <__fp_nan>:
 636:	9f ef       	ldi	r25, 0xFF	; 255
 638:	80 ec       	ldi	r24, 0xC0	; 192
 63a:	08 95       	ret

0000063c <__fp_pscA>:
 63c:	00 24       	eor	r0, r0
 63e:	0a 94       	dec	r0
 640:	16 16       	cp	r1, r22
 642:	17 06       	cpc	r1, r23
 644:	18 06       	cpc	r1, r24
 646:	09 06       	cpc	r0, r25
 648:	08 95       	ret

0000064a <__fp_pscB>:
 64a:	00 24       	eor	r0, r0
 64c:	0a 94       	dec	r0
 64e:	12 16       	cp	r1, r18
 650:	13 06       	cpc	r1, r19
 652:	14 06       	cpc	r1, r20
 654:	05 06       	cpc	r0, r21
 656:	08 95       	ret

00000658 <__fp_round>:
 658:	09 2e       	mov	r0, r25
 65a:	03 94       	inc	r0
 65c:	00 0c       	add	r0, r0
 65e:	11 f4       	brne	.+4      	; 0x664 <__fp_round+0xc>
 660:	88 23       	and	r24, r24
 662:	52 f0       	brmi	.+20     	; 0x678 <__fp_round+0x20>
 664:	bb 0f       	add	r27, r27
 666:	40 f4       	brcc	.+16     	; 0x678 <__fp_round+0x20>
 668:	bf 2b       	or	r27, r31
 66a:	11 f4       	brne	.+4      	; 0x670 <__fp_round+0x18>
 66c:	60 ff       	sbrs	r22, 0
 66e:	04 c0       	rjmp	.+8      	; 0x678 <__fp_round+0x20>
 670:	6f 5f       	subi	r22, 0xFF	; 255
 672:	7f 4f       	sbci	r23, 0xFF	; 255
 674:	8f 4f       	sbci	r24, 0xFF	; 255
 676:	9f 4f       	sbci	r25, 0xFF	; 255
 678:	08 95       	ret

0000067a <__fp_split3>:
 67a:	57 fd       	sbrc	r21, 7
 67c:	90 58       	subi	r25, 0x80	; 128
 67e:	44 0f       	add	r20, r20
 680:	55 1f       	adc	r21, r21
 682:	59 f0       	breq	.+22     	; 0x69a <__fp_splitA+0x10>
 684:	5f 3f       	cpi	r21, 0xFF	; 255
 686:	71 f0       	breq	.+28     	; 0x6a4 <__fp_splitA+0x1a>
 688:	47 95       	ror	r20

0000068a <__fp_splitA>:
 68a:	88 0f       	add	r24, r24
 68c:	97 fb       	bst	r25, 7
 68e:	99 1f       	adc	r25, r25
 690:	61 f0       	breq	.+24     	; 0x6aa <__fp_splitA+0x20>
 692:	9f 3f       	cpi	r25, 0xFF	; 255
 694:	79 f0       	breq	.+30     	; 0x6b4 <__fp_splitA+0x2a>
 696:	87 95       	ror	r24
 698:	08 95       	ret
 69a:	12 16       	cp	r1, r18
 69c:	13 06       	cpc	r1, r19
 69e:	14 06       	cpc	r1, r20
 6a0:	55 1f       	adc	r21, r21
 6a2:	f2 cf       	rjmp	.-28     	; 0x688 <__fp_split3+0xe>
 6a4:	46 95       	lsr	r20
 6a6:	f1 df       	rcall	.-30     	; 0x68a <__fp_splitA>
 6a8:	08 c0       	rjmp	.+16     	; 0x6ba <__fp_splitA+0x30>
 6aa:	16 16       	cp	r1, r22
 6ac:	17 06       	cpc	r1, r23
 6ae:	18 06       	cpc	r1, r24
 6b0:	99 1f       	adc	r25, r25
 6b2:	f1 cf       	rjmp	.-30     	; 0x696 <__fp_splitA+0xc>
 6b4:	86 95       	lsr	r24
 6b6:	71 05       	cpc	r23, r1
 6b8:	61 05       	cpc	r22, r1
 6ba:	08 94       	sec
 6bc:	08 95       	ret

000006be <__fp_zero>:
 6be:	e8 94       	clt

000006c0 <__fp_szero>:
 6c0:	bb 27       	eor	r27, r27
 6c2:	66 27       	eor	r22, r22
 6c4:	77 27       	eor	r23, r23
 6c6:	cb 01       	movw	r24, r22
 6c8:	97 f9       	bld	r25, 7
 6ca:	08 95       	ret

000006cc <pow>:
 6cc:	fa 01       	movw	r30, r20
 6ce:	ee 0f       	add	r30, r30
 6d0:	ff 1f       	adc	r31, r31
 6d2:	30 96       	adiw	r30, 0x00	; 0
 6d4:	21 05       	cpc	r18, r1
 6d6:	31 05       	cpc	r19, r1
 6d8:	99 f1       	breq	.+102    	; 0x740 <pow+0x74>
 6da:	61 15       	cp	r22, r1
 6dc:	71 05       	cpc	r23, r1
 6de:	61 f4       	brne	.+24     	; 0x6f8 <pow+0x2c>
 6e0:	80 38       	cpi	r24, 0x80	; 128
 6e2:	bf e3       	ldi	r27, 0x3F	; 63
 6e4:	9b 07       	cpc	r25, r27
 6e6:	49 f1       	breq	.+82     	; 0x73a <pow+0x6e>
 6e8:	68 94       	set
 6ea:	90 38       	cpi	r25, 0x80	; 128
 6ec:	81 05       	cpc	r24, r1
 6ee:	61 f0       	breq	.+24     	; 0x708 <pow+0x3c>
 6f0:	80 38       	cpi	r24, 0x80	; 128
 6f2:	bf ef       	ldi	r27, 0xFF	; 255
 6f4:	9b 07       	cpc	r25, r27
 6f6:	41 f0       	breq	.+16     	; 0x708 <pow+0x3c>
 6f8:	99 23       	and	r25, r25
 6fa:	42 f5       	brpl	.+80     	; 0x74c <pow+0x80>
 6fc:	ff 3f       	cpi	r31, 0xFF	; 255
 6fe:	e1 05       	cpc	r30, r1
 700:	31 05       	cpc	r19, r1
 702:	21 05       	cpc	r18, r1
 704:	11 f1       	breq	.+68     	; 0x74a <pow+0x7e>
 706:	e8 94       	clt
 708:	08 94       	sec
 70a:	e7 95       	ror	r30
 70c:	d9 01       	movw	r26, r18
 70e:	aa 23       	and	r26, r26
 710:	29 f4       	brne	.+10     	; 0x71c <pow+0x50>
 712:	ab 2f       	mov	r26, r27
 714:	be 2f       	mov	r27, r30
 716:	f8 5f       	subi	r31, 0xF8	; 248
 718:	d0 f3       	brcs	.-12     	; 0x70e <pow+0x42>
 71a:	10 c0       	rjmp	.+32     	; 0x73c <pow+0x70>
 71c:	ff 5f       	subi	r31, 0xFF	; 255
 71e:	70 f4       	brcc	.+28     	; 0x73c <pow+0x70>
 720:	a6 95       	lsr	r26
 722:	e0 f7       	brcc	.-8      	; 0x71c <pow+0x50>
 724:	f7 39       	cpi	r31, 0x97	; 151
 726:	50 f0       	brcs	.+20     	; 0x73c <pow+0x70>
 728:	19 f0       	breq	.+6      	; 0x730 <pow+0x64>
 72a:	ff 3a       	cpi	r31, 0xAF	; 175
 72c:	38 f4       	brcc	.+14     	; 0x73c <pow+0x70>
 72e:	9f 77       	andi	r25, 0x7F	; 127
 730:	9f 93       	push	r25
 732:	0c d0       	rcall	.+24     	; 0x74c <pow+0x80>
 734:	0f 90       	pop	r0
 736:	07 fc       	sbrc	r0, 7
 738:	90 58       	subi	r25, 0x80	; 128
 73a:	08 95       	ret
 73c:	3e f0       	brts	.+14     	; 0x74c <pow+0x80>
 73e:	7b cf       	rjmp	.-266    	; 0x636 <__fp_nan>
 740:	60 e0       	ldi	r22, 0x00	; 0
 742:	70 e0       	ldi	r23, 0x00	; 0
 744:	80 e8       	ldi	r24, 0x80	; 128
 746:	9f e3       	ldi	r25, 0x3F	; 63
 748:	08 95       	ret
 74a:	4f e7       	ldi	r20, 0x7F	; 127
 74c:	9f 77       	andi	r25, 0x7F	; 127
 74e:	5f 93       	push	r21
 750:	4f 93       	push	r20
 752:	3f 93       	push	r19
 754:	2f 93       	push	r18
 756:	9e d0       	rcall	.+316    	; 0x894 <log>
 758:	2f 91       	pop	r18
 75a:	3f 91       	pop	r19
 75c:	4f 91       	pop	r20
 75e:	5f 91       	pop	r21
 760:	0c d1       	rcall	.+536    	; 0x97a <__mulsf3>
 762:	05 c0       	rjmp	.+10     	; 0x76e <exp>
 764:	19 f4       	brne	.+6      	; 0x76c <pow+0xa0>
 766:	0e f0       	brts	.+2      	; 0x76a <pow+0x9e>
 768:	60 cf       	rjmp	.-320    	; 0x62a <__fp_inf>
 76a:	a9 cf       	rjmp	.-174    	; 0x6be <__fp_zero>
 76c:	64 cf       	rjmp	.-312    	; 0x636 <__fp_nan>

0000076e <exp>:
 76e:	8d df       	rcall	.-230    	; 0x68a <__fp_splitA>
 770:	c8 f3       	brcs	.-14     	; 0x764 <pow+0x98>
 772:	96 38       	cpi	r25, 0x86	; 134
 774:	c0 f7       	brcc	.-16     	; 0x766 <pow+0x9a>
 776:	07 f8       	bld	r0, 7
 778:	0f 92       	push	r0
 77a:	e8 94       	clt
 77c:	2b e3       	ldi	r18, 0x3B	; 59
 77e:	3a ea       	ldi	r19, 0xAA	; 170
 780:	48 eb       	ldi	r20, 0xB8	; 184
 782:	5f e7       	ldi	r21, 0x7F	; 127
 784:	08 d1       	rcall	.+528    	; 0x996 <__mulsf3_pse>
 786:	0f 92       	push	r0
 788:	0f 92       	push	r0
 78a:	0f 92       	push	r0
 78c:	4d b7       	in	r20, 0x3d	; 61
 78e:	5e b7       	in	r21, 0x3e	; 62
 790:	0f 92       	push	r0
 792:	c0 d0       	rcall	.+384    	; 0x914 <modf>
 794:	e4 ee       	ldi	r30, 0xE4	; 228
 796:	f0 e0       	ldi	r31, 0x00	; 0
 798:	16 d0       	rcall	.+44     	; 0x7c6 <__fp_powser>
 79a:	4f 91       	pop	r20
 79c:	5f 91       	pop	r21
 79e:	ef 91       	pop	r30
 7a0:	ff 91       	pop	r31
 7a2:	e5 95       	asr	r30
 7a4:	ee 1f       	adc	r30, r30
 7a6:	ff 1f       	adc	r31, r31
 7a8:	49 f0       	breq	.+18     	; 0x7bc <exp+0x4e>
 7aa:	fe 57       	subi	r31, 0x7E	; 126
 7ac:	e0 68       	ori	r30, 0x80	; 128
 7ae:	44 27       	eor	r20, r20
 7b0:	ee 0f       	add	r30, r30
 7b2:	44 1f       	adc	r20, r20
 7b4:	fa 95       	dec	r31
 7b6:	e1 f7       	brne	.-8      	; 0x7b0 <exp+0x42>
 7b8:	41 95       	neg	r20
 7ba:	55 0b       	sbc	r21, r21
 7bc:	32 d0       	rcall	.+100    	; 0x822 <ldexp>
 7be:	0f 90       	pop	r0
 7c0:	07 fe       	sbrs	r0, 7
 7c2:	26 c0       	rjmp	.+76     	; 0x810 <inverse>
 7c4:	08 95       	ret

000007c6 <__fp_powser>:
 7c6:	df 93       	push	r29
 7c8:	cf 93       	push	r28
 7ca:	1f 93       	push	r17
 7cc:	0f 93       	push	r16
 7ce:	ff 92       	push	r15
 7d0:	ef 92       	push	r14
 7d2:	df 92       	push	r13
 7d4:	7b 01       	movw	r14, r22
 7d6:	8c 01       	movw	r16, r24
 7d8:	68 94       	set
 7da:	05 c0       	rjmp	.+10     	; 0x7e6 <__fp_powser+0x20>
 7dc:	da 2e       	mov	r13, r26
 7de:	ef 01       	movw	r28, r30
 7e0:	d8 d0       	rcall	.+432    	; 0x992 <__mulsf3x>
 7e2:	fe 01       	movw	r30, r28
 7e4:	e8 94       	clt
 7e6:	a5 91       	lpm	r26, Z+
 7e8:	25 91       	lpm	r18, Z+
 7ea:	35 91       	lpm	r19, Z+
 7ec:	45 91       	lpm	r20, Z+
 7ee:	55 91       	lpm	r21, Z+
 7f0:	ae f3       	brts	.-22     	; 0x7dc <__fp_powser+0x16>
 7f2:	ef 01       	movw	r28, r30
 7f4:	59 de       	rcall	.-846    	; 0x4a8 <__addsf3x>
 7f6:	fe 01       	movw	r30, r28
 7f8:	97 01       	movw	r18, r14
 7fa:	a8 01       	movw	r20, r16
 7fc:	da 94       	dec	r13
 7fe:	79 f7       	brne	.-34     	; 0x7de <__fp_powser+0x18>
 800:	df 90       	pop	r13
 802:	ef 90       	pop	r14
 804:	ff 90       	pop	r15
 806:	0f 91       	pop	r16
 808:	1f 91       	pop	r17
 80a:	cf 91       	pop	r28
 80c:	df 91       	pop	r29
 80e:	08 95       	ret

00000810 <inverse>:
 810:	9b 01       	movw	r18, r22
 812:	ac 01       	movw	r20, r24
 814:	60 e0       	ldi	r22, 0x00	; 0
 816:	70 e0       	ldi	r23, 0x00	; 0
 818:	80 e8       	ldi	r24, 0x80	; 128
 81a:	9f e3       	ldi	r25, 0x3F	; 63
 81c:	11 c1       	rjmp	.+546    	; 0xa40 <__divsf3>
 81e:	05 cf       	rjmp	.-502    	; 0x62a <__fp_inf>
 820:	77 c1       	rjmp	.+750    	; 0xb10 <__fp_mpack>

00000822 <ldexp>:
 822:	33 df       	rcall	.-410    	; 0x68a <__fp_splitA>
 824:	e8 f3       	brcs	.-6      	; 0x820 <inverse+0x10>
 826:	99 23       	and	r25, r25
 828:	d9 f3       	breq	.-10     	; 0x820 <inverse+0x10>
 82a:	94 0f       	add	r25, r20
 82c:	51 1d       	adc	r21, r1
 82e:	bb f3       	brvs	.-18     	; 0x81e <inverse+0xe>
 830:	91 50       	subi	r25, 0x01	; 1
 832:	50 40       	sbci	r21, 0x00	; 0
 834:	94 f0       	brlt	.+36     	; 0x85a <ldexp+0x38>
 836:	59 f0       	breq	.+22     	; 0x84e <ldexp+0x2c>
 838:	88 23       	and	r24, r24
 83a:	32 f0       	brmi	.+12     	; 0x848 <ldexp+0x26>
 83c:	66 0f       	add	r22, r22
 83e:	77 1f       	adc	r23, r23
 840:	88 1f       	adc	r24, r24
 842:	91 50       	subi	r25, 0x01	; 1
 844:	50 40       	sbci	r21, 0x00	; 0
 846:	c1 f7       	brne	.-16     	; 0x838 <ldexp+0x16>
 848:	9e 3f       	cpi	r25, 0xFE	; 254
 84a:	51 05       	cpc	r21, r1
 84c:	44 f7       	brge	.-48     	; 0x81e <inverse+0xe>
 84e:	88 0f       	add	r24, r24
 850:	91 1d       	adc	r25, r1
 852:	96 95       	lsr	r25
 854:	87 95       	ror	r24
 856:	97 f9       	bld	r25, 7
 858:	08 95       	ret
 85a:	5f 3f       	cpi	r21, 0xFF	; 255
 85c:	ac f0       	brlt	.+42     	; 0x888 <ldexp+0x66>
 85e:	98 3e       	cpi	r25, 0xE8	; 232
 860:	9c f0       	brlt	.+38     	; 0x888 <ldexp+0x66>
 862:	bb 27       	eor	r27, r27
 864:	86 95       	lsr	r24
 866:	77 95       	ror	r23
 868:	67 95       	ror	r22
 86a:	b7 95       	ror	r27
 86c:	08 f4       	brcc	.+2      	; 0x870 <ldexp+0x4e>
 86e:	b1 60       	ori	r27, 0x01	; 1
 870:	93 95       	inc	r25
 872:	c1 f7       	brne	.-16     	; 0x864 <ldexp+0x42>
 874:	bb 0f       	add	r27, r27
 876:	58 f7       	brcc	.-42     	; 0x84e <ldexp+0x2c>
 878:	11 f4       	brne	.+4      	; 0x87e <ldexp+0x5c>
 87a:	60 ff       	sbrs	r22, 0
 87c:	e8 cf       	rjmp	.-48     	; 0x84e <ldexp+0x2c>
 87e:	6f 5f       	subi	r22, 0xFF	; 255
 880:	7f 4f       	sbci	r23, 0xFF	; 255
 882:	8f 4f       	sbci	r24, 0xFF	; 255
 884:	9f 4f       	sbci	r25, 0xFF	; 255
 886:	e3 cf       	rjmp	.-58     	; 0x84e <ldexp+0x2c>
 888:	1b cf       	rjmp	.-458    	; 0x6c0 <__fp_szero>
 88a:	0e f0       	brts	.+2      	; 0x88e <ldexp+0x6c>
 88c:	41 c1       	rjmp	.+642    	; 0xb10 <__fp_mpack>
 88e:	d3 ce       	rjmp	.-602    	; 0x636 <__fp_nan>
 890:	68 94       	set
 892:	cb ce       	rjmp	.-618    	; 0x62a <__fp_inf>

00000894 <log>:
 894:	fa de       	rcall	.-524    	; 0x68a <__fp_splitA>
 896:	c8 f3       	brcs	.-14     	; 0x88a <ldexp+0x68>
 898:	99 23       	and	r25, r25
 89a:	d1 f3       	breq	.-12     	; 0x890 <ldexp+0x6e>
 89c:	c6 f3       	brts	.-16     	; 0x88e <ldexp+0x6c>
 89e:	df 93       	push	r29
 8a0:	cf 93       	push	r28
 8a2:	1f 93       	push	r17
 8a4:	0f 93       	push	r16
 8a6:	ff 92       	push	r15
 8a8:	c9 2f       	mov	r28, r25
 8aa:	dd 27       	eor	r29, r29
 8ac:	88 23       	and	r24, r24
 8ae:	2a f0       	brmi	.+10     	; 0x8ba <log+0x26>
 8b0:	21 97       	sbiw	r28, 0x01	; 1
 8b2:	66 0f       	add	r22, r22
 8b4:	77 1f       	adc	r23, r23
 8b6:	88 1f       	adc	r24, r24
 8b8:	da f7       	brpl	.-10     	; 0x8b0 <log+0x1c>
 8ba:	20 e0       	ldi	r18, 0x00	; 0
 8bc:	30 e0       	ldi	r19, 0x00	; 0
 8be:	40 e8       	ldi	r20, 0x80	; 128
 8c0:	5f eb       	ldi	r21, 0xBF	; 191
 8c2:	9f e3       	ldi	r25, 0x3F	; 63
 8c4:	88 39       	cpi	r24, 0x98	; 152
 8c6:	20 f0       	brcs	.+8      	; 0x8d0 <log+0x3c>
 8c8:	80 3e       	cpi	r24, 0xE0	; 224
 8ca:	30 f0       	brcs	.+12     	; 0x8d8 <log+0x44>
 8cc:	21 96       	adiw	r28, 0x01	; 1
 8ce:	8f 77       	andi	r24, 0x7F	; 127
 8d0:	da dd       	rcall	.-1100   	; 0x486 <__addsf3>
 8d2:	ec e0       	ldi	r30, 0x0C	; 12
 8d4:	f1 e0       	ldi	r31, 0x01	; 1
 8d6:	03 c0       	rjmp	.+6      	; 0x8de <log+0x4a>
 8d8:	d6 dd       	rcall	.-1108   	; 0x486 <__addsf3>
 8da:	e9 e3       	ldi	r30, 0x39	; 57
 8dc:	f1 e0       	ldi	r31, 0x01	; 1
 8de:	73 df       	rcall	.-282    	; 0x7c6 <__fp_powser>
 8e0:	8b 01       	movw	r16, r22
 8e2:	be 01       	movw	r22, r28
 8e4:	ec 01       	movw	r28, r24
 8e6:	fb 2e       	mov	r15, r27
 8e8:	6f 57       	subi	r22, 0x7F	; 127
 8ea:	71 09       	sbc	r23, r1
 8ec:	75 95       	asr	r23
 8ee:	77 1f       	adc	r23, r23
 8f0:	88 0b       	sbc	r24, r24
 8f2:	99 0b       	sbc	r25, r25
 8f4:	5f de       	rcall	.-834    	; 0x5b4 <__floatsisf>
 8f6:	28 e1       	ldi	r18, 0x18	; 24
 8f8:	32 e7       	ldi	r19, 0x72	; 114
 8fa:	41 e3       	ldi	r20, 0x31	; 49
 8fc:	5f e3       	ldi	r21, 0x3F	; 63
 8fe:	49 d0       	rcall	.+146    	; 0x992 <__mulsf3x>
 900:	af 2d       	mov	r26, r15
 902:	98 01       	movw	r18, r16
 904:	ae 01       	movw	r20, r28
 906:	ff 90       	pop	r15
 908:	0f 91       	pop	r16
 90a:	1f 91       	pop	r17
 90c:	cf 91       	pop	r28
 90e:	df 91       	pop	r29
 910:	cb dd       	rcall	.-1130   	; 0x4a8 <__addsf3x>
 912:	a2 ce       	rjmp	.-700    	; 0x658 <__fp_round>

00000914 <modf>:
 914:	fa 01       	movw	r30, r20
 916:	dc 01       	movw	r26, r24
 918:	aa 0f       	add	r26, r26
 91a:	bb 1f       	adc	r27, r27
 91c:	9b 01       	movw	r18, r22
 91e:	ac 01       	movw	r20, r24
 920:	bf 57       	subi	r27, 0x7F	; 127
 922:	28 f4       	brcc	.+10     	; 0x92e <modf+0x1a>
 924:	22 27       	eor	r18, r18
 926:	33 27       	eor	r19, r19
 928:	44 27       	eor	r20, r20
 92a:	50 78       	andi	r21, 0x80	; 128
 92c:	1f c0       	rjmp	.+62     	; 0x96c <modf+0x58>
 92e:	b7 51       	subi	r27, 0x17	; 23
 930:	88 f4       	brcc	.+34     	; 0x954 <modf+0x40>
 932:	ab 2f       	mov	r26, r27
 934:	00 24       	eor	r0, r0
 936:	46 95       	lsr	r20
 938:	37 95       	ror	r19
 93a:	27 95       	ror	r18
 93c:	01 1c       	adc	r0, r1
 93e:	a3 95       	inc	r26
 940:	d2 f3       	brmi	.-12     	; 0x936 <modf+0x22>
 942:	00 20       	and	r0, r0
 944:	69 f0       	breq	.+26     	; 0x960 <modf+0x4c>
 946:	22 0f       	add	r18, r18
 948:	33 1f       	adc	r19, r19
 94a:	44 1f       	adc	r20, r20
 94c:	b3 95       	inc	r27
 94e:	da f3       	brmi	.-10     	; 0x946 <modf+0x32>
 950:	0d d0       	rcall	.+26     	; 0x96c <modf+0x58>
 952:	98 cd       	rjmp	.-1232   	; 0x484 <__subsf3>
 954:	61 30       	cpi	r22, 0x01	; 1
 956:	71 05       	cpc	r23, r1
 958:	a0 e8       	ldi	r26, 0x80	; 128
 95a:	8a 07       	cpc	r24, r26
 95c:	b9 46       	sbci	r27, 0x69	; 105
 95e:	30 f4       	brcc	.+12     	; 0x96c <modf+0x58>
 960:	9b 01       	movw	r18, r22
 962:	ac 01       	movw	r20, r24
 964:	66 27       	eor	r22, r22
 966:	77 27       	eor	r23, r23
 968:	88 27       	eor	r24, r24
 96a:	90 78       	andi	r25, 0x80	; 128
 96c:	30 96       	adiw	r30, 0x00	; 0
 96e:	21 f0       	breq	.+8      	; 0x978 <modf+0x64>
 970:	20 83       	st	Z, r18
 972:	31 83       	std	Z+1, r19	; 0x01
 974:	42 83       	std	Z+2, r20	; 0x02
 976:	53 83       	std	Z+3, r21	; 0x03
 978:	08 95       	ret

0000097a <__mulsf3>:
 97a:	0b d0       	rcall	.+22     	; 0x992 <__mulsf3x>
 97c:	6d ce       	rjmp	.-806    	; 0x658 <__fp_round>
 97e:	5e de       	rcall	.-836    	; 0x63c <__fp_pscA>
 980:	28 f0       	brcs	.+10     	; 0x98c <__mulsf3+0x12>
 982:	63 de       	rcall	.-826    	; 0x64a <__fp_pscB>
 984:	18 f0       	brcs	.+6      	; 0x98c <__mulsf3+0x12>
 986:	95 23       	and	r25, r21
 988:	09 f0       	breq	.+2      	; 0x98c <__mulsf3+0x12>
 98a:	4f ce       	rjmp	.-866    	; 0x62a <__fp_inf>
 98c:	54 ce       	rjmp	.-856    	; 0x636 <__fp_nan>
 98e:	11 24       	eor	r1, r1
 990:	97 ce       	rjmp	.-722    	; 0x6c0 <__fp_szero>

00000992 <__mulsf3x>:
 992:	73 de       	rcall	.-794    	; 0x67a <__fp_split3>
 994:	a0 f3       	brcs	.-24     	; 0x97e <__mulsf3+0x4>

00000996 <__mulsf3_pse>:
 996:	95 9f       	mul	r25, r21
 998:	d1 f3       	breq	.-12     	; 0x98e <__mulsf3+0x14>
 99a:	95 0f       	add	r25, r21
 99c:	50 e0       	ldi	r21, 0x00	; 0
 99e:	55 1f       	adc	r21, r21
 9a0:	62 9f       	mul	r22, r18
 9a2:	f0 01       	movw	r30, r0
 9a4:	72 9f       	mul	r23, r18
 9a6:	bb 27       	eor	r27, r27
 9a8:	f0 0d       	add	r31, r0
 9aa:	b1 1d       	adc	r27, r1
 9ac:	63 9f       	mul	r22, r19
 9ae:	aa 27       	eor	r26, r26
 9b0:	f0 0d       	add	r31, r0
 9b2:	b1 1d       	adc	r27, r1
 9b4:	aa 1f       	adc	r26, r26
 9b6:	64 9f       	mul	r22, r20
 9b8:	66 27       	eor	r22, r22
 9ba:	b0 0d       	add	r27, r0
 9bc:	a1 1d       	adc	r26, r1
 9be:	66 1f       	adc	r22, r22
 9c0:	82 9f       	mul	r24, r18
 9c2:	22 27       	eor	r18, r18
 9c4:	b0 0d       	add	r27, r0
 9c6:	a1 1d       	adc	r26, r1
 9c8:	62 1f       	adc	r22, r18
 9ca:	73 9f       	mul	r23, r19
 9cc:	b0 0d       	add	r27, r0
 9ce:	a1 1d       	adc	r26, r1
 9d0:	62 1f       	adc	r22, r18
 9d2:	83 9f       	mul	r24, r19
 9d4:	a0 0d       	add	r26, r0
 9d6:	61 1d       	adc	r22, r1
 9d8:	22 1f       	adc	r18, r18
 9da:	74 9f       	mul	r23, r20
 9dc:	33 27       	eor	r19, r19
 9de:	a0 0d       	add	r26, r0
 9e0:	61 1d       	adc	r22, r1
 9e2:	23 1f       	adc	r18, r19
 9e4:	84 9f       	mul	r24, r20
 9e6:	60 0d       	add	r22, r0
 9e8:	21 1d       	adc	r18, r1
 9ea:	82 2f       	mov	r24, r18
 9ec:	76 2f       	mov	r23, r22
 9ee:	6a 2f       	mov	r22, r26
 9f0:	11 24       	eor	r1, r1
 9f2:	9f 57       	subi	r25, 0x7F	; 127
 9f4:	50 40       	sbci	r21, 0x00	; 0
 9f6:	8a f0       	brmi	.+34     	; 0xa1a <__mulsf3_pse+0x84>
 9f8:	e1 f0       	breq	.+56     	; 0xa32 <__mulsf3_pse+0x9c>
 9fa:	88 23       	and	r24, r24
 9fc:	4a f0       	brmi	.+18     	; 0xa10 <__mulsf3_pse+0x7a>
 9fe:	ee 0f       	add	r30, r30
 a00:	ff 1f       	adc	r31, r31
 a02:	bb 1f       	adc	r27, r27
 a04:	66 1f       	adc	r22, r22
 a06:	77 1f       	adc	r23, r23
 a08:	88 1f       	adc	r24, r24
 a0a:	91 50       	subi	r25, 0x01	; 1
 a0c:	50 40       	sbci	r21, 0x00	; 0
 a0e:	a9 f7       	brne	.-22     	; 0x9fa <__mulsf3_pse+0x64>
 a10:	9e 3f       	cpi	r25, 0xFE	; 254
 a12:	51 05       	cpc	r21, r1
 a14:	70 f0       	brcs	.+28     	; 0xa32 <__mulsf3_pse+0x9c>
 a16:	09 ce       	rjmp	.-1006   	; 0x62a <__fp_inf>
 a18:	53 ce       	rjmp	.-858    	; 0x6c0 <__fp_szero>
 a1a:	5f 3f       	cpi	r21, 0xFF	; 255
 a1c:	ec f3       	brlt	.-6      	; 0xa18 <__mulsf3_pse+0x82>
 a1e:	98 3e       	cpi	r25, 0xE8	; 232
 a20:	dc f3       	brlt	.-10     	; 0xa18 <__mulsf3_pse+0x82>
 a22:	86 95       	lsr	r24
 a24:	77 95       	ror	r23
 a26:	67 95       	ror	r22
 a28:	b7 95       	ror	r27
 a2a:	f7 95       	ror	r31
 a2c:	e7 95       	ror	r30
 a2e:	9f 5f       	subi	r25, 0xFF	; 255
 a30:	c1 f7       	brne	.-16     	; 0xa22 <__mulsf3_pse+0x8c>
 a32:	fe 2b       	or	r31, r30
 a34:	88 0f       	add	r24, r24
 a36:	91 1d       	adc	r25, r1
 a38:	96 95       	lsr	r25
 a3a:	87 95       	ror	r24
 a3c:	97 f9       	bld	r25, 7
 a3e:	08 95       	ret

00000a40 <__divsf3>:
 a40:	0c d0       	rcall	.+24     	; 0xa5a <__divsf3x>
 a42:	0a ce       	rjmp	.-1004   	; 0x658 <__fp_round>
 a44:	02 de       	rcall	.-1020   	; 0x64a <__fp_pscB>
 a46:	40 f0       	brcs	.+16     	; 0xa58 <__divsf3+0x18>
 a48:	f9 dd       	rcall	.-1038   	; 0x63c <__fp_pscA>
 a4a:	30 f0       	brcs	.+12     	; 0xa58 <__divsf3+0x18>
 a4c:	21 f4       	brne	.+8      	; 0xa56 <__divsf3+0x16>
 a4e:	5f 3f       	cpi	r21, 0xFF	; 255
 a50:	19 f0       	breq	.+6      	; 0xa58 <__divsf3+0x18>
 a52:	eb cd       	rjmp	.-1066   	; 0x62a <__fp_inf>
 a54:	51 11       	cpse	r21, r1
 a56:	34 ce       	rjmp	.-920    	; 0x6c0 <__fp_szero>
 a58:	ee cd       	rjmp	.-1060   	; 0x636 <__fp_nan>

00000a5a <__divsf3x>:
 a5a:	0f de       	rcall	.-994    	; 0x67a <__fp_split3>
 a5c:	98 f3       	brcs	.-26     	; 0xa44 <__divsf3+0x4>

00000a5e <__divsf3_pse>:
 a5e:	99 23       	and	r25, r25
 a60:	c9 f3       	breq	.-14     	; 0xa54 <__divsf3+0x14>
 a62:	55 23       	and	r21, r21
 a64:	b1 f3       	breq	.-20     	; 0xa52 <__divsf3+0x12>
 a66:	95 1b       	sub	r25, r21
 a68:	55 0b       	sbc	r21, r21
 a6a:	bb 27       	eor	r27, r27
 a6c:	aa 27       	eor	r26, r26
 a6e:	62 17       	cp	r22, r18
 a70:	73 07       	cpc	r23, r19
 a72:	84 07       	cpc	r24, r20
 a74:	38 f0       	brcs	.+14     	; 0xa84 <__divsf3_pse+0x26>
 a76:	9f 5f       	subi	r25, 0xFF	; 255
 a78:	5f 4f       	sbci	r21, 0xFF	; 255
 a7a:	22 0f       	add	r18, r18
 a7c:	33 1f       	adc	r19, r19
 a7e:	44 1f       	adc	r20, r20
 a80:	aa 1f       	adc	r26, r26
 a82:	a9 f3       	breq	.-22     	; 0xa6e <__divsf3_pse+0x10>
 a84:	33 d0       	rcall	.+102    	; 0xaec <__divsf3_pse+0x8e>
 a86:	0e 2e       	mov	r0, r30
 a88:	3a f0       	brmi	.+14     	; 0xa98 <__divsf3_pse+0x3a>
 a8a:	e0 e8       	ldi	r30, 0x80	; 128
 a8c:	30 d0       	rcall	.+96     	; 0xaee <__divsf3_pse+0x90>
 a8e:	91 50       	subi	r25, 0x01	; 1
 a90:	50 40       	sbci	r21, 0x00	; 0
 a92:	e6 95       	lsr	r30
 a94:	00 1c       	adc	r0, r0
 a96:	ca f7       	brpl	.-14     	; 0xa8a <__divsf3_pse+0x2c>
 a98:	29 d0       	rcall	.+82     	; 0xaec <__divsf3_pse+0x8e>
 a9a:	fe 2f       	mov	r31, r30
 a9c:	27 d0       	rcall	.+78     	; 0xaec <__divsf3_pse+0x8e>
 a9e:	66 0f       	add	r22, r22
 aa0:	77 1f       	adc	r23, r23
 aa2:	88 1f       	adc	r24, r24
 aa4:	bb 1f       	adc	r27, r27
 aa6:	26 17       	cp	r18, r22
 aa8:	37 07       	cpc	r19, r23
 aaa:	48 07       	cpc	r20, r24
 aac:	ab 07       	cpc	r26, r27
 aae:	b0 e8       	ldi	r27, 0x80	; 128
 ab0:	09 f0       	breq	.+2      	; 0xab4 <__divsf3_pse+0x56>
 ab2:	bb 0b       	sbc	r27, r27
 ab4:	80 2d       	mov	r24, r0
 ab6:	bf 01       	movw	r22, r30
 ab8:	ff 27       	eor	r31, r31
 aba:	93 58       	subi	r25, 0x83	; 131
 abc:	5f 4f       	sbci	r21, 0xFF	; 255
 abe:	2a f0       	brmi	.+10     	; 0xaca <__divsf3_pse+0x6c>
 ac0:	9e 3f       	cpi	r25, 0xFE	; 254
 ac2:	51 05       	cpc	r21, r1
 ac4:	68 f0       	brcs	.+26     	; 0xae0 <__divsf3_pse+0x82>
 ac6:	b1 cd       	rjmp	.-1182   	; 0x62a <__fp_inf>
 ac8:	fb cd       	rjmp	.-1034   	; 0x6c0 <__fp_szero>
 aca:	5f 3f       	cpi	r21, 0xFF	; 255
 acc:	ec f3       	brlt	.-6      	; 0xac8 <__divsf3_pse+0x6a>
 ace:	98 3e       	cpi	r25, 0xE8	; 232
 ad0:	dc f3       	brlt	.-10     	; 0xac8 <__divsf3_pse+0x6a>
 ad2:	86 95       	lsr	r24
 ad4:	77 95       	ror	r23
 ad6:	67 95       	ror	r22
 ad8:	b7 95       	ror	r27
 ada:	f7 95       	ror	r31
 adc:	9f 5f       	subi	r25, 0xFF	; 255
 ade:	c9 f7       	brne	.-14     	; 0xad2 <__divsf3_pse+0x74>
 ae0:	88 0f       	add	r24, r24
 ae2:	91 1d       	adc	r25, r1
 ae4:	96 95       	lsr	r25
 ae6:	87 95       	ror	r24
 ae8:	97 f9       	bld	r25, 7
 aea:	08 95       	ret
 aec:	e1 e0       	ldi	r30, 0x01	; 1
 aee:	66 0f       	add	r22, r22
 af0:	77 1f       	adc	r23, r23
 af2:	88 1f       	adc	r24, r24
 af4:	bb 1f       	adc	r27, r27
 af6:	62 17       	cp	r22, r18
 af8:	73 07       	cpc	r23, r19
 afa:	84 07       	cpc	r24, r20
 afc:	ba 07       	cpc	r27, r26
 afe:	20 f0       	brcs	.+8      	; 0xb08 <__divsf3_pse+0xaa>
 b00:	62 1b       	sub	r22, r18
 b02:	73 0b       	sbc	r23, r19
 b04:	84 0b       	sbc	r24, r20
 b06:	ba 0b       	sbc	r27, r26
 b08:	ee 1f       	adc	r30, r30
 b0a:	88 f7       	brcc	.-30     	; 0xaee <__divsf3_pse+0x90>
 b0c:	e0 95       	com	r30
 b0e:	08 95       	ret

00000b10 <__fp_mpack>:
 b10:	9f 3f       	cpi	r25, 0xFF	; 255
 b12:	31 f0       	breq	.+12     	; 0xb20 <__fp_mpack_finite+0xc>

00000b14 <__fp_mpack_finite>:
 b14:	91 50       	subi	r25, 0x01	; 1
 b16:	20 f4       	brcc	.+8      	; 0xb20 <__fp_mpack_finite+0xc>
 b18:	87 95       	ror	r24
 b1a:	77 95       	ror	r23
 b1c:	67 95       	ror	r22
 b1e:	b7 95       	ror	r27
 b20:	88 0f       	add	r24, r24
 b22:	91 1d       	adc	r25, r1
 b24:	96 95       	lsr	r25
 b26:	87 95       	ror	r24
 b28:	97 f9       	bld	r25, 7
 b2a:	08 95       	ret

00000b2c <__itoa_ncheck>:
 b2c:	bb 27       	eor	r27, r27
 b2e:	4a 30       	cpi	r20, 0x0A	; 10
 b30:	31 f4       	brne	.+12     	; 0xb3e <__itoa_ncheck+0x12>
 b32:	99 23       	and	r25, r25
 b34:	22 f4       	brpl	.+8      	; 0xb3e <__itoa_ncheck+0x12>
 b36:	bd e2       	ldi	r27, 0x2D	; 45
 b38:	90 95       	com	r25
 b3a:	81 95       	neg	r24
 b3c:	9f 4f       	sbci	r25, 0xFF	; 255
 b3e:	01 c0       	rjmp	.+2      	; 0xb42 <__utoa_common>

00000b40 <__utoa_ncheck>:
 b40:	bb 27       	eor	r27, r27

00000b42 <__utoa_common>:
 b42:	fb 01       	movw	r30, r22
 b44:	55 27       	eor	r21, r21
 b46:	aa 27       	eor	r26, r26
 b48:	88 0f       	add	r24, r24
 b4a:	99 1f       	adc	r25, r25
 b4c:	aa 1f       	adc	r26, r26
 b4e:	a4 17       	cp	r26, r20
 b50:	10 f0       	brcs	.+4      	; 0xb56 <__utoa_common+0x14>
 b52:	a4 1b       	sub	r26, r20
 b54:	83 95       	inc	r24
 b56:	50 51       	subi	r21, 0x10	; 16
 b58:	b9 f7       	brne	.-18     	; 0xb48 <__utoa_common+0x6>
 b5a:	a0 5d       	subi	r26, 0xD0	; 208
 b5c:	aa 33       	cpi	r26, 0x3A	; 58
 b5e:	08 f0       	brcs	.+2      	; 0xb62 <__utoa_common+0x20>
 b60:	a9 5d       	subi	r26, 0xD9	; 217
 b62:	a1 93       	st	Z+, r26
 b64:	00 97       	sbiw	r24, 0x00	; 0
 b66:	79 f7       	brne	.-34     	; 0xb46 <__utoa_common+0x4>
 b68:	b1 11       	cpse	r27, r1
 b6a:	b1 93       	st	Z+, r27
 b6c:	11 92       	st	Z+, r1
 b6e:	cb 01       	movw	r24, r22
 b70:	00 c0       	rjmp	.+0      	; 0xb72 <strrev>

00000b72 <strrev>:
 b72:	dc 01       	movw	r26, r24
 b74:	fc 01       	movw	r30, r24
 b76:	67 2f       	mov	r22, r23
 b78:	71 91       	ld	r23, Z+
 b7a:	77 23       	and	r23, r23
 b7c:	e1 f7       	brne	.-8      	; 0xb76 <strrev+0x4>
 b7e:	32 97       	sbiw	r30, 0x02	; 2
 b80:	04 c0       	rjmp	.+8      	; 0xb8a <strrev+0x18>
 b82:	7c 91       	ld	r23, X
 b84:	6d 93       	st	X+, r22
 b86:	70 83       	st	Z, r23
 b88:	62 91       	ld	r22, -Z
 b8a:	ae 17       	cp	r26, r30
 b8c:	bf 07       	cpc	r27, r31
 b8e:	c8 f3       	brcs	.-14     	; 0xb82 <strrev+0x10>
 b90:	08 95       	ret

00000b92 <_exit>:
 b92:	f8 94       	cli

00000b94 <__stop_program>:
 b94:	ff cf       	rjmp	.-2      	; 0xb94 <__stop_program>
