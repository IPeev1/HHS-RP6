
Arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000066  00800200  00001436  000014ca  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001436  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000149  00800266  00800266  00001530  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00001530  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001560  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  000015a0  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001b9c  00000000  00000000  000016f0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011bd  00000000  00000000  0000328c  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ca0  00000000  00000000  00004449  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004b0  00000000  00000000  000050ec  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a11  00000000  00000000  0000559c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000ea0  00000000  00000000  00005fad  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  00006e4d  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
       2:	00 00       	nop
       4:	d0 c0       	rjmp	.+416    	; 0x1a6 <__bad_interrupt>
       6:	00 00       	nop
       8:	ce c0       	rjmp	.+412    	; 0x1a6 <__bad_interrupt>
       a:	00 00       	nop
       c:	cc c0       	rjmp	.+408    	; 0x1a6 <__bad_interrupt>
       e:	00 00       	nop
      10:	ca c0       	rjmp	.+404    	; 0x1a6 <__bad_interrupt>
      12:	00 00       	nop
      14:	c8 c0       	rjmp	.+400    	; 0x1a6 <__bad_interrupt>
      16:	00 00       	nop
      18:	c6 c0       	rjmp	.+396    	; 0x1a6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c4 c0       	rjmp	.+392    	; 0x1a6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c2 c0       	rjmp	.+388    	; 0x1a6 <__bad_interrupt>
      22:	00 00       	nop
      24:	c0 c0       	rjmp	.+384    	; 0x1a6 <__bad_interrupt>
      26:	00 00       	nop
      28:	be c0       	rjmp	.+380    	; 0x1a6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	bc c0       	rjmp	.+376    	; 0x1a6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ba c0       	rjmp	.+372    	; 0x1a6 <__bad_interrupt>
      32:	00 00       	nop
      34:	b8 c0       	rjmp	.+368    	; 0x1a6 <__bad_interrupt>
      36:	00 00       	nop
      38:	b6 c0       	rjmp	.+364    	; 0x1a6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	92 c4       	rjmp	.+2340   	; 0x962 <__vector_15>
      3e:	00 00       	nop
      40:	b2 c0       	rjmp	.+356    	; 0x1a6 <__bad_interrupt>
      42:	00 00       	nop
      44:	b0 c0       	rjmp	.+352    	; 0x1a6 <__bad_interrupt>
      46:	00 00       	nop
      48:	ae c0       	rjmp	.+348    	; 0x1a6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ac c0       	rjmp	.+344    	; 0x1a6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	aa c0       	rjmp	.+340    	; 0x1a6 <__bad_interrupt>
      52:	00 00       	nop
      54:	a8 c0       	rjmp	.+336    	; 0x1a6 <__bad_interrupt>
      56:	00 00       	nop
      58:	a6 c0       	rjmp	.+332    	; 0x1a6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a4 c0       	rjmp	.+328    	; 0x1a6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a2 c0       	rjmp	.+324    	; 0x1a6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b6 c0       	rjmp	.+364    	; 0x1d2 <__vector_25>
      66:	00 00       	nop
      68:	9e c0       	rjmp	.+316    	; 0x1a6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9c c0       	rjmp	.+312    	; 0x1a6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	9a c0       	rjmp	.+308    	; 0x1a6 <__bad_interrupt>
      72:	00 00       	nop
      74:	98 c0       	rjmp	.+304    	; 0x1a6 <__bad_interrupt>
      76:	00 00       	nop
      78:	96 c0       	rjmp	.+300    	; 0x1a6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	94 c0       	rjmp	.+296    	; 0x1a6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	92 c0       	rjmp	.+292    	; 0x1a6 <__bad_interrupt>
      82:	00 00       	nop
      84:	90 c0       	rjmp	.+288    	; 0x1a6 <__bad_interrupt>
      86:	00 00       	nop
      88:	8e c0       	rjmp	.+284    	; 0x1a6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c1 c1       	rjmp	.+898    	; 0x410 <__vector_35>
      8e:	00 00       	nop
      90:	8a c0       	rjmp	.+276    	; 0x1a6 <__bad_interrupt>
      92:	00 00       	nop
      94:	88 c0       	rjmp	.+272    	; 0x1a6 <__bad_interrupt>
      96:	00 00       	nop
      98:	86 c0       	rjmp	.+268    	; 0x1a6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	10 c3       	rjmp	.+1568   	; 0x6be <__vector_39>
      9e:	00 00       	nop
      a0:	82 c0       	rjmp	.+260    	; 0x1a6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	80 c0       	rjmp	.+256    	; 0x1a6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	7e c0       	rjmp	.+252    	; 0x1a6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	7c c0       	rjmp	.+248    	; 0x1a6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	7a c0       	rjmp	.+244    	; 0x1a6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	78 c0       	rjmp	.+240    	; 0x1a6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	76 c0       	rjmp	.+236    	; 0x1a6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	74 c0       	rjmp	.+232    	; 0x1a6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	72 c0       	rjmp	.+228    	; 0x1a6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	70 c0       	rjmp	.+224    	; 0x1a6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	6e c0       	rjmp	.+220    	; 0x1a6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	6c c0       	rjmp	.+216    	; 0x1a6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	6a c0       	rjmp	.+212    	; 0x1a6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	68 c0       	rjmp	.+208    	; 0x1a6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	66 c0       	rjmp	.+204    	; 0x1a6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	64 c0       	rjmp	.+200    	; 0x1a6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	62 c0       	rjmp	.+196    	; 0x1a6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	07 63       	ori	r16, 0x37	; 55
      e6:	42 36       	cpi	r20, 0x62	; 98
      e8:	b7 9b       	sbis	0x16, 7	; 22
      ea:	d8 a7       	std	Y+40, r29	; 0x28
      ec:	1a 39       	cpi	r17, 0x9A	; 154
      ee:	68 56       	subi	r22, 0x68	; 104
      f0:	18 ae       	std	Y+56, r1	; 0x38
      f2:	ba ab       	std	Y+50, r27	; 0x32
      f4:	55 8c       	ldd	r5, Z+29	; 0x1d
      f6:	1d 3c       	cpi	r17, 0xCD	; 205
      f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
      fa:	57 63       	ori	r21, 0x37	; 55
      fc:	bd 6d       	ori	r27, 0xDD	; 221
      fe:	ed fd       	.word	0xfded	; ????
     100:	75 3e       	cpi	r23, 0xE5	; 229
     102:	f6 17       	cp	r31, r22
     104:	72 31       	cpi	r23, 0x12	; 18
     106:	bf 00       	.word	0x00bf	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 00       	nop
     110:	be 92       	st	-X, r11
     112:	24 49       	sbci	r18, 0x94	; 148
     114:	12 3e       	cpi	r17, 0xE2	; 226
     116:	ab aa       	std	Y+51, r10	; 0x33
     118:	aa 2a       	or	r10, r26
     11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
     11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
     11e:	4c 3e       	cpi	r20, 0xEC	; 236
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	be ab       	std	Y+54, r27	; 0x36
     126:	aa aa       	std	Y+50, r10	; 0x32
     128:	aa 3e       	cpi	r26, 0xEA	; 234
     12a:	00 00       	nop
     12c:	00 00       	nop
     12e:	bf 00       	.word	0x00bf	; ????
     130:	00 00       	nop
     132:	80 3f       	cpi	r24, 0xF0	; 240
     134:	00 00       	nop
     136:	00 00       	nop
     138:	00 08       	sbc	r0, r0
     13a:	41 78       	andi	r20, 0x81	; 129
     13c:	d3 bb       	out	0x13, r29	; 19
     13e:	43 87       	std	Z+11, r20	; 0x0b
     140:	d1 13       	cpse	r29, r17
     142:	3d 19       	sub	r19, r13
     144:	0e 3c       	cpi	r16, 0xCE	; 206
     146:	c3 bd       	out	0x23, r28	; 35
     148:	42 82       	std	Z+2, r4	; 0x02
     14a:	ad 2b       	or	r26, r29
     14c:	3e 68       	ori	r19, 0x8E	; 142
     14e:	ec 82       	std	Y+4, r14	; 0x04
     150:	76 be       	out	0x36, r7	; 54
     152:	d9 8f       	std	Y+25, r29	; 0x19
     154:	e1 a9       	ldd	r30, Z+49	; 0x31
     156:	3e 4c       	sbci	r19, 0xCE	; 206
     158:	80 ef       	ldi	r24, 0xF0	; 240
     15a:	ff be       	out	0x3f, r15	; 63
     15c:	01 c4       	rjmp	.+2050   	; 0x960 <readFromSlave+0x2e>
     15e:	ff 7f       	andi	r31, 0xFF	; 255
     160:	3f 00       	.word	0x003f	; ????
     162:	00 00       	nop
	...

00000166 <__ctors_end>:
     166:	11 24       	eor	r1, r1
     168:	1f be       	out	0x3f, r1	; 63
     16a:	cf ef       	ldi	r28, 0xFF	; 255
     16c:	d1 e2       	ldi	r29, 0x21	; 33
     16e:	de bf       	out	0x3e, r29	; 62
     170:	cd bf       	out	0x3d, r28	; 61
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	0c bf       	out	0x3c, r16	; 60

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b2 e0       	ldi	r27, 0x02	; 2
     17c:	e6 e3       	ldi	r30, 0x36	; 54
     17e:	f4 e1       	ldi	r31, 0x14	; 20
     180:	00 e0       	ldi	r16, 0x00	; 0
     182:	0b bf       	out	0x3b, r16	; 59
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x14>
     186:	07 90       	elpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	a6 36       	cpi	r26, 0x66	; 102
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0x10>

00000190 <__do_clear_bss>:
     190:	23 e0       	ldi	r18, 0x03	; 3
     192:	a6 e6       	ldi	r26, 0x66	; 102
     194:	b2 e0       	ldi	r27, 0x02	; 2
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	af 3a       	cpi	r26, 0xAF	; 175
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	0c d2       	rcall	.+1048   	; 0x5ba <main>
     1a2:	0c 94 19 0a 	jmp	0x1432	; 0x1432 <_exit>

000001a6 <__bad_interrupt>:
     1a6:	2c cf       	rjmp	.-424    	; 0x0 <__vectors>

000001a8 <init_USART>:
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
}
     1a8:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
     1ac:	e1 ec       	ldi	r30, 0xC1	; 193
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	80 81       	ld	r24, Z
     1b2:	80 69       	ori	r24, 0x90	; 144
     1b4:	80 83       	st	Z, r24
     1b6:	80 81       	ld	r24, Z
     1b8:	88 60       	ori	r24, 0x08	; 8
     1ba:	80 83       	st	Z, r24
     1bc:	e2 ec       	ldi	r30, 0xC2	; 194
     1be:	f0 e0       	ldi	r31, 0x00	; 0
     1c0:	80 81       	ld	r24, Z
     1c2:	86 60       	ori	r24, 0x06	; 6
     1c4:	80 83       	st	Z, r24
     1c6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     1ca:	87 e6       	ldi	r24, 0x67	; 103
     1cc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     1d0:	08 95       	ret

000001d2 <__vector_25>:
     1d2:	1f 92       	push	r1
     1d4:	0f 92       	push	r0
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	0f 92       	push	r0
     1da:	11 24       	eor	r1, r1
     1dc:	0b b6       	in	r0, 0x3b	; 59
     1de:	0f 92       	push	r0
     1e0:	df 92       	push	r13
     1e2:	ef 92       	push	r14
     1e4:	ff 92       	push	r15
     1e6:	0f 93       	push	r16
     1e8:	1f 93       	push	r17
     1ea:	2f 93       	push	r18
     1ec:	3f 93       	push	r19
     1ee:	4f 93       	push	r20
     1f0:	5f 93       	push	r21
     1f2:	6f 93       	push	r22
     1f4:	7f 93       	push	r23
     1f6:	8f 93       	push	r24
     1f8:	9f 93       	push	r25
     1fa:	af 93       	push	r26
     1fc:	bf 93       	push	r27
     1fe:	cf 93       	push	r28
     200:	df 93       	push	r29
     202:	ef 93       	push	r30
     204:	ff 93       	push	r31
     206:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     20a:	90 ed       	ldi	r25, 0xD0	; 208
     20c:	98 0f       	add	r25, r24
     20e:	9a 30       	cpi	r25, 0x0A	; 10
     210:	c0 f4       	brcc	.+48     	; 0x242 <__vector_25+0x70>
     212:	90 91 69 03 	lds	r25, 0x0369	; 0x800369 <command.1970>
     216:	94 37       	cpi	r25, 0x74	; 116
     218:	09 f0       	breq	.+2      	; 0x21c <__vector_25+0x4a>
     21a:	c1 c0       	rjmp	.+386    	; 0x39e <__vector_25+0x1cc>
     21c:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     220:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     224:	2f 3f       	cpi	r18, 0xFF	; 255
     226:	31 05       	cpc	r19, r1
     228:	0c f0       	brlt	.+2      	; 0x22c <__vector_25+0x5a>
     22a:	b9 c0       	rjmp	.+370    	; 0x39e <__vector_25+0x1cc>
     22c:	2f 5f       	subi	r18, 0xFF	; 255
     22e:	3f 4f       	sbci	r19, 0xFF	; 255
     230:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <__data_start+0x1>
     234:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <__data_start>
     238:	f9 01       	movw	r30, r18
     23a:	e6 59       	subi	r30, 0x96	; 150
     23c:	fd 4f       	sbci	r31, 0xFD	; 253
     23e:	80 83       	st	Z, r24
     240:	ae c0       	rjmp	.+348    	; 0x39e <__vector_25+0x1cc>
     242:	9f e9       	ldi	r25, 0x9F	; 159
     244:	98 0f       	add	r25, r24
     246:	9a 31       	cpi	r25, 0x1A	; 26
     248:	80 f4       	brcc	.+32     	; 0x26a <__vector_25+0x98>
     24a:	85 37       	cpi	r24, 0x75	; 117
     24c:	40 f4       	brcc	.+16     	; 0x25e <__vector_25+0x8c>
     24e:	83 37       	cpi	r24, 0x73	; 115
     250:	48 f4       	brcc	.+18     	; 0x264 <__vector_25+0x92>
     252:	81 36       	cpi	r24, 0x61	; 97
     254:	39 f0       	breq	.+14     	; 0x264 <__vector_25+0x92>
     256:	84 36       	cpi	r24, 0x64	; 100
     258:	09 f0       	breq	.+2      	; 0x25c <__vector_25+0x8a>
     25a:	a1 c0       	rjmp	.+322    	; 0x39e <__vector_25+0x1cc>
     25c:	03 c0       	rjmp	.+6      	; 0x264 <__vector_25+0x92>
     25e:	87 37       	cpi	r24, 0x77	; 119
     260:	09 f0       	breq	.+2      	; 0x264 <__vector_25+0x92>
     262:	9d c0       	rjmp	.+314    	; 0x39e <__vector_25+0x1cc>
     264:	80 93 69 03 	sts	0x0369, r24	; 0x800369 <command.1970>
     268:	9a c0       	rjmp	.+308    	; 0x39e <__vector_25+0x1cc>
     26a:	8d 30       	cpi	r24, 0x0D	; 13
     26c:	09 f0       	breq	.+2      	; 0x270 <__vector_25+0x9e>
     26e:	97 c0       	rjmp	.+302    	; 0x39e <__vector_25+0x1cc>
     270:	80 91 69 03 	lds	r24, 0x0369	; 0x800369 <command.1970>
     274:	84 37       	cpi	r24, 0x74	; 116
     276:	b1 f5       	brne	.+108    	; 0x2e4 <__vector_25+0x112>
     278:	00 91 00 02 	lds	r16, 0x0200	; 0x800200 <__data_start>
     27c:	10 91 01 02 	lds	r17, 0x0201	; 0x800201 <__data_start+0x1>
     280:	11 23       	and	r17, r17
     282:	0c f4       	brge	.+2      	; 0x286 <__vector_25+0xb4>
     284:	71 c0       	rjmp	.+226    	; 0x368 <__vector_25+0x196>
     286:	c0 e0       	ldi	r28, 0x00	; 0
     288:	d0 e0       	ldi	r29, 0x00	; 0
     28a:	d1 2c       	mov	r13, r1
     28c:	e1 2c       	mov	r14, r1
     28e:	f1 2c       	mov	r15, r1
     290:	b8 01       	movw	r22, r16
     292:	6c 1b       	sub	r22, r28
     294:	7d 0b       	sbc	r23, r29
     296:	07 2e       	mov	r0, r23
     298:	00 0c       	add	r0, r0
     29a:	88 0b       	sbc	r24, r24
     29c:	99 0b       	sbc	r25, r25
     29e:	41 d5       	rcall	.+2690   	; 0xd22 <__floatsisf>
     2a0:	9b 01       	movw	r18, r22
     2a2:	ac 01       	movw	r20, r24
     2a4:	60 e0       	ldi	r22, 0x00	; 0
     2a6:	70 e0       	ldi	r23, 0x00	; 0
     2a8:	80 e2       	ldi	r24, 0x20	; 32
     2aa:	91 e4       	ldi	r25, 0x41	; 65
     2ac:	c6 d5       	rcall	.+2956   	; 0xe3a <pow>
     2ae:	c6 59       	subi	r28, 0x96	; 150
     2b0:	dd 4f       	sbci	r29, 0xFD	; 253
     2b2:	c8 81       	ld	r28, Y
     2b4:	c0 53       	subi	r28, 0x30	; 48
     2b6:	d0 e0       	ldi	r29, 0x00	; 0
     2b8:	20 e0       	ldi	r18, 0x00	; 0
     2ba:	30 e0       	ldi	r19, 0x00	; 0
     2bc:	40 e0       	ldi	r20, 0x00	; 0
     2be:	5f e3       	ldi	r21, 0x3F	; 63
     2c0:	99 d4       	rcall	.+2354   	; 0xbf4 <__addsf3>
     2c2:	fc d4       	rcall	.+2552   	; 0xcbc <__fixsfsi>
     2c4:	c6 9f       	mul	r28, r22
     2c6:	90 01       	movw	r18, r0
     2c8:	c7 9f       	mul	r28, r23
     2ca:	30 0d       	add	r19, r0
     2cc:	d6 9f       	mul	r29, r22
     2ce:	30 0d       	add	r19, r0
     2d0:	11 24       	eor	r1, r1
     2d2:	e2 0e       	add	r14, r18
     2d4:	f3 1e       	adc	r15, r19
     2d6:	d3 94       	inc	r13
     2d8:	cd 2d       	mov	r28, r13
     2da:	d0 e0       	ldi	r29, 0x00	; 0
     2dc:	0c 17       	cp	r16, r28
     2de:	1d 07       	cpc	r17, r29
     2e0:	bc f6       	brge	.-82     	; 0x290 <__vector_25+0xbe>
     2e2:	3d c0       	rjmp	.+122    	; 0x35e <__vector_25+0x18c>
     2e4:	88 23       	and	r24, r24
     2e6:	09 f4       	brne	.+2      	; 0x2ea <__vector_25+0x118>
     2e8:	5a c0       	rjmp	.+180    	; 0x39e <__vector_25+0x1cc>
     2ea:	83 37       	cpi	r24, 0x73	; 115
     2ec:	01 f1       	breq	.+64     	; 0x32e <__vector_25+0x15c>
     2ee:	28 f4       	brcc	.+10     	; 0x2fa <__vector_25+0x128>
     2f0:	81 36       	cpi	r24, 0x61	; 97
     2f2:	91 f0       	breq	.+36     	; 0x318 <__vector_25+0x146>
     2f4:	84 36       	cpi	r24, 0x64	; 100
     2f6:	31 f1       	breq	.+76     	; 0x344 <__vector_25+0x172>
     2f8:	3b c0       	rjmp	.+118    	; 0x370 <__vector_25+0x19e>
     2fa:	84 37       	cpi	r24, 0x74	; 116
     2fc:	71 f1       	breq	.+92     	; 0x35a <__vector_25+0x188>
     2fe:	87 37       	cpi	r24, 0x77	; 119
     300:	b9 f5       	brne	.+110    	; 0x370 <__vector_25+0x19e>
     302:	80 91 a3 03 	lds	r24, 0x03A3	; 0x8003a3 <rp6Data+0x1>
     306:	81 30       	cpi	r24, 0x01	; 1
     308:	19 f4       	brne	.+6      	; 0x310 <__vector_25+0x13e>
     30a:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <rp6Data+0x1>
     30e:	30 c0       	rjmp	.+96     	; 0x370 <__vector_25+0x19e>
     310:	81 e0       	ldi	r24, 0x01	; 1
     312:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <rp6Data+0x1>
     316:	2c c0       	rjmp	.+88     	; 0x370 <__vector_25+0x19e>
     318:	80 91 a4 03 	lds	r24, 0x03A4	; 0x8003a4 <rp6Data+0x2>
     31c:	8f 3f       	cpi	r24, 0xFF	; 255
     31e:	19 f4       	brne	.+6      	; 0x326 <__vector_25+0x154>
     320:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <rp6Data+0x2>
     324:	25 c0       	rjmp	.+74     	; 0x370 <__vector_25+0x19e>
     326:	8f ef       	ldi	r24, 0xFF	; 255
     328:	80 93 a4 03 	sts	0x03A4, r24	; 0x8003a4 <rp6Data+0x2>
     32c:	21 c0       	rjmp	.+66     	; 0x370 <__vector_25+0x19e>
     32e:	80 91 a3 03 	lds	r24, 0x03A3	; 0x8003a3 <rp6Data+0x1>
     332:	8f 3f       	cpi	r24, 0xFF	; 255
     334:	19 f4       	brne	.+6      	; 0x33c <__vector_25+0x16a>
     336:	10 92 a3 03 	sts	0x03A3, r1	; 0x8003a3 <rp6Data+0x1>
     33a:	1a c0       	rjmp	.+52     	; 0x370 <__vector_25+0x19e>
     33c:	8f ef       	ldi	r24, 0xFF	; 255
     33e:	80 93 a3 03 	sts	0x03A3, r24	; 0x8003a3 <rp6Data+0x1>
     342:	16 c0       	rjmp	.+44     	; 0x370 <__vector_25+0x19e>
     344:	80 91 a4 03 	lds	r24, 0x03A4	; 0x8003a4 <rp6Data+0x2>
     348:	81 30       	cpi	r24, 0x01	; 1
     34a:	19 f4       	brne	.+6      	; 0x352 <__vector_25+0x180>
     34c:	10 92 a4 03 	sts	0x03A4, r1	; 0x8003a4 <rp6Data+0x2>
     350:	0f c0       	rjmp	.+30     	; 0x370 <__vector_25+0x19e>
     352:	81 e0       	ldi	r24, 0x01	; 1
     354:	80 93 a4 03 	sts	0x03A4, r24	; 0x8003a4 <rp6Data+0x2>
     358:	0b c0       	rjmp	.+22     	; 0x370 <__vector_25+0x19e>
     35a:	e1 2c       	mov	r14, r1
     35c:	f1 2c       	mov	r15, r1
     35e:	85 e6       	ldi	r24, 0x65	; 101
     360:	e8 16       	cp	r14, r24
     362:	f1 04       	cpc	r15, r1
     364:	28 f4       	brcc	.+10     	; 0x370 <__vector_25+0x19e>
     366:	02 c0       	rjmp	.+4      	; 0x36c <__vector_25+0x19a>
     368:	e1 2c       	mov	r14, r1
     36a:	f1 2c       	mov	r15, r1
     36c:	e0 92 a2 03 	sts	0x03A2, r14	; 0x8003a2 <rp6Data>
     370:	10 92 69 03 	sts	0x0369, r1	; 0x800369 <command.1970>
     374:	8f ef       	ldi	r24, 0xFF	; 255
     376:	9f ef       	ldi	r25, 0xFF	; 255
     378:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__data_start+0x1>
     37c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
     380:	e2 ea       	ldi	r30, 0xA2	; 162
     382:	f3 e0       	ldi	r31, 0x03	; 3
     384:	40 81       	ld	r20, Z
     386:	04 2e       	mov	r0, r20
     388:	00 0c       	add	r0, r0
     38a:	55 0b       	sbc	r21, r21
     38c:	62 81       	ldd	r22, Z+2	; 0x02
     38e:	06 2e       	mov	r0, r22
     390:	00 0c       	add	r0, r0
     392:	77 0b       	sbc	r23, r23
     394:	81 81       	ldd	r24, Z+1	; 0x01
     396:	08 2e       	mov	r0, r24
     398:	00 0c       	add	r0, r0
     39a:	99 0b       	sbc	r25, r25
     39c:	5a d3       	rcall	.+1716   	; 0xa52 <globalVariablesTransmitUSART>
     39e:	ff 91       	pop	r31
     3a0:	ef 91       	pop	r30
     3a2:	df 91       	pop	r29
     3a4:	cf 91       	pop	r28
     3a6:	bf 91       	pop	r27
     3a8:	af 91       	pop	r26
     3aa:	9f 91       	pop	r25
     3ac:	8f 91       	pop	r24
     3ae:	7f 91       	pop	r23
     3b0:	6f 91       	pop	r22
     3b2:	5f 91       	pop	r21
     3b4:	4f 91       	pop	r20
     3b6:	3f 91       	pop	r19
     3b8:	2f 91       	pop	r18
     3ba:	1f 91       	pop	r17
     3bc:	0f 91       	pop	r16
     3be:	ff 90       	pop	r15
     3c0:	ef 90       	pop	r14
     3c2:	df 90       	pop	r13
     3c4:	0f 90       	pop	r0
     3c6:	0b be       	out	0x3b, r0	; 59
     3c8:	0f 90       	pop	r0
     3ca:	0f be       	out	0x3f, r0	; 63
     3cc:	0f 90       	pop	r0
     3ce:	1f 90       	pop	r1
     3d0:	18 95       	reti

000003d2 <init_micros>:
     3d2:	e1 e9       	ldi	r30, 0x91	; 145
     3d4:	f0 e0       	ldi	r31, 0x00	; 0
     3d6:	80 81       	ld	r24, Z
     3d8:	81 60       	ori	r24, 0x01	; 1
     3da:	80 83       	st	Z, r24
     3dc:	e1 e7       	ldi	r30, 0x71	; 113
     3de:	f0 e0       	ldi	r31, 0x00	; 0
     3e0:	80 81       	ld	r24, Z
     3e2:	81 60       	ori	r24, 0x01	; 1
     3e4:	80 83       	st	Z, r24
     3e6:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     3ea:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     3ee:	10 92 82 03 	sts	0x0382, r1	; 0x800382 <t3TotalOverflow>
     3f2:	10 92 83 03 	sts	0x0383, r1	; 0x800383 <t3TotalOverflow+0x1>
     3f6:	10 92 84 03 	sts	0x0384, r1	; 0x800384 <t3TotalOverflow+0x2>
     3fa:	10 92 85 03 	sts	0x0385, r1	; 0x800385 <t3TotalOverflow+0x3>
     3fe:	10 92 86 03 	sts	0x0386, r1	; 0x800386 <t3TotalOverflow+0x4>
     402:	10 92 87 03 	sts	0x0387, r1	; 0x800387 <t3TotalOverflow+0x5>
     406:	10 92 88 03 	sts	0x0388, r1	; 0x800388 <t3TotalOverflow+0x6>
     40a:	10 92 89 03 	sts	0x0389, r1	; 0x800389 <t3TotalOverflow+0x7>
     40e:	08 95       	ret

00000410 <__vector_35>:
     410:	1f 92       	push	r1
     412:	0f 92       	push	r0
     414:	0f b6       	in	r0, 0x3f	; 63
     416:	0f 92       	push	r0
     418:	11 24       	eor	r1, r1
     41a:	2f 93       	push	r18
     41c:	3f 93       	push	r19
     41e:	4f 93       	push	r20
     420:	5f 93       	push	r21
     422:	6f 93       	push	r22
     424:	7f 93       	push	r23
     426:	8f 93       	push	r24
     428:	9f 93       	push	r25
     42a:	af 93       	push	r26
     42c:	20 91 82 03 	lds	r18, 0x0382	; 0x800382 <t3TotalOverflow>
     430:	30 91 83 03 	lds	r19, 0x0383	; 0x800383 <t3TotalOverflow+0x1>
     434:	40 91 84 03 	lds	r20, 0x0384	; 0x800384 <t3TotalOverflow+0x2>
     438:	50 91 85 03 	lds	r21, 0x0385	; 0x800385 <t3TotalOverflow+0x3>
     43c:	60 91 86 03 	lds	r22, 0x0386	; 0x800386 <t3TotalOverflow+0x4>
     440:	70 91 87 03 	lds	r23, 0x0387	; 0x800387 <t3TotalOverflow+0x5>
     444:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <t3TotalOverflow+0x6>
     448:	90 91 89 03 	lds	r25, 0x0389	; 0x800389 <t3TotalOverflow+0x7>
     44c:	a1 e0       	ldi	r26, 0x01	; 1
     44e:	95 d7       	rcall	.+3882   	; 0x137a <__adddi3_s8>
     450:	20 93 82 03 	sts	0x0382, r18	; 0x800382 <t3TotalOverflow>
     454:	30 93 83 03 	sts	0x0383, r19	; 0x800383 <t3TotalOverflow+0x1>
     458:	40 93 84 03 	sts	0x0384, r20	; 0x800384 <t3TotalOverflow+0x2>
     45c:	50 93 85 03 	sts	0x0385, r21	; 0x800385 <t3TotalOverflow+0x3>
     460:	60 93 86 03 	sts	0x0386, r22	; 0x800386 <t3TotalOverflow+0x4>
     464:	70 93 87 03 	sts	0x0387, r23	; 0x800387 <t3TotalOverflow+0x5>
     468:	80 93 88 03 	sts	0x0388, r24	; 0x800388 <t3TotalOverflow+0x6>
     46c:	90 93 89 03 	sts	0x0389, r25	; 0x800389 <t3TotalOverflow+0x7>
     470:	af 91       	pop	r26
     472:	9f 91       	pop	r25
     474:	8f 91       	pop	r24
     476:	7f 91       	pop	r23
     478:	6f 91       	pop	r22
     47a:	5f 91       	pop	r21
     47c:	4f 91       	pop	r20
     47e:	3f 91       	pop	r19
     480:	2f 91       	pop	r18
     482:	0f 90       	pop	r0
     484:	0f be       	out	0x3f, r0	; 63
     486:	0f 90       	pop	r0
     488:	1f 90       	pop	r1
     48a:	18 95       	reti

0000048c <micros>:
     48c:	4f 92       	push	r4
     48e:	5f 92       	push	r5
     490:	6f 92       	push	r6
     492:	7f 92       	push	r7
     494:	8f 92       	push	r8
     496:	9f 92       	push	r9
     498:	af 92       	push	r10
     49a:	bf 92       	push	r11
     49c:	cf 92       	push	r12
     49e:	df 92       	push	r13
     4a0:	ef 92       	push	r14
     4a2:	ff 92       	push	r15
     4a4:	0f 93       	push	r16
     4a6:	1f 93       	push	r17
     4a8:	80 90 94 00 	lds	r8, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     4ac:	90 90 95 00 	lds	r9, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     4b0:	20 91 82 03 	lds	r18, 0x0382	; 0x800382 <t3TotalOverflow>
     4b4:	30 91 83 03 	lds	r19, 0x0383	; 0x800383 <t3TotalOverflow+0x1>
     4b8:	40 91 84 03 	lds	r20, 0x0384	; 0x800384 <t3TotalOverflow+0x2>
     4bc:	50 91 85 03 	lds	r21, 0x0385	; 0x800385 <t3TotalOverflow+0x3>
     4c0:	60 91 86 03 	lds	r22, 0x0386	; 0x800386 <t3TotalOverflow+0x4>
     4c4:	70 91 87 03 	lds	r23, 0x0387	; 0x800387 <t3TotalOverflow+0x5>
     4c8:	80 91 88 03 	lds	r24, 0x0388	; 0x800388 <t3TotalOverflow+0x6>
     4cc:	90 91 89 03 	lds	r25, 0x0389	; 0x800389 <t3TotalOverflow+0x7>
     4d0:	98 2c       	mov	r9, r8
     4d2:	88 24       	eor	r8, r8
     4d4:	99 0c       	add	r9, r9
     4d6:	99 0c       	add	r9, r9
     4d8:	99 0c       	add	r9, r9
     4da:	99 0c       	add	r9, r9
     4dc:	09 2c       	mov	r0, r9
     4de:	00 0c       	add	r0, r0
     4e0:	aa 08       	sbc	r10, r10
     4e2:	bb 08       	sbc	r11, r11
     4e4:	bb 20       	and	r11, r11
     4e6:	2c f4       	brge	.+10     	; 0x4f2 <micros+0x66>
     4e8:	ef ef       	ldi	r30, 0xFF	; 255
     4ea:	8e 0e       	add	r8, r30
     4ec:	9e 1e       	adc	r9, r30
     4ee:	a1 1c       	adc	r10, r1
     4f0:	b1 1c       	adc	r11, r1
     4f2:	25 01       	movw	r4, r10
     4f4:	77 24       	eor	r7, r7
     4f6:	57 fc       	sbrc	r5, 7
     4f8:	70 94       	com	r7
     4fa:	67 2c       	mov	r6, r7
     4fc:	bb 0c       	add	r11, r11
     4fe:	88 08       	sbc	r8, r8
     500:	98 2c       	mov	r9, r8
     502:	54 01       	movw	r10, r8
     504:	0c e0       	ldi	r16, 0x0C	; 12
     506:	17 d7       	rcall	.+3630   	; 0x1336 <__ashldi3>
     508:	f2 2f       	mov	r31, r18
     50a:	e3 2f       	mov	r30, r19
     50c:	c4 2e       	mov	r12, r20
     50e:	d5 2e       	mov	r13, r21
     510:	e6 2e       	mov	r14, r22
     512:	f7 2e       	mov	r15, r23
     514:	08 2f       	mov	r16, r24
     516:	19 2f       	mov	r17, r25
     518:	24 2d       	mov	r18, r4
     51a:	35 2d       	mov	r19, r5
     51c:	46 2d       	mov	r20, r6
     51e:	57 2d       	mov	r21, r7
     520:	68 2d       	mov	r22, r8
     522:	78 2d       	mov	r23, r8
     524:	88 2d       	mov	r24, r8
     526:	98 2d       	mov	r25, r8
     528:	af 2e       	mov	r10, r31
     52a:	be 2e       	mov	r11, r30
     52c:	1d d7       	rcall	.+3642   	; 0x1368 <__adddi3>
     52e:	1f 91       	pop	r17
     530:	0f 91       	pop	r16
     532:	ff 90       	pop	r15
     534:	ef 90       	pop	r14
     536:	df 90       	pop	r13
     538:	cf 90       	pop	r12
     53a:	bf 90       	pop	r11
     53c:	af 90       	pop	r10
     53e:	9f 90       	pop	r9
     540:	8f 90       	pop	r8
     542:	7f 90       	pop	r7
     544:	6f 90       	pop	r6
     546:	5f 90       	pop	r5
     548:	4f 90       	pop	r4
     54a:	08 95       	ret

0000054c <init_TWI>:
     54c:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     550:	88 e4       	ldi	r24, 0x48	; 72
     552:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     556:	85 e0       	ldi	r24, 0x05	; 5
     558:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     55c:	08 95       	ret

0000055e <init_TWI_Timer2>:
     55e:	e1 eb       	ldi	r30, 0xB1	; 177
     560:	f0 e0       	ldi	r31, 0x00	; 0
     562:	80 81       	ld	r24, Z
     564:	87 60       	ori	r24, 0x07	; 7
     566:	80 83       	st	Z, r24
     568:	e0 e7       	ldi	r30, 0x70	; 112
     56a:	f0 e0       	ldi	r31, 0x00	; 0
     56c:	80 81       	ld	r24, Z
     56e:	81 60       	ori	r24, 0x01	; 1
     570:	80 83       	st	Z, r24
     572:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7000b2>
     576:	08 95       	ret

00000578 <init_arduinoData>:
     578:	ea e8       	ldi	r30, 0x8A	; 138
     57a:	f3 e0       	ldi	r31, 0x03	; 3
     57c:	11 82       	std	Z+1, r1	; 0x01
     57e:	10 82       	st	Z, r1
     580:	13 82       	std	Z+3, r1	; 0x03
     582:	12 82       	std	Z+2, r1	; 0x02
     584:	08 95       	ret

00000586 <init_rp6Data>:
     586:	e2 ea       	ldi	r30, 0xA2	; 162
     588:	f3 e0       	ldi	r31, 0x03	; 3
     58a:	10 82       	st	Z, r1
     58c:	11 82       	std	Z+1, r1	; 0x01
     58e:	12 82       	std	Z+2, r1	; 0x02
     590:	8e e1       	ldi	r24, 0x1E	; 30
     592:	83 83       	std	Z+3, r24	; 0x03
     594:	88 eb       	ldi	r24, 0xB8	; 184
     596:	9b e0       	ldi	r25, 0x0B	; 11
     598:	95 83       	std	Z+5, r25	; 0x05
     59a:	84 83       	std	Z+4, r24	; 0x04
     59c:	88 e8       	ldi	r24, 0x88	; 136
     59e:	93 e1       	ldi	r25, 0x13	; 19
     5a0:	97 83       	std	Z+7, r25	; 0x07
     5a2:	86 83       	std	Z+6, r24	; 0x06
     5a4:	80 e4       	ldi	r24, 0x40	; 64
     5a6:	9d e0       	ldi	r25, 0x0D	; 13
     5a8:	a3 e0       	ldi	r26, 0x03	; 3
     5aa:	b0 e0       	ldi	r27, 0x00	; 0
     5ac:	80 87       	std	Z+8, r24	; 0x08
     5ae:	91 87       	std	Z+9, r25	; 0x09
     5b0:	a2 87       	std	Z+10, r26	; 0x0a
     5b2:	b3 87       	std	Z+11, r27	; 0x0b
     5b4:	81 e0       	ldi	r24, 0x01	; 1
     5b6:	84 87       	std	Z+12, r24	; 0x0c
     5b8:	08 95       	ret

000005ba <main>:
     5ba:	78 94       	sei
     5bc:	0a df       	rcall	.-492    	; 0x3d2 <init_micros>
     5be:	f4 dd       	rcall	.-1048   	; 0x1a8 <init_USART>
     5c0:	c5 df       	rcall	.-118    	; 0x54c <init_TWI>
     5c2:	cd df       	rcall	.-102    	; 0x55e <init_TWI_Timer2>
     5c4:	e0 df       	rcall	.-64     	; 0x586 <init_rp6Data>
     5c6:	d8 df       	rcall	.-80     	; 0x578 <init_arduinoData>
     5c8:	66 d2       	rcall	.+1228   	; 0xa96 <initTimer>
     5ca:	ee dd       	rcall	.-1060   	; 0x1a8 <init_USART>
     5cc:	40 90 6a 03 	lds	r4, 0x036A	; 0x80036a <ultrasonicSensorTimer>
     5d0:	50 90 6b 03 	lds	r5, 0x036B	; 0x80036b <ultrasonicSensorTimer+0x1>
     5d4:	60 90 6c 03 	lds	r6, 0x036C	; 0x80036c <ultrasonicSensorTimer+0x2>
     5d8:	70 90 6d 03 	lds	r7, 0x036D	; 0x80036d <ultrasonicSensorTimer+0x3>
     5dc:	57 df       	rcall	.-338    	; 0x48c <micros>
     5de:	f2 2f       	mov	r31, r18
     5e0:	e3 2f       	mov	r30, r19
     5e2:	c4 2e       	mov	r12, r20
     5e4:	d5 2e       	mov	r13, r21
     5e6:	e6 2e       	mov	r14, r22
     5e8:	f7 2e       	mov	r15, r23
     5ea:	08 2f       	mov	r16, r24
     5ec:	19 2f       	mov	r17, r25
     5ee:	24 2d       	mov	r18, r4
     5f0:	35 2d       	mov	r19, r5
     5f2:	46 2d       	mov	r20, r6
     5f4:	57 2d       	mov	r21, r7
     5f6:	60 e0       	ldi	r22, 0x00	; 0
     5f8:	70 e0       	ldi	r23, 0x00	; 0
     5fa:	80 e0       	ldi	r24, 0x00	; 0
     5fc:	90 e0       	ldi	r25, 0x00	; 0
     5fe:	af 2e       	mov	r10, r31
     600:	be 2e       	mov	r11, r30
     602:	c7 d6       	rcall	.+3470   	; 0x1392 <__cmpdi2>
     604:	18 f7       	brcc	.-58     	; 0x5cc <main+0x12>
     606:	d2 d2       	rcall	.+1444   	; 0xbac <printUltrasonicSensorDistance>
     608:	41 df       	rcall	.-382    	; 0x48c <micros>
     60a:	82 2e       	mov	r8, r18
     60c:	93 2e       	mov	r9, r19
     60e:	a4 2e       	mov	r10, r20
     610:	b5 2e       	mov	r11, r21
     612:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <ultrasonicSensorSpeed>
     616:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <ultrasonicSensorSpeed+0x1>
     61a:	a0 91 04 02 	lds	r26, 0x0204	; 0x800204 <ultrasonicSensorSpeed+0x2>
     61e:	b0 91 05 02 	lds	r27, 0x0205	; 0x800205 <ultrasonicSensorSpeed+0x3>
     622:	88 0e       	add	r8, r24
     624:	99 1e       	adc	r9, r25
     626:	aa 1e       	adc	r10, r26
     628:	bb 1e       	adc	r11, r27
     62a:	80 92 6a 03 	sts	0x036A, r8	; 0x80036a <ultrasonicSensorTimer>
     62e:	90 92 6b 03 	sts	0x036B, r9	; 0x80036b <ultrasonicSensorTimer+0x1>
     632:	a0 92 6c 03 	sts	0x036C, r10	; 0x80036c <ultrasonicSensorTimer+0x2>
     636:	b0 92 6d 03 	sts	0x036D, r11	; 0x80036d <ultrasonicSensorTimer+0x3>
     63a:	c8 cf       	rjmp	.-112    	; 0x5cc <main+0x12>

0000063c <arduinoDataInterpreter>:
     63c:	0f 93       	push	r16
     63e:	1f 93       	push	r17
     640:	cf 93       	push	r28
     642:	df 93       	push	r29
     644:	ea e8       	ldi	r30, 0x8A	; 138
     646:	f3 e0       	ldi	r31, 0x03	; 3
     648:	0e e6       	ldi	r16, 0x6E	; 110
     64a:	13 e0       	ldi	r17, 0x03	; 3
     64c:	d8 01       	movw	r26, r16
     64e:	11 96       	adiw	r26, 0x01	; 1
     650:	2c 91       	ld	r18, X
     652:	c0 e3       	ldi	r28, 0x30	; 48
     654:	d5 e7       	ldi	r29, 0x75	; 117
     656:	2c 9f       	mul	r18, r28
     658:	c0 01       	movw	r24, r0
     65a:	2d 9f       	mul	r18, r29
     65c:	90 0d       	add	r25, r0
     65e:	11 24       	eor	r1, r1
     660:	2f ef       	ldi	r18, 0xFF	; 255
     662:	30 e0       	ldi	r19, 0x00	; 0
     664:	b9 01       	movw	r22, r18
     666:	19 d6       	rcall	.+3122   	; 0x129a <__divmodhi4>
     668:	71 83       	std	Z+1, r23	; 0x01
     66a:	60 83       	st	Z, r22
     66c:	d8 01       	movw	r26, r16
     66e:	12 96       	adiw	r26, 0x02	; 2
     670:	4c 91       	ld	r20, X
     672:	4c 9f       	mul	r20, r28
     674:	c0 01       	movw	r24, r0
     676:	4d 9f       	mul	r20, r29
     678:	90 0d       	add	r25, r0
     67a:	11 24       	eor	r1, r1
     67c:	b9 01       	movw	r22, r18
     67e:	0d d6       	rcall	.+3098   	; 0x129a <__divmodhi4>
     680:	73 83       	std	Z+3, r23	; 0x03
     682:	62 83       	std	Z+2, r22	; 0x02
     684:	df 91       	pop	r29
     686:	cf 91       	pop	r28
     688:	1f 91       	pop	r17
     68a:	0f 91       	pop	r16
     68c:	08 95       	ret

0000068e <I2C_receiveInterpreter>:
     68e:	80 91 6e 03 	lds	r24, 0x036E	; 0x80036e <receiveDataTWI>
     692:	81 30       	cpi	r24, 0x01	; 1
     694:	09 f4       	brne	.+2      	; 0x698 <I2C_receiveInterpreter+0xa>
     696:	d2 cf       	rjmp	.-92     	; 0x63c <arduinoDataInterpreter>
     698:	08 95       	ret

0000069a <clearSendData>:
     69a:	ee e8       	ldi	r30, 0x8E	; 142
     69c:	f3 e0       	ldi	r31, 0x03	; 3
     69e:	82 ea       	ldi	r24, 0xA2	; 162
     6a0:	93 e0       	ldi	r25, 0x03	; 3
     6a2:	11 92       	st	Z+, r1
     6a4:	e8 17       	cp	r30, r24
     6a6:	f9 07       	cpc	r31, r25
     6a8:	e1 f7       	brne	.-8      	; 0x6a2 <clearSendData+0x8>
     6aa:	08 95       	ret

000006ac <clearReceiveData>:
     6ac:	ee e6       	ldi	r30, 0x6E	; 110
     6ae:	f3 e0       	ldi	r31, 0x03	; 3
     6b0:	82 e8       	ldi	r24, 0x82	; 130
     6b2:	93 e0       	ldi	r25, 0x03	; 3
     6b4:	11 92       	st	Z+, r1
     6b6:	e8 17       	cp	r30, r24
     6b8:	f9 07       	cpc	r31, r25
     6ba:	e1 f7       	brne	.-8      	; 0x6b4 <clearReceiveData+0x8>
     6bc:	08 95       	ret

000006be <__vector_39>:
     6be:	1f 92       	push	r1
     6c0:	0f 92       	push	r0
     6c2:	0f b6       	in	r0, 0x3f	; 63
     6c4:	0f 92       	push	r0
     6c6:	11 24       	eor	r1, r1
     6c8:	0b b6       	in	r0, 0x3b	; 59
     6ca:	0f 92       	push	r0
     6cc:	2f 93       	push	r18
     6ce:	3f 93       	push	r19
     6d0:	4f 93       	push	r20
     6d2:	5f 93       	push	r21
     6d4:	6f 93       	push	r22
     6d6:	7f 93       	push	r23
     6d8:	8f 93       	push	r24
     6da:	9f 93       	push	r25
     6dc:	af 93       	push	r26
     6de:	bf 93       	push	r27
     6e0:	ef 93       	push	r30
     6e2:	ff 93       	push	r31
     6e4:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     6e8:	80 35       	cpi	r24, 0x50	; 80
     6ea:	69 f0       	breq	.+26     	; 0x706 <__vector_39+0x48>
     6ec:	88 35       	cpi	r24, 0x58	; 88
     6ee:	51 f1       	breq	.+84     	; 0x744 <__vector_39+0x86>
     6f0:	80 34       	cpi	r24, 0x40	; 64
     6f2:	a9 f5       	brne	.+106    	; 0x75e <__vector_39+0xa0>
     6f4:	db df       	rcall	.-74     	; 0x6ac <clearReceiveData>
     6f6:	10 92 69 02 	sts	0x0269, r1	; 0x800269 <bytecounter.2016+0x1>
     6fa:	10 92 68 02 	sts	0x0268, r1	; 0x800268 <bytecounter.2016>
     6fe:	85 ec       	ldi	r24, 0xC5	; 197
     700:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     704:	2c c0       	rjmp	.+88     	; 0x75e <__vector_39+0xa0>
     706:	80 91 68 02 	lds	r24, 0x0268	; 0x800268 <bytecounter.2016>
     70a:	90 91 69 02 	lds	r25, 0x0269	; 0x800269 <bytecounter.2016+0x1>
     70e:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     712:	fc 01       	movw	r30, r24
     714:	e2 59       	subi	r30, 0x92	; 146
     716:	fc 4f       	sbci	r31, 0xFC	; 252
     718:	20 83       	st	Z, r18
     71a:	82 31       	cpi	r24, 0x12	; 18
     71c:	91 05       	cpc	r25, r1
     71e:	4c f4       	brge	.+18     	; 0x732 <__vector_39+0x74>
     720:	01 96       	adiw	r24, 0x01	; 1
     722:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <bytecounter.2016+0x1>
     726:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <bytecounter.2016>
     72a:	85 ec       	ldi	r24, 0xC5	; 197
     72c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     730:	16 c0       	rjmp	.+44     	; 0x75e <__vector_39+0xa0>
     732:	01 96       	adiw	r24, 0x01	; 1
     734:	90 93 69 02 	sts	0x0269, r25	; 0x800269 <bytecounter.2016+0x1>
     738:	80 93 68 02 	sts	0x0268, r24	; 0x800268 <bytecounter.2016>
     73c:	85 e8       	ldi	r24, 0x85	; 133
     73e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     742:	0d c0       	rjmp	.+26     	; 0x75e <__vector_39+0xa0>
     744:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     748:	e0 91 68 02 	lds	r30, 0x0268	; 0x800268 <bytecounter.2016>
     74c:	f0 91 69 02 	lds	r31, 0x0269	; 0x800269 <bytecounter.2016+0x1>
     750:	e2 59       	subi	r30, 0x92	; 146
     752:	fc 4f       	sbci	r31, 0xFC	; 252
     754:	80 83       	st	Z, r24
     756:	85 e9       	ldi	r24, 0x95	; 149
     758:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     75c:	98 df       	rcall	.-208    	; 0x68e <I2C_receiveInterpreter>
     75e:	ff 91       	pop	r31
     760:	ef 91       	pop	r30
     762:	bf 91       	pop	r27
     764:	af 91       	pop	r26
     766:	9f 91       	pop	r25
     768:	8f 91       	pop	r24
     76a:	7f 91       	pop	r23
     76c:	6f 91       	pop	r22
     76e:	5f 91       	pop	r21
     770:	4f 91       	pop	r20
     772:	3f 91       	pop	r19
     774:	2f 91       	pop	r18
     776:	0f 90       	pop	r0
     778:	0b be       	out	0x3b, r0	; 59
     77a:	0f 90       	pop	r0
     77c:	0f be       	out	0x3f, r0	; 63
     77e:	0f 90       	pop	r0
     780:	1f 90       	pop	r1
     782:	18 95       	reti

00000784 <TWIwaitUntilReady>:


void TWIwaitUntilReady(){
	while (!(TWCR & (1 << TWINT)));
     784:	ec eb       	ldi	r30, 0xBC	; 188
     786:	f0 e0       	ldi	r31, 0x00	; 0
     788:	80 81       	ld	r24, Z
     78a:	88 23       	and	r24, r24
     78c:	ec f7       	brge	.-6      	; 0x788 <TWIwaitUntilReady+0x4>
}
     78e:	08 95       	ret

00000790 <checkCode>:


void checkCode(uint8_t code){
     790:	cf 93       	push	r28
     792:	df 93       	push	r29
     794:	cd b7       	in	r28, 0x3d	; 61
     796:	de b7       	in	r29, 0x3e	; 62
     798:	cf 5f       	subi	r28, 0xFF	; 255
     79a:	d1 09       	sbc	r29, r1
     79c:	0f b6       	in	r0, 0x3f	; 63
     79e:	f8 94       	cli
     7a0:	de bf       	out	0x3e, r29	; 62
     7a2:	0f be       	out	0x3f, r0	; 63
     7a4:	cd bf       	out	0x3d, r28	; 61
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     7a6:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
	while (!(TWCR & (1 << TWINT)));
}


void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
     7aa:	98 7f       	andi	r25, 0xF8	; 248
     7ac:	89 17       	cp	r24, r25
     7ae:	81 f0       	breq	.+32     	; 0x7d0 <checkCode+0x40>
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
     7b0:	86 e0       	ldi	r24, 0x06	; 6
     7b2:	92 e0       	ldi	r25, 0x02	; 2
     7b4:	1e d1       	rcall	.+572    	; 0x9f2 <writeString>
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     7b6:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     7ba:	88 7f       	andi	r24, 0xF8	; 248
     7bc:	40 e1       	ldi	r20, 0x10	; 16
     7be:	be 01       	movw	r22, r28
     7c0:	6f 5f       	subi	r22, 0xFF	; 255
     7c2:	7f 4f       	sbci	r23, 0xFF	; 255
     7c4:	90 e0       	ldi	r25, 0x00	; 0

void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
		writeString( itoa( TWIGetStatus(), buffer, 16) );
     7c6:	02 d6       	rcall	.+3076   	; 0x13cc <__itoa_ncheck>
		writeString("\n\n\r");
     7c8:	14 d1       	rcall	.+552    	; 0x9f2 <writeString>
     7ca:	81 e3       	ldi	r24, 0x31	; 49
     7cc:	92 e0       	ldi	r25, 0x02	; 2
     7ce:	11 d1       	rcall	.+546    	; 0x9f2 <writeString>
	}
}
     7d0:	c1 50       	subi	r28, 0x01	; 1
     7d2:	df 4f       	sbci	r29, 0xFF	; 255
     7d4:	0f b6       	in	r0, 0x3f	; 63
     7d6:	f8 94       	cli
     7d8:	de bf       	out	0x3e, r29	; 62
     7da:	0f be       	out	0x3f, r0	; 63
     7dc:	cd bf       	out	0x3d, r28	; 61
     7de:	df 91       	pop	r29
     7e0:	cf 91       	pop	r28
     7e2:	08 95       	ret

000007e4 <writeToSlave>:


void writeToSlave(uint8_t address, uint8_t dataByte[]){
     7e4:	af 92       	push	r10
     7e6:	bf 92       	push	r11
     7e8:	cf 92       	push	r12
     7ea:	df 92       	push	r13
     7ec:	ff 92       	push	r15
     7ee:	0f 93       	push	r16
     7f0:	1f 93       	push	r17
     7f2:	cf 93       	push	r28
     7f4:	df 93       	push	r29
     7f6:	c8 2f       	mov	r28, r24
     7f8:	8b 01       	movw	r16, r22
	
	TWISendStart();
     7fa:	0f 2e       	mov	r0, r31
     7fc:	fc eb       	ldi	r31, 0xBC	; 188
     7fe:	cf 2e       	mov	r12, r31
     800:	d1 2c       	mov	r13, r1
     802:	f0 2d       	mov	r31, r0
     804:	85 ea       	ldi	r24, 0xA5	; 165
     806:	f6 01       	movw	r30, r12
     808:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     80a:	bc df       	rcall	.-136    	; 0x784 <TWIwaitUntilReady>
	checkCode(0x08);
     80c:	88 e0       	ldi	r24, 0x08	; 8
     80e:	c0 df       	rcall	.-128    	; 0x790 <checkCode>
	
	TWIWrite((address << 1));
     810:	cc 0f       	add	r28, r28
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     812:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     816:	85 e8       	ldi	r24, 0x85	; 133
     818:	f6 01       	movw	r30, r12
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
     81a:	80 83       	st	Z, r24
	checkCode(0x18);
     81c:	b3 df       	rcall	.-154    	; 0x784 <TWIwaitUntilReady>
     81e:	88 e1       	ldi	r24, 0x18	; 24
     820:	b7 df       	rcall	.-146    	; 0x790 <checkCode>
     822:	e8 01       	movw	r28, r16
     824:	0c 5e       	subi	r16, 0xEC	; 236
     826:	1f 4f       	sbci	r17, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     828:	0f 2e       	mov	r0, r31
     82a:	fb eb       	ldi	r31, 0xBB	; 187
     82c:	af 2e       	mov	r10, r31
     82e:	b1 2c       	mov	r11, r1
     830:	f0 2d       	mov	r31, r0
	TWISendTransmit();
     832:	0f 2e       	mov	r0, r31
     834:	f5 e8       	ldi	r31, 0x85	; 133
     836:	ff 2e       	mov	r15, r31
     838:	f0 2d       	mov	r31, r0
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
     83a:	89 91       	ld	r24, Y+
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     83c:	f5 01       	movw	r30, r10
	TWISendTransmit();
     83e:	80 83       	st	Z, r24
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
     840:	f6 01       	movw	r30, r12
     842:	f0 82       	st	Z, r15
		checkCode(0x28);
     844:	9f df       	rcall	.-194    	; 0x784 <TWIwaitUntilReady>
     846:	88 e2       	ldi	r24, 0x28	; 40
     848:	a3 df       	rcall	.-186    	; 0x790 <checkCode>
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
     84a:	c0 17       	cp	r28, r16
     84c:	d1 07       	cpc	r29, r17
     84e:	a9 f7       	brne	.-22     	; 0x83a <writeToSlave+0x56>
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
		checkCode(0x28);
	}
	
	TWISendStop();
     850:	85 e9       	ldi	r24, 0x95	; 149
     852:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
}
     856:	df 91       	pop	r29
     858:	cf 91       	pop	r28
     85a:	1f 91       	pop	r17
     85c:	0f 91       	pop	r16
     85e:	ff 90       	pop	r15
     860:	df 90       	pop	r13
     862:	cf 90       	pop	r12
     864:	bf 90       	pop	r11
     866:	af 90       	pop	r10
     868:	08 95       	ret

0000086a <rp6DataConstructor>:
	arduinoData.motorEncoderLVal = receiveDataTWI[1] * 30000 / 255;
	arduinoData.motorEncoderRVal = receiveDataTWI[2] * 30000 / 255;
}


void rp6DataConstructor(){
     86a:	0f 93       	push	r16
     86c:	1f 93       	push	r17
     86e:	cf 93       	push	r28
     870:	df 93       	push	r29
	clearSendData();
     872:	13 df       	rcall	.-474    	; 0x69a <clearSendData>
	
	sendDataTWI[0] = 1;
     874:	ce e8       	ldi	r28, 0x8E	; 142
     876:	d3 e0       	ldi	r29, 0x03	; 3
     878:	81 e0       	ldi	r24, 0x01	; 1
     87a:	88 83       	st	Y, r24
	sendDataTWI[1] = rp6Data.driveSpeed;
     87c:	02 ea       	ldi	r16, 0xA2	; 162
     87e:	13 e0       	ldi	r17, 0x03	; 3
     880:	f8 01       	movw	r30, r16
     882:	80 81       	ld	r24, Z
     884:	89 83       	std	Y+1, r24	; 0x01
	sendDataTWI[2] = rp6Data.driveDirection + 1;
     886:	81 81       	ldd	r24, Z+1	; 0x01
     888:	8f 5f       	subi	r24, 0xFF	; 255
     88a:	8a 83       	std	Y+2, r24	; 0x02
	sendDataTWI[3] = rp6Data.turnDirection + 1;
     88c:	82 81       	ldd	r24, Z+2	; 0x02
     88e:	8f 5f       	subi	r24, 0xFF	; 255
     890:	8b 83       	std	Y+3, r24	; 0x03
	sendDataTWI[4] = rp6Data.accelerationRate;
     892:	83 81       	ldd	r24, Z+3	; 0x03
     894:	8c 83       	std	Y+4, r24	; 0x04
	sendDataTWI[5] = rp6Data.turnRate * 255 / 8000;
     896:	84 81       	ldd	r24, Z+4	; 0x04
     898:	95 81       	ldd	r25, Z+5	; 0x05
     89a:	4f ef       	ldi	r20, 0xFF	; 255
     89c:	48 9f       	mul	r20, r24
     89e:	90 01       	movw	r18, r0
     8a0:	49 9f       	mul	r20, r25
     8a2:	30 0d       	add	r19, r0
     8a4:	11 24       	eor	r1, r1
     8a6:	00 24       	eor	r0, r0
     8a8:	22 0f       	add	r18, r18
     8aa:	33 1f       	adc	r19, r19
     8ac:	00 1c       	adc	r0, r0
     8ae:	22 0f       	add	r18, r18
     8b0:	33 1f       	adc	r19, r19
     8b2:	00 1c       	adc	r0, r0
     8b4:	23 2f       	mov	r18, r19
     8b6:	30 2d       	mov	r19, r0
     8b8:	a9 e1       	ldi	r26, 0x19	; 25
     8ba:	b4 e0       	ldi	r27, 0x04	; 4
     8bc:	23 d5       	rcall	.+2630   	; 0x1304 <__umulhisi3>
     8be:	96 95       	lsr	r25
     8c0:	87 95       	ror	r24
     8c2:	8d 83       	std	Y+5, r24	; 0x05
	sendDataTWI[6] = rp6Data.driveSpeedThreshold * 255 / 6000;
     8c4:	86 81       	ldd	r24, Z+6	; 0x06
     8c6:	97 81       	ldd	r25, Z+7	; 0x07
     8c8:	48 9f       	mul	r20, r24
     8ca:	90 01       	movw	r18, r0
     8cc:	49 9f       	mul	r20, r25
     8ce:	30 0d       	add	r19, r0
     8d0:	11 24       	eor	r1, r1
     8d2:	32 95       	swap	r19
     8d4:	22 95       	swap	r18
     8d6:	2f 70       	andi	r18, 0x0F	; 15
     8d8:	23 27       	eor	r18, r19
     8da:	3f 70       	andi	r19, 0x0F	; 15
     8dc:	23 27       	eor	r18, r19
     8de:	a9 ed       	ldi	r26, 0xD9	; 217
     8e0:	b5 e1       	ldi	r27, 0x15	; 21
     8e2:	10 d5       	rcall	.+2592   	; 0x1304 <__umulhisi3>
     8e4:	96 95       	lsr	r25
     8e6:	87 95       	ror	r24
     8e8:	92 95       	swap	r25
     8ea:	82 95       	swap	r24
     8ec:	8f 70       	andi	r24, 0x0F	; 15
     8ee:	89 27       	eor	r24, r25
     8f0:	9f 70       	andi	r25, 0x0F	; 15
     8f2:	89 27       	eor	r24, r25
     8f4:	8e 83       	std	Y+6, r24	; 0x06
	sendDataTWI[7] = rp6Data.updateSpeed / 2000;
     8f6:	60 85       	ldd	r22, Z+8	; 0x08
     8f8:	71 85       	ldd	r23, Z+9	; 0x09
     8fa:	82 85       	ldd	r24, Z+10	; 0x0a
     8fc:	93 85       	ldd	r25, Z+11	; 0x0b
     8fe:	20 ed       	ldi	r18, 0xD0	; 208
     900:	37 e0       	ldi	r19, 0x07	; 7
     902:	40 e0       	ldi	r20, 0x00	; 0
     904:	50 e0       	ldi	r21, 0x00	; 0
     906:	dc d4       	rcall	.+2488   	; 0x12c0 <__udivmodsi4>
     908:	2f 83       	std	Y+7, r18	; 0x07
	sendDataTWI[8] = rp6Data.enableBeeper;
     90a:	f8 01       	movw	r30, r16
     90c:	84 85       	ldd	r24, Z+12	; 0x0c
     90e:	88 87       	std	Y+8, r24	; 0x08
     910:	e7 e9       	ldi	r30, 0x97	; 151
     912:	f3 e0       	ldi	r31, 0x03	; 3
     914:	82 ea       	ldi	r24, 0xA2	; 162
     916:	93 e0       	ldi	r25, 0x03	; 3
	
	for(int i = 9; i < DATASIZE; i++){
		sendDataTWI[i] = 0;
     918:	11 92       	st	Z+, r1
	sendDataTWI[5] = rp6Data.turnRate * 255 / 8000;
	sendDataTWI[6] = rp6Data.driveSpeedThreshold * 255 / 6000;
	sendDataTWI[7] = rp6Data.updateSpeed / 2000;
	sendDataTWI[8] = rp6Data.enableBeeper;
	
	for(int i = 9; i < DATASIZE; i++){
     91a:	e8 17       	cp	r30, r24
     91c:	f9 07       	cpc	r31, r25
		sendDataTWI[i] = 0;
	}
	
	writeToSlave(RP6_ADDRESS, sendDataTWI);
     91e:	e1 f7       	brne	.-8      	; 0x918 <rp6DataConstructor+0xae>
     920:	6e e8       	ldi	r22, 0x8E	; 142
     922:	73 e0       	ldi	r23, 0x03	; 3
     924:	83 e0       	ldi	r24, 0x03	; 3
     926:	5e df       	rcall	.-324    	; 0x7e4 <writeToSlave>
}
     928:	df 91       	pop	r29
     92a:	cf 91       	pop	r28
     92c:	1f 91       	pop	r17
     92e:	0f 91       	pop	r16
     930:	08 95       	ret

00000932 <readFromSlave>:
	TWISendStop();
	
}


void readFromSlave(uint8_t address){
     932:	0f 93       	push	r16
     934:	1f 93       	push	r17
     936:	cf 93       	push	r28
     938:	c8 2f       	mov	r28, r24
	
	TWISendStart();
     93a:	0c eb       	ldi	r16, 0xBC	; 188
     93c:	10 e0       	ldi	r17, 0x00	; 0
     93e:	85 ea       	ldi	r24, 0xA5	; 165
     940:	f8 01       	movw	r30, r16
     942:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     944:	1f df       	rcall	.-450    	; 0x784 <TWIwaitUntilReady>
	checkCode(0x08);
     946:	88 e0       	ldi	r24, 0x08	; 8
     948:	23 df       	rcall	.-442    	; 0x790 <checkCode>
	
	TWIWrite( (address << 1) + 1 );
     94a:	cc 0f       	add	r28, r28
     94c:	cf 5f       	subi	r28, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     94e:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     952:	85 e8       	ldi	r24, 0x85	; 133
     954:	f8 01       	movw	r30, r16
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite( (address << 1) + 1 );
	TWIwaitUntilReady();
     956:	80 83       	st	Z, r24
     958:	15 df       	rcall	.-470    	; 0x784 <TWIwaitUntilReady>
	
}
     95a:	cf 91       	pop	r28
     95c:	1f 91       	pop	r17
     95e:	0f 91       	pop	r16
     960:	08 95       	ret

00000962 <__vector_15>:
		break;
	}
}


ISR(TIMER2_OVF_vect){
     962:	1f 92       	push	r1
     964:	0f 92       	push	r0
     966:	0f b6       	in	r0, 0x3f	; 63
     968:	0f 92       	push	r0
     96a:	11 24       	eor	r1, r1
     96c:	0b b6       	in	r0, 0x3b	; 59
     96e:	0f 92       	push	r0
     970:	2f 93       	push	r18
     972:	3f 93       	push	r19
     974:	4f 93       	push	r20
     976:	5f 93       	push	r21
     978:	6f 93       	push	r22
     97a:	7f 93       	push	r23
     97c:	8f 93       	push	r24
     97e:	9f 93       	push	r25
     980:	af 93       	push	r26
     982:	bf 93       	push	r27
     984:	ef 93       	push	r30
     986:	ff 93       	push	r31
	static int counter = 0;
	
	if(counter == 6){
     988:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <__data_end>
     98c:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <__data_end+0x1>
     990:	86 30       	cpi	r24, 0x06	; 6
     992:	91 05       	cpc	r25, r1
     994:	11 f4       	brne	.+4      	; 0x99a <__vector_15+0x38>
		rp6DataConstructor();
     996:	69 df       	rcall	.-302    	; 0x86a <rp6DataConstructor>
     998:	08 c0       	rjmp	.+16     	; 0x9aa <__vector_15+0x48>
		}else if(counter >= 12){
     99a:	0c 97       	sbiw	r24, 0x0c	; 12
     99c:	34 f0       	brlt	.+12     	; 0x9aa <__vector_15+0x48>
		readFromSlave(RP6_ADDRESS);
     99e:	83 e0       	ldi	r24, 0x03	; 3
     9a0:	c8 df       	rcall	.-112    	; 0x932 <readFromSlave>
		counter = 0;
     9a2:	10 92 67 02 	sts	0x0267, r1	; 0x800267 <__data_end+0x1>
     9a6:	10 92 66 02 	sts	0x0266, r1	; 0x800266 <__data_end>
	}
	
	counter++;
     9aa:	80 91 66 02 	lds	r24, 0x0266	; 0x800266 <__data_end>
     9ae:	90 91 67 02 	lds	r25, 0x0267	; 0x800267 <__data_end+0x1>
     9b2:	01 96       	adiw	r24, 0x01	; 1
     9b4:	90 93 67 02 	sts	0x0267, r25	; 0x800267 <__data_end+0x1>
     9b8:	80 93 66 02 	sts	0x0266, r24	; 0x800266 <__data_end>
}
     9bc:	ff 91       	pop	r31
     9be:	ef 91       	pop	r30
     9c0:	bf 91       	pop	r27
     9c2:	af 91       	pop	r26
     9c4:	9f 91       	pop	r25
     9c6:	8f 91       	pop	r24
     9c8:	7f 91       	pop	r23
     9ca:	6f 91       	pop	r22
     9cc:	5f 91       	pop	r21
     9ce:	4f 91       	pop	r20
     9d0:	3f 91       	pop	r19
     9d2:	2f 91       	pop	r18
     9d4:	0f 90       	pop	r0
     9d6:	0b be       	out	0x3b, r0	; 59
     9d8:	0f 90       	pop	r0
     9da:	0f be       	out	0x3f, r0	; 63
     9dc:	0f 90       	pop	r0
     9de:	1f 90       	pop	r1
     9e0:	18 95       	reti

000009e2 <writeChar>:
	
	writeChar(charToSend);
	writeChar(' ');
	writeInt(intToSend);
	writeString("\r\n");
}
     9e2:	e0 ec       	ldi	r30, 0xC0	; 192
     9e4:	f0 e0       	ldi	r31, 0x00	; 0
     9e6:	90 81       	ld	r25, Z
     9e8:	95 ff       	sbrs	r25, 5
     9ea:	fd cf       	rjmp	.-6      	; 0x9e6 <writeChar+0x4>
     9ec:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     9f0:	08 95       	ret

000009f2 <writeString>:
     9f2:	0f 93       	push	r16
     9f4:	1f 93       	push	r17
     9f6:	cf 93       	push	r28
     9f8:	fc 01       	movw	r30, r24
     9fa:	80 81       	ld	r24, Z
     9fc:	88 23       	and	r24, r24
     9fe:	51 f0       	breq	.+20     	; 0xa14 <writeString+0x22>
     a00:	8f 01       	movw	r16, r30
     a02:	c0 e0       	ldi	r28, 0x00	; 0
     a04:	ee df       	rcall	.-36     	; 0x9e2 <writeChar>
     a06:	cf 5f       	subi	r28, 0xFF	; 255
     a08:	f8 01       	movw	r30, r16
     a0a:	ec 0f       	add	r30, r28
     a0c:	f1 1d       	adc	r31, r1
     a0e:	80 81       	ld	r24, Z
     a10:	81 11       	cpse	r24, r1
     a12:	f8 cf       	rjmp	.-16     	; 0xa04 <writeString+0x12>
     a14:	cf 91       	pop	r28
     a16:	1f 91       	pop	r17
     a18:	0f 91       	pop	r16
     a1a:	08 95       	ret

00000a1c <writeInt>:
     a1c:	cf 93       	push	r28
     a1e:	df 93       	push	r29
     a20:	cd b7       	in	r28, 0x3d	; 61
     a22:	de b7       	in	r29, 0x3e	; 62
     a24:	28 97       	sbiw	r28, 0x08	; 8
     a26:	0f b6       	in	r0, 0x3f	; 63
     a28:	f8 94       	cli
     a2a:	de bf       	out	0x3e, r29	; 62
     a2c:	0f be       	out	0x3f, r0	; 63
     a2e:	cd bf       	out	0x3d, r28	; 61
     a30:	4a e0       	ldi	r20, 0x0A	; 10
     a32:	be 01       	movw	r22, r28
     a34:	6f 5f       	subi	r22, 0xFF	; 255
     a36:	7f 4f       	sbci	r23, 0xFF	; 255
     a38:	c9 d4       	rcall	.+2450   	; 0x13cc <__itoa_ncheck>
     a3a:	ce 01       	movw	r24, r28
     a3c:	01 96       	adiw	r24, 0x01	; 1
     a3e:	d9 df       	rcall	.-78     	; 0x9f2 <writeString>
     a40:	28 96       	adiw	r28, 0x08	; 8
     a42:	0f b6       	in	r0, 0x3f	; 63
     a44:	f8 94       	cli
     a46:	de bf       	out	0x3e, r29	; 62
     a48:	0f be       	out	0x3f, r0	; 63
     a4a:	cd bf       	out	0x3d, r28	; 61
     a4c:	df 91       	pop	r29
     a4e:	cf 91       	pop	r28
     a50:	08 95       	ret

00000a52 <globalVariablesTransmitUSART>:

void globalVariablesTransmitUSART(int direction, int turn, int throttle) {
     a52:	ef 92       	push	r14
     a54:	ff 92       	push	r15
     a56:	0f 93       	push	r16
     a58:	1f 93       	push	r17
     a5a:	cf 93       	push	r28
     a5c:	df 93       	push	r29
     a5e:	7c 01       	movw	r14, r24
     a60:	8b 01       	movw	r16, r22
     a62:	ea 01       	movw	r28, r20
	writeString("Direction: ");
     a64:	88 e3       	ldi	r24, 0x38	; 56
     a66:	92 e0       	ldi	r25, 0x02	; 2
     a68:	c4 df       	rcall	.-120    	; 0x9f2 <writeString>
	writeInt(direction);
     a6a:	c7 01       	movw	r24, r14
     a6c:	d7 df       	rcall	.-82     	; 0xa1c <writeInt>
	writeString(", Turn: ");
     a6e:	84 e4       	ldi	r24, 0x44	; 68
     a70:	92 e0       	ldi	r25, 0x02	; 2
	writeInt(turn);
     a72:	bf df       	rcall	.-130    	; 0x9f2 <writeString>
     a74:	c8 01       	movw	r24, r16
	writeString(", Throttle: ");
     a76:	d2 df       	rcall	.-92     	; 0xa1c <writeInt>
     a78:	8d e4       	ldi	r24, 0x4D	; 77
     a7a:	92 e0       	ldi	r25, 0x02	; 2
	writeInt(throttle);
     a7c:	ba df       	rcall	.-140    	; 0x9f2 <writeString>
     a7e:	ce 01       	movw	r24, r28
     a80:	cd df       	rcall	.-102    	; 0xa1c <writeInt>
	writeString("\r\n");
     a82:	85 e3       	ldi	r24, 0x35	; 53
     a84:	92 e0       	ldi	r25, 0x02	; 2
     a86:	b5 df       	rcall	.-150    	; 0x9f2 <writeString>
     a88:	df 91       	pop	r29
     a8a:	cf 91       	pop	r28
     a8c:	1f 91       	pop	r17
     a8e:	0f 91       	pop	r16
     a90:	ff 90       	pop	r15
     a92:	ef 90       	pop	r14
     a94:	08 95       	ret

00000a96 <initTimer>:
     a96:	e1 e8       	ldi	r30, 0x81	; 129
}

int cyclesToMm(unsigned long cycles) {
	
	return ((cycles * SPEED_OF_SOUND) / 20000) - CORRECTION;
}
     a98:	f0 e0       	ldi	r31, 0x00	; 0
     a9a:	80 81       	ld	r24, Z
     a9c:	82 60       	ori	r24, 0x02	; 2
     a9e:	80 83       	st	Z, r24
     aa0:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     aa4:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     aa8:	08 95       	ret

00000aaa <ultrasonicSensor>:
     aaa:	cf 93       	push	r28
     aac:	df 93       	push	r29
     aae:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     ab2:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     ab6:	aa e0       	ldi	r26, 0x0A	; 10
     ab8:	b1 e0       	ldi	r27, 0x01	; 1
     aba:	8c 91       	ld	r24, X
     abc:	82 60       	ori	r24, 0x02	; 2
     abe:	8c 93       	st	X, r24
     ac0:	eb e0       	ldi	r30, 0x0B	; 11
     ac2:	f1 e0       	ldi	r31, 0x01	; 1
     ac4:	80 81       	ld	r24, Z
     ac6:	8d 7f       	andi	r24, 0xFD	; 253
     ac8:	80 83       	st	Z, r24
     aca:	2a e0       	ldi	r18, 0x0A	; 10
     acc:	2a 95       	dec	r18
     ace:	f1 f7       	brne	.-4      	; 0xacc <ultrasonicSensor+0x22>
     ad0:	00 c0       	rjmp	.+0      	; 0xad2 <ultrasonicSensor+0x28>
     ad2:	80 81       	ld	r24, Z
     ad4:	82 60       	ori	r24, 0x02	; 2
     ad6:	80 83       	st	Z, r24
     ad8:	8a e1       	ldi	r24, 0x1A	; 26
     ada:	8a 95       	dec	r24
     adc:	f1 f7       	brne	.-4      	; 0xada <ultrasonicSensor+0x30>
     ade:	00 c0       	rjmp	.+0      	; 0xae0 <ultrasonicSensor+0x36>
     ae0:	80 81       	ld	r24, Z
     ae2:	8d 7f       	andi	r24, 0xFD	; 253
     ae4:	80 83       	st	Z, r24
     ae6:	8c 91       	ld	r24, X
     ae8:	8d 7f       	andi	r24, 0xFD	; 253
     aea:	8c 93       	st	X, r24
     aec:	80 e0       	ldi	r24, 0x00	; 0
     aee:	90 e0       	ldi	r25, 0x00	; 0
     af0:	dc 01       	movw	r26, r24
     af2:	e9 e0       	ldi	r30, 0x09	; 9
     af4:	f1 e0       	ldi	r31, 0x01	; 1
     af6:	0a c0       	rjmp	.+20     	; 0xb0c <ultrasonicSensor+0x62>
     af8:	01 96       	adiw	r24, 0x01	; 1
     afa:	a1 1d       	adc	r26, r1
     afc:	b1 1d       	adc	r27, r1
     afe:	81 34       	cpi	r24, 0x41	; 65
     b00:	2c e9       	ldi	r18, 0x9C	; 156
     b02:	92 07       	cpc	r25, r18
     b04:	a1 05       	cpc	r26, r1
     b06:	b1 05       	cpc	r27, r1
     b08:	09 f4       	brne	.+2      	; 0xb0c <ultrasonicSensor+0x62>
     b0a:	45 c0       	rjmp	.+138    	; 0xb96 <ultrasonicSensor+0xec>
     b0c:	20 81       	ld	r18, Z
     b0e:	21 fd       	sbrc	r18, 1
     b10:	f3 cf       	rjmp	.-26     	; 0xaf8 <ultrasonicSensor+0x4e>
     b12:	e9 e0       	ldi	r30, 0x09	; 9
     b14:	f1 e0       	ldi	r31, 0x01	; 1
     b16:	0d c0       	rjmp	.+26     	; 0xb32 <ultrasonicSensor+0x88>
     b18:	ac 01       	movw	r20, r24
     b1a:	bd 01       	movw	r22, r26
     b1c:	4f 5f       	subi	r20, 0xFF	; 255
     b1e:	5f 4f       	sbci	r21, 0xFF	; 255
     b20:	6f 4f       	sbci	r22, 0xFF	; 255
     b22:	7f 4f       	sbci	r23, 0xFF	; 255
     b24:	80 34       	cpi	r24, 0x40	; 64
     b26:	9c 49       	sbci	r25, 0x9C	; 156
     b28:	a1 05       	cpc	r26, r1
     b2a:	b1 05       	cpc	r27, r1
     b2c:	b9 f1       	breq	.+110    	; 0xb9c <ultrasonicSensor+0xf2>
     b2e:	db 01       	movw	r26, r22
     b30:	ca 01       	movw	r24, r20
     b32:	20 81       	ld	r18, Z
     b34:	21 ff       	sbrs	r18, 1
     b36:	f0 cf       	rjmp	.-32     	; 0xb18 <ultrasonicSensor+0x6e>
     b38:	c0 91 84 00 	lds	r28, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     b3c:	d0 91 85 00 	lds	r29, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     b40:	e9 e0       	ldi	r30, 0x09	; 9
     b42:	f1 e0       	ldi	r31, 0x01	; 1
     b44:	0d c0       	rjmp	.+26     	; 0xb60 <ultrasonicSensor+0xb6>
     b46:	ac 01       	movw	r20, r24
     b48:	bd 01       	movw	r22, r26
     b4a:	4f 5f       	subi	r20, 0xFF	; 255
     b4c:	5f 4f       	sbci	r21, 0xFF	; 255
     b4e:	6f 4f       	sbci	r22, 0xFF	; 255
     b50:	7f 4f       	sbci	r23, 0xFF	; 255
     b52:	80 34       	cpi	r24, 0x40	; 64
     b54:	9c 49       	sbci	r25, 0x9C	; 156
     b56:	a1 05       	cpc	r26, r1
     b58:	b1 05       	cpc	r27, r1
     b5a:	19 f1       	breq	.+70     	; 0xba2 <ultrasonicSensor+0xf8>
     b5c:	db 01       	movw	r26, r22
     b5e:	ca 01       	movw	r24, r20
     b60:	20 81       	ld	r18, Z
     b62:	21 fd       	sbrc	r18, 1
     b64:	f0 cf       	rjmp	.-32     	; 0xb46 <ultrasonicSensor+0x9c>
     b66:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     b6a:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     b6e:	c9 01       	movw	r24, r18
     b70:	a0 e0       	ldi	r26, 0x00	; 0
     b72:	b0 e0       	ldi	r27, 0x00	; 0
     b74:	9c 01       	movw	r18, r24
     b76:	ad 01       	movw	r20, r26
     b78:	2c 1b       	sub	r18, r28
     b7a:	3d 0b       	sbc	r19, r29
     b7c:	41 09       	sbc	r20, r1
     b7e:	51 09       	sbc	r21, r1
     b80:	a3 eb       	ldi	r26, 0xB3	; 179
     b82:	b6 e0       	ldi	r27, 0x06	; 6
     b84:	ce d3       	rcall	.+1948   	; 0x1322 <__muluhisi3>
     b86:	20 e2       	ldi	r18, 0x20	; 32
     b88:	3e e4       	ldi	r19, 0x4E	; 78
     b8a:	40 e0       	ldi	r20, 0x00	; 0
     b8c:	50 e0       	ldi	r21, 0x00	; 0
     b8e:	98 d3       	rcall	.+1840   	; 0x12c0 <__udivmodsi4>
     b90:	c9 01       	movw	r24, r18
     b92:	05 97       	sbiw	r24, 0x05	; 5
     b94:	08 c0       	rjmp	.+16     	; 0xba6 <ultrasonicSensor+0xfc>
     b96:	80 e0       	ldi	r24, 0x00	; 0
     b98:	90 e0       	ldi	r25, 0x00	; 0
     b9a:	05 c0       	rjmp	.+10     	; 0xba6 <ultrasonicSensor+0xfc>
     b9c:	80 e0       	ldi	r24, 0x00	; 0
     b9e:	90 e0       	ldi	r25, 0x00	; 0
     ba0:	02 c0       	rjmp	.+4      	; 0xba6 <ultrasonicSensor+0xfc>
     ba2:	80 e0       	ldi	r24, 0x00	; 0
     ba4:	90 e0       	ldi	r25, 0x00	; 0
     ba6:	df 91       	pop	r29
     ba8:	cf 91       	pop	r28
     baa:	08 95       	ret

00000bac <printUltrasonicSensorDistance>:

void printUltrasonicSensorDistance() {
     bac:	0f 93       	push	r16
     bae:	1f 93       	push	r17
     bb0:	cf 93       	push	r28
     bb2:	df 93       	push	r29
	int distance = 0;
	int distanceCm = 0;
	int distance10thCm = 0;
	
	distance = ultrasonicSensor();
     bb4:	7a df       	rcall	.-268    	; 0xaaa <ultrasonicSensor>
     bb6:	9c 01       	movw	r18, r24
	distanceCm = distance / 10;
     bb8:	6a e0       	ldi	r22, 0x0A	; 10
     bba:	70 e0       	ldi	r23, 0x00	; 0
     bbc:	6e d3       	rcall	.+1756   	; 0x129a <__divmodhi4>
     bbe:	8b 01       	movw	r16, r22
	distance10thCm = distance - (distanceCm * 10);
     bc0:	46 ef       	ldi	r20, 0xF6	; 246
     bc2:	46 03       	mulsu	r20, r22
     bc4:	e0 01       	movw	r28, r0
     bc6:	47 9f       	mul	r20, r23
     bc8:	d0 0d       	add	r29, r0
     bca:	11 24       	eor	r1, r1
     bcc:	c2 0f       	add	r28, r18
     bce:	d3 1f       	adc	r29, r19
	writeString("Distance: ");
     bd0:	8a e5       	ldi	r24, 0x5A	; 90
     bd2:	92 e0       	ldi	r25, 0x02	; 2
	writeInt(distanceCm);
     bd4:	0e df       	rcall	.-484    	; 0x9f2 <writeString>
     bd6:	c8 01       	movw	r24, r16
	writeChar('.');
     bd8:	21 df       	rcall	.-446    	; 0xa1c <writeInt>
     bda:	8e e2       	ldi	r24, 0x2E	; 46
	writeInt(distance10thCm);
     bdc:	02 df       	rcall	.-508    	; 0x9e2 <writeChar>
     bde:	ce 01       	movw	r24, r28
     be0:	1d df       	rcall	.-454    	; 0xa1c <writeInt>
	writeString("\r\n");
     be2:	85 e3       	ldi	r24, 0x35	; 53
     be4:	92 e0       	ldi	r25, 0x02	; 2
     be6:	05 df       	rcall	.-502    	; 0x9f2 <writeString>
     be8:	df 91       	pop	r29
     bea:	cf 91       	pop	r28
     bec:	1f 91       	pop	r17
     bee:	0f 91       	pop	r16
     bf0:	08 95       	ret

00000bf2 <__subsf3>:
     bf2:	50 58       	subi	r21, 0x80	; 128

00000bf4 <__addsf3>:
     bf4:	bb 27       	eor	r27, r27
     bf6:	aa 27       	eor	r26, r26
     bf8:	0e d0       	rcall	.+28     	; 0xc16 <__addsf3x>
     bfa:	e5 c0       	rjmp	.+458    	; 0xdc6 <__fp_round>
     bfc:	d6 d0       	rcall	.+428    	; 0xdaa <__fp_pscA>
     bfe:	30 f0       	brcs	.+12     	; 0xc0c <__addsf3+0x18>
     c00:	db d0       	rcall	.+438    	; 0xdb8 <__fp_pscB>
     c02:	20 f0       	brcs	.+8      	; 0xc0c <__addsf3+0x18>
     c04:	31 f4       	brne	.+12     	; 0xc12 <__addsf3+0x1e>
     c06:	9f 3f       	cpi	r25, 0xFF	; 255
     c08:	11 f4       	brne	.+4      	; 0xc0e <__addsf3+0x1a>
     c0a:	1e f4       	brtc	.+6      	; 0xc12 <__addsf3+0x1e>
     c0c:	cb c0       	rjmp	.+406    	; 0xda4 <__fp_nan>
     c0e:	0e f4       	brtc	.+2      	; 0xc12 <__addsf3+0x1e>
     c10:	e0 95       	com	r30
     c12:	e7 fb       	bst	r30, 7
     c14:	c1 c0       	rjmp	.+386    	; 0xd98 <__fp_inf>

00000c16 <__addsf3x>:
     c16:	e9 2f       	mov	r30, r25
     c18:	e7 d0       	rcall	.+462    	; 0xde8 <__fp_split3>
     c1a:	80 f3       	brcs	.-32     	; 0xbfc <__addsf3+0x8>
     c1c:	ba 17       	cp	r27, r26
     c1e:	62 07       	cpc	r22, r18
     c20:	73 07       	cpc	r23, r19
     c22:	84 07       	cpc	r24, r20
     c24:	95 07       	cpc	r25, r21
     c26:	18 f0       	brcs	.+6      	; 0xc2e <__addsf3x+0x18>
     c28:	71 f4       	brne	.+28     	; 0xc46 <__addsf3x+0x30>
     c2a:	9e f5       	brtc	.+102    	; 0xc92 <__addsf3x+0x7c>
     c2c:	ff c0       	rjmp	.+510    	; 0xe2c <__fp_zero>
     c2e:	0e f4       	brtc	.+2      	; 0xc32 <__addsf3x+0x1c>
     c30:	e0 95       	com	r30
     c32:	0b 2e       	mov	r0, r27
     c34:	ba 2f       	mov	r27, r26
     c36:	a0 2d       	mov	r26, r0
     c38:	0b 01       	movw	r0, r22
     c3a:	b9 01       	movw	r22, r18
     c3c:	90 01       	movw	r18, r0
     c3e:	0c 01       	movw	r0, r24
     c40:	ca 01       	movw	r24, r20
     c42:	a0 01       	movw	r20, r0
     c44:	11 24       	eor	r1, r1
     c46:	ff 27       	eor	r31, r31
     c48:	59 1b       	sub	r21, r25
     c4a:	99 f0       	breq	.+38     	; 0xc72 <__addsf3x+0x5c>
     c4c:	59 3f       	cpi	r21, 0xF9	; 249
     c4e:	50 f4       	brcc	.+20     	; 0xc64 <__addsf3x+0x4e>
     c50:	50 3e       	cpi	r21, 0xE0	; 224
     c52:	68 f1       	brcs	.+90     	; 0xcae <__addsf3x+0x98>
     c54:	1a 16       	cp	r1, r26
     c56:	f0 40       	sbci	r31, 0x00	; 0
     c58:	a2 2f       	mov	r26, r18
     c5a:	23 2f       	mov	r18, r19
     c5c:	34 2f       	mov	r19, r20
     c5e:	44 27       	eor	r20, r20
     c60:	58 5f       	subi	r21, 0xF8	; 248
     c62:	f3 cf       	rjmp	.-26     	; 0xc4a <__addsf3x+0x34>
     c64:	46 95       	lsr	r20
     c66:	37 95       	ror	r19
     c68:	27 95       	ror	r18
     c6a:	a7 95       	ror	r26
     c6c:	f0 40       	sbci	r31, 0x00	; 0
     c6e:	53 95       	inc	r21
     c70:	c9 f7       	brne	.-14     	; 0xc64 <__addsf3x+0x4e>
     c72:	7e f4       	brtc	.+30     	; 0xc92 <__addsf3x+0x7c>
     c74:	1f 16       	cp	r1, r31
     c76:	ba 0b       	sbc	r27, r26
     c78:	62 0b       	sbc	r22, r18
     c7a:	73 0b       	sbc	r23, r19
     c7c:	84 0b       	sbc	r24, r20
     c7e:	ba f0       	brmi	.+46     	; 0xcae <__addsf3x+0x98>
     c80:	91 50       	subi	r25, 0x01	; 1
     c82:	a1 f0       	breq	.+40     	; 0xcac <__addsf3x+0x96>
     c84:	ff 0f       	add	r31, r31
     c86:	bb 1f       	adc	r27, r27
     c88:	66 1f       	adc	r22, r22
     c8a:	77 1f       	adc	r23, r23
     c8c:	88 1f       	adc	r24, r24
     c8e:	c2 f7       	brpl	.-16     	; 0xc80 <__addsf3x+0x6a>
     c90:	0e c0       	rjmp	.+28     	; 0xcae <__addsf3x+0x98>
     c92:	ba 0f       	add	r27, r26
     c94:	62 1f       	adc	r22, r18
     c96:	73 1f       	adc	r23, r19
     c98:	84 1f       	adc	r24, r20
     c9a:	48 f4       	brcc	.+18     	; 0xcae <__addsf3x+0x98>
     c9c:	87 95       	ror	r24
     c9e:	77 95       	ror	r23
     ca0:	67 95       	ror	r22
     ca2:	b7 95       	ror	r27
     ca4:	f7 95       	ror	r31
     ca6:	9e 3f       	cpi	r25, 0xFE	; 254
     ca8:	08 f0       	brcs	.+2      	; 0xcac <__addsf3x+0x96>
     caa:	b3 cf       	rjmp	.-154    	; 0xc12 <__addsf3+0x1e>
     cac:	93 95       	inc	r25
     cae:	88 0f       	add	r24, r24
     cb0:	08 f0       	brcs	.+2      	; 0xcb4 <__addsf3x+0x9e>
     cb2:	99 27       	eor	r25, r25
     cb4:	ee 0f       	add	r30, r30
     cb6:	97 95       	ror	r25
     cb8:	87 95       	ror	r24
     cba:	08 95       	ret

00000cbc <__fixsfsi>:
     cbc:	04 d0       	rcall	.+8      	; 0xcc6 <__fixunssfsi>
     cbe:	68 94       	set
     cc0:	b1 11       	cpse	r27, r1
     cc2:	b5 c0       	rjmp	.+362    	; 0xe2e <__fp_szero>
     cc4:	08 95       	ret

00000cc6 <__fixunssfsi>:
     cc6:	98 d0       	rcall	.+304    	; 0xdf8 <__fp_splitA>
     cc8:	88 f0       	brcs	.+34     	; 0xcec <__fixunssfsi+0x26>
     cca:	9f 57       	subi	r25, 0x7F	; 127
     ccc:	90 f0       	brcs	.+36     	; 0xcf2 <__fixunssfsi+0x2c>
     cce:	b9 2f       	mov	r27, r25
     cd0:	99 27       	eor	r25, r25
     cd2:	b7 51       	subi	r27, 0x17	; 23
     cd4:	a0 f0       	brcs	.+40     	; 0xcfe <__fixunssfsi+0x38>
     cd6:	d1 f0       	breq	.+52     	; 0xd0c <__fixunssfsi+0x46>
     cd8:	66 0f       	add	r22, r22
     cda:	77 1f       	adc	r23, r23
     cdc:	88 1f       	adc	r24, r24
     cde:	99 1f       	adc	r25, r25
     ce0:	1a f0       	brmi	.+6      	; 0xce8 <__fixunssfsi+0x22>
     ce2:	ba 95       	dec	r27
     ce4:	c9 f7       	brne	.-14     	; 0xcd8 <__fixunssfsi+0x12>
     ce6:	12 c0       	rjmp	.+36     	; 0xd0c <__fixunssfsi+0x46>
     ce8:	b1 30       	cpi	r27, 0x01	; 1
     cea:	81 f0       	breq	.+32     	; 0xd0c <__fixunssfsi+0x46>
     cec:	9f d0       	rcall	.+318    	; 0xe2c <__fp_zero>
     cee:	b1 e0       	ldi	r27, 0x01	; 1
     cf0:	08 95       	ret
     cf2:	9c c0       	rjmp	.+312    	; 0xe2c <__fp_zero>
     cf4:	67 2f       	mov	r22, r23
     cf6:	78 2f       	mov	r23, r24
     cf8:	88 27       	eor	r24, r24
     cfa:	b8 5f       	subi	r27, 0xF8	; 248
     cfc:	39 f0       	breq	.+14     	; 0xd0c <__fixunssfsi+0x46>
     cfe:	b9 3f       	cpi	r27, 0xF9	; 249
     d00:	cc f3       	brlt	.-14     	; 0xcf4 <__fixunssfsi+0x2e>
     d02:	86 95       	lsr	r24
     d04:	77 95       	ror	r23
     d06:	67 95       	ror	r22
     d08:	b3 95       	inc	r27
     d0a:	d9 f7       	brne	.-10     	; 0xd02 <__fixunssfsi+0x3c>
     d0c:	3e f4       	brtc	.+14     	; 0xd1c <__fixunssfsi+0x56>
     d0e:	90 95       	com	r25
     d10:	80 95       	com	r24
     d12:	70 95       	com	r23
     d14:	61 95       	neg	r22
     d16:	7f 4f       	sbci	r23, 0xFF	; 255
     d18:	8f 4f       	sbci	r24, 0xFF	; 255
     d1a:	9f 4f       	sbci	r25, 0xFF	; 255
     d1c:	08 95       	ret

00000d1e <__floatunsisf>:
     d1e:	e8 94       	clt
     d20:	09 c0       	rjmp	.+18     	; 0xd34 <__floatsisf+0x12>

00000d22 <__floatsisf>:
     d22:	97 fb       	bst	r25, 7
     d24:	3e f4       	brtc	.+14     	; 0xd34 <__floatsisf+0x12>
     d26:	90 95       	com	r25
     d28:	80 95       	com	r24
     d2a:	70 95       	com	r23
     d2c:	61 95       	neg	r22
     d2e:	7f 4f       	sbci	r23, 0xFF	; 255
     d30:	8f 4f       	sbci	r24, 0xFF	; 255
     d32:	9f 4f       	sbci	r25, 0xFF	; 255
     d34:	99 23       	and	r25, r25
     d36:	a9 f0       	breq	.+42     	; 0xd62 <__floatsisf+0x40>
     d38:	f9 2f       	mov	r31, r25
     d3a:	96 e9       	ldi	r25, 0x96	; 150
     d3c:	bb 27       	eor	r27, r27
     d3e:	93 95       	inc	r25
     d40:	f6 95       	lsr	r31
     d42:	87 95       	ror	r24
     d44:	77 95       	ror	r23
     d46:	67 95       	ror	r22
     d48:	b7 95       	ror	r27
     d4a:	f1 11       	cpse	r31, r1
     d4c:	f8 cf       	rjmp	.-16     	; 0xd3e <__floatsisf+0x1c>
     d4e:	fa f4       	brpl	.+62     	; 0xd8e <__floatsisf+0x6c>
     d50:	bb 0f       	add	r27, r27
     d52:	11 f4       	brne	.+4      	; 0xd58 <__floatsisf+0x36>
     d54:	60 ff       	sbrs	r22, 0
     d56:	1b c0       	rjmp	.+54     	; 0xd8e <__floatsisf+0x6c>
     d58:	6f 5f       	subi	r22, 0xFF	; 255
     d5a:	7f 4f       	sbci	r23, 0xFF	; 255
     d5c:	8f 4f       	sbci	r24, 0xFF	; 255
     d5e:	9f 4f       	sbci	r25, 0xFF	; 255
     d60:	16 c0       	rjmp	.+44     	; 0xd8e <__floatsisf+0x6c>
     d62:	88 23       	and	r24, r24
     d64:	11 f0       	breq	.+4      	; 0xd6a <__floatsisf+0x48>
     d66:	96 e9       	ldi	r25, 0x96	; 150
     d68:	11 c0       	rjmp	.+34     	; 0xd8c <__floatsisf+0x6a>
     d6a:	77 23       	and	r23, r23
     d6c:	21 f0       	breq	.+8      	; 0xd76 <__floatsisf+0x54>
     d6e:	9e e8       	ldi	r25, 0x8E	; 142
     d70:	87 2f       	mov	r24, r23
     d72:	76 2f       	mov	r23, r22
     d74:	05 c0       	rjmp	.+10     	; 0xd80 <__floatsisf+0x5e>
     d76:	66 23       	and	r22, r22
     d78:	71 f0       	breq	.+28     	; 0xd96 <__floatsisf+0x74>
     d7a:	96 e8       	ldi	r25, 0x86	; 134
     d7c:	86 2f       	mov	r24, r22
     d7e:	70 e0       	ldi	r23, 0x00	; 0
     d80:	60 e0       	ldi	r22, 0x00	; 0
     d82:	2a f0       	brmi	.+10     	; 0xd8e <__floatsisf+0x6c>
     d84:	9a 95       	dec	r25
     d86:	66 0f       	add	r22, r22
     d88:	77 1f       	adc	r23, r23
     d8a:	88 1f       	adc	r24, r24
     d8c:	da f7       	brpl	.-10     	; 0xd84 <__floatsisf+0x62>
     d8e:	88 0f       	add	r24, r24
     d90:	96 95       	lsr	r25
     d92:	87 95       	ror	r24
     d94:	97 f9       	bld	r25, 7
     d96:	08 95       	ret

00000d98 <__fp_inf>:
     d98:	97 f9       	bld	r25, 7
     d9a:	9f 67       	ori	r25, 0x7F	; 127
     d9c:	80 e8       	ldi	r24, 0x80	; 128
     d9e:	70 e0       	ldi	r23, 0x00	; 0
     da0:	60 e0       	ldi	r22, 0x00	; 0
     da2:	08 95       	ret

00000da4 <__fp_nan>:
     da4:	9f ef       	ldi	r25, 0xFF	; 255
     da6:	80 ec       	ldi	r24, 0xC0	; 192
     da8:	08 95       	ret

00000daa <__fp_pscA>:
     daa:	00 24       	eor	r0, r0
     dac:	0a 94       	dec	r0
     dae:	16 16       	cp	r1, r22
     db0:	17 06       	cpc	r1, r23
     db2:	18 06       	cpc	r1, r24
     db4:	09 06       	cpc	r0, r25
     db6:	08 95       	ret

00000db8 <__fp_pscB>:
     db8:	00 24       	eor	r0, r0
     dba:	0a 94       	dec	r0
     dbc:	12 16       	cp	r1, r18
     dbe:	13 06       	cpc	r1, r19
     dc0:	14 06       	cpc	r1, r20
     dc2:	05 06       	cpc	r0, r21
     dc4:	08 95       	ret

00000dc6 <__fp_round>:
     dc6:	09 2e       	mov	r0, r25
     dc8:	03 94       	inc	r0
     dca:	00 0c       	add	r0, r0
     dcc:	11 f4       	brne	.+4      	; 0xdd2 <__fp_round+0xc>
     dce:	88 23       	and	r24, r24
     dd0:	52 f0       	brmi	.+20     	; 0xde6 <__fp_round+0x20>
     dd2:	bb 0f       	add	r27, r27
     dd4:	40 f4       	brcc	.+16     	; 0xde6 <__fp_round+0x20>
     dd6:	bf 2b       	or	r27, r31
     dd8:	11 f4       	brne	.+4      	; 0xdde <__fp_round+0x18>
     dda:	60 ff       	sbrs	r22, 0
     ddc:	04 c0       	rjmp	.+8      	; 0xde6 <__fp_round+0x20>
     dde:	6f 5f       	subi	r22, 0xFF	; 255
     de0:	7f 4f       	sbci	r23, 0xFF	; 255
     de2:	8f 4f       	sbci	r24, 0xFF	; 255
     de4:	9f 4f       	sbci	r25, 0xFF	; 255
     de6:	08 95       	ret

00000de8 <__fp_split3>:
     de8:	57 fd       	sbrc	r21, 7
     dea:	90 58       	subi	r25, 0x80	; 128
     dec:	44 0f       	add	r20, r20
     dee:	55 1f       	adc	r21, r21
     df0:	59 f0       	breq	.+22     	; 0xe08 <__fp_splitA+0x10>
     df2:	5f 3f       	cpi	r21, 0xFF	; 255
     df4:	71 f0       	breq	.+28     	; 0xe12 <__fp_splitA+0x1a>
     df6:	47 95       	ror	r20

00000df8 <__fp_splitA>:
     df8:	88 0f       	add	r24, r24
     dfa:	97 fb       	bst	r25, 7
     dfc:	99 1f       	adc	r25, r25
     dfe:	61 f0       	breq	.+24     	; 0xe18 <__fp_splitA+0x20>
     e00:	9f 3f       	cpi	r25, 0xFF	; 255
     e02:	79 f0       	breq	.+30     	; 0xe22 <__fp_splitA+0x2a>
     e04:	87 95       	ror	r24
     e06:	08 95       	ret
     e08:	12 16       	cp	r1, r18
     e0a:	13 06       	cpc	r1, r19
     e0c:	14 06       	cpc	r1, r20
     e0e:	55 1f       	adc	r21, r21
     e10:	f2 cf       	rjmp	.-28     	; 0xdf6 <__fp_split3+0xe>
     e12:	46 95       	lsr	r20
     e14:	f1 df       	rcall	.-30     	; 0xdf8 <__fp_splitA>
     e16:	08 c0       	rjmp	.+16     	; 0xe28 <__fp_splitA+0x30>
     e18:	16 16       	cp	r1, r22
     e1a:	17 06       	cpc	r1, r23
     e1c:	18 06       	cpc	r1, r24
     e1e:	99 1f       	adc	r25, r25
     e20:	f1 cf       	rjmp	.-30     	; 0xe04 <__fp_splitA+0xc>
     e22:	86 95       	lsr	r24
     e24:	71 05       	cpc	r23, r1
     e26:	61 05       	cpc	r22, r1
     e28:	08 94       	sec
     e2a:	08 95       	ret

00000e2c <__fp_zero>:
     e2c:	e8 94       	clt

00000e2e <__fp_szero>:
     e2e:	bb 27       	eor	r27, r27
     e30:	66 27       	eor	r22, r22
     e32:	77 27       	eor	r23, r23
     e34:	cb 01       	movw	r24, r22
     e36:	97 f9       	bld	r25, 7
     e38:	08 95       	ret

00000e3a <pow>:
     e3a:	fa 01       	movw	r30, r20
     e3c:	ee 0f       	add	r30, r30
     e3e:	ff 1f       	adc	r31, r31
     e40:	30 96       	adiw	r30, 0x00	; 0
     e42:	21 05       	cpc	r18, r1
     e44:	31 05       	cpc	r19, r1
     e46:	99 f1       	breq	.+102    	; 0xeae <pow+0x74>
     e48:	61 15       	cp	r22, r1
     e4a:	71 05       	cpc	r23, r1
     e4c:	61 f4       	brne	.+24     	; 0xe66 <pow+0x2c>
     e4e:	80 38       	cpi	r24, 0x80	; 128
     e50:	bf e3       	ldi	r27, 0x3F	; 63
     e52:	9b 07       	cpc	r25, r27
     e54:	49 f1       	breq	.+82     	; 0xea8 <pow+0x6e>
     e56:	68 94       	set
     e58:	90 38       	cpi	r25, 0x80	; 128
     e5a:	81 05       	cpc	r24, r1
     e5c:	61 f0       	breq	.+24     	; 0xe76 <pow+0x3c>
     e5e:	80 38       	cpi	r24, 0x80	; 128
     e60:	bf ef       	ldi	r27, 0xFF	; 255
     e62:	9b 07       	cpc	r25, r27
     e64:	41 f0       	breq	.+16     	; 0xe76 <pow+0x3c>
     e66:	99 23       	and	r25, r25
     e68:	42 f5       	brpl	.+80     	; 0xeba <pow+0x80>
     e6a:	ff 3f       	cpi	r31, 0xFF	; 255
     e6c:	e1 05       	cpc	r30, r1
     e6e:	31 05       	cpc	r19, r1
     e70:	21 05       	cpc	r18, r1
     e72:	11 f1       	breq	.+68     	; 0xeb8 <pow+0x7e>
     e74:	e8 94       	clt
     e76:	08 94       	sec
     e78:	e7 95       	ror	r30
     e7a:	d9 01       	movw	r26, r18
     e7c:	aa 23       	and	r26, r26
     e7e:	29 f4       	brne	.+10     	; 0xe8a <pow+0x50>
     e80:	ab 2f       	mov	r26, r27
     e82:	be 2f       	mov	r27, r30
     e84:	f8 5f       	subi	r31, 0xF8	; 248
     e86:	d0 f3       	brcs	.-12     	; 0xe7c <pow+0x42>
     e88:	10 c0       	rjmp	.+32     	; 0xeaa <pow+0x70>
     e8a:	ff 5f       	subi	r31, 0xFF	; 255
     e8c:	70 f4       	brcc	.+28     	; 0xeaa <pow+0x70>
     e8e:	a6 95       	lsr	r26
     e90:	e0 f7       	brcc	.-8      	; 0xe8a <pow+0x50>
     e92:	f7 39       	cpi	r31, 0x97	; 151
     e94:	50 f0       	brcs	.+20     	; 0xeaa <pow+0x70>
     e96:	19 f0       	breq	.+6      	; 0xe9e <pow+0x64>
     e98:	ff 3a       	cpi	r31, 0xAF	; 175
     e9a:	38 f4       	brcc	.+14     	; 0xeaa <pow+0x70>
     e9c:	9f 77       	andi	r25, 0x7F	; 127
     e9e:	9f 93       	push	r25
     ea0:	0c d0       	rcall	.+24     	; 0xeba <pow+0x80>
     ea2:	0f 90       	pop	r0
     ea4:	07 fc       	sbrc	r0, 7
     ea6:	90 58       	subi	r25, 0x80	; 128
     ea8:	08 95       	ret
     eaa:	3e f0       	brts	.+14     	; 0xeba <pow+0x80>
     eac:	7b cf       	rjmp	.-266    	; 0xda4 <__fp_nan>
     eae:	60 e0       	ldi	r22, 0x00	; 0
     eb0:	70 e0       	ldi	r23, 0x00	; 0
     eb2:	80 e8       	ldi	r24, 0x80	; 128
     eb4:	9f e3       	ldi	r25, 0x3F	; 63
     eb6:	08 95       	ret
     eb8:	4f e7       	ldi	r20, 0x7F	; 127
     eba:	9f 77       	andi	r25, 0x7F	; 127
     ebc:	5f 93       	push	r21
     ebe:	4f 93       	push	r20
     ec0:	3f 93       	push	r19
     ec2:	2f 93       	push	r18
     ec4:	9e d0       	rcall	.+316    	; 0x1002 <log>
     ec6:	2f 91       	pop	r18
     ec8:	3f 91       	pop	r19
     eca:	4f 91       	pop	r20
     ecc:	5f 91       	pop	r21
     ece:	0c d1       	rcall	.+536    	; 0x10e8 <__mulsf3>
     ed0:	05 c0       	rjmp	.+10     	; 0xedc <exp>
     ed2:	19 f4       	brne	.+6      	; 0xeda <pow+0xa0>
     ed4:	0e f0       	brts	.+2      	; 0xed8 <pow+0x9e>
     ed6:	60 cf       	rjmp	.-320    	; 0xd98 <__fp_inf>
     ed8:	a9 cf       	rjmp	.-174    	; 0xe2c <__fp_zero>
     eda:	64 cf       	rjmp	.-312    	; 0xda4 <__fp_nan>

00000edc <exp>:
     edc:	8d df       	rcall	.-230    	; 0xdf8 <__fp_splitA>
     ede:	c8 f3       	brcs	.-14     	; 0xed2 <pow+0x98>
     ee0:	96 38       	cpi	r25, 0x86	; 134
     ee2:	c0 f7       	brcc	.-16     	; 0xed4 <pow+0x9a>
     ee4:	07 f8       	bld	r0, 7
     ee6:	0f 92       	push	r0
     ee8:	e8 94       	clt
     eea:	2b e3       	ldi	r18, 0x3B	; 59
     eec:	3a ea       	ldi	r19, 0xAA	; 170
     eee:	48 eb       	ldi	r20, 0xB8	; 184
     ef0:	5f e7       	ldi	r21, 0x7F	; 127
     ef2:	08 d1       	rcall	.+528    	; 0x1104 <__mulsf3_pse>
     ef4:	0f 92       	push	r0
     ef6:	0f 92       	push	r0
     ef8:	0f 92       	push	r0
     efa:	4d b7       	in	r20, 0x3d	; 61
     efc:	5e b7       	in	r21, 0x3e	; 62
     efe:	0f 92       	push	r0
     f00:	c0 d0       	rcall	.+384    	; 0x1082 <modf>
     f02:	e4 ee       	ldi	r30, 0xE4	; 228
     f04:	f0 e0       	ldi	r31, 0x00	; 0
     f06:	16 d0       	rcall	.+44     	; 0xf34 <__fp_powser>
     f08:	4f 91       	pop	r20
     f0a:	5f 91       	pop	r21
     f0c:	ef 91       	pop	r30
     f0e:	ff 91       	pop	r31
     f10:	e5 95       	asr	r30
     f12:	ee 1f       	adc	r30, r30
     f14:	ff 1f       	adc	r31, r31
     f16:	49 f0       	breq	.+18     	; 0xf2a <exp+0x4e>
     f18:	fe 57       	subi	r31, 0x7E	; 126
     f1a:	e0 68       	ori	r30, 0x80	; 128
     f1c:	44 27       	eor	r20, r20
     f1e:	ee 0f       	add	r30, r30
     f20:	44 1f       	adc	r20, r20
     f22:	fa 95       	dec	r31
     f24:	e1 f7       	brne	.-8      	; 0xf1e <exp+0x42>
     f26:	41 95       	neg	r20
     f28:	55 0b       	sbc	r21, r21
     f2a:	32 d0       	rcall	.+100    	; 0xf90 <ldexp>
     f2c:	0f 90       	pop	r0
     f2e:	07 fe       	sbrs	r0, 7
     f30:	26 c0       	rjmp	.+76     	; 0xf7e <inverse>
     f32:	08 95       	ret

00000f34 <__fp_powser>:
     f34:	df 93       	push	r29
     f36:	cf 93       	push	r28
     f38:	1f 93       	push	r17
     f3a:	0f 93       	push	r16
     f3c:	ff 92       	push	r15
     f3e:	ef 92       	push	r14
     f40:	df 92       	push	r13
     f42:	7b 01       	movw	r14, r22
     f44:	8c 01       	movw	r16, r24
     f46:	68 94       	set
     f48:	05 c0       	rjmp	.+10     	; 0xf54 <__fp_powser+0x20>
     f4a:	da 2e       	mov	r13, r26
     f4c:	ef 01       	movw	r28, r30
     f4e:	d8 d0       	rcall	.+432    	; 0x1100 <__mulsf3x>
     f50:	fe 01       	movw	r30, r28
     f52:	e8 94       	clt
     f54:	a5 91       	lpm	r26, Z+
     f56:	25 91       	lpm	r18, Z+
     f58:	35 91       	lpm	r19, Z+
     f5a:	45 91       	lpm	r20, Z+
     f5c:	55 91       	lpm	r21, Z+
     f5e:	ae f3       	brts	.-22     	; 0xf4a <__fp_powser+0x16>
     f60:	ef 01       	movw	r28, r30
     f62:	59 de       	rcall	.-846    	; 0xc16 <__addsf3x>
     f64:	fe 01       	movw	r30, r28
     f66:	97 01       	movw	r18, r14
     f68:	a8 01       	movw	r20, r16
     f6a:	da 94       	dec	r13
     f6c:	79 f7       	brne	.-34     	; 0xf4c <__fp_powser+0x18>
     f6e:	df 90       	pop	r13
     f70:	ef 90       	pop	r14
     f72:	ff 90       	pop	r15
     f74:	0f 91       	pop	r16
     f76:	1f 91       	pop	r17
     f78:	cf 91       	pop	r28
     f7a:	df 91       	pop	r29
     f7c:	08 95       	ret

00000f7e <inverse>:
     f7e:	9b 01       	movw	r18, r22
     f80:	ac 01       	movw	r20, r24
     f82:	60 e0       	ldi	r22, 0x00	; 0
     f84:	70 e0       	ldi	r23, 0x00	; 0
     f86:	80 e8       	ldi	r24, 0x80	; 128
     f88:	9f e3       	ldi	r25, 0x3F	; 63
     f8a:	11 c1       	rjmp	.+546    	; 0x11ae <__divsf3>
     f8c:	05 cf       	rjmp	.-502    	; 0xd98 <__fp_inf>
     f8e:	77 c1       	rjmp	.+750    	; 0x127e <__fp_mpack>

00000f90 <ldexp>:
     f90:	33 df       	rcall	.-410    	; 0xdf8 <__fp_splitA>
     f92:	e8 f3       	brcs	.-6      	; 0xf8e <inverse+0x10>
     f94:	99 23       	and	r25, r25
     f96:	d9 f3       	breq	.-10     	; 0xf8e <inverse+0x10>
     f98:	94 0f       	add	r25, r20
     f9a:	51 1d       	adc	r21, r1
     f9c:	bb f3       	brvs	.-18     	; 0xf8c <inverse+0xe>
     f9e:	91 50       	subi	r25, 0x01	; 1
     fa0:	50 40       	sbci	r21, 0x00	; 0
     fa2:	94 f0       	brlt	.+36     	; 0xfc8 <ldexp+0x38>
     fa4:	59 f0       	breq	.+22     	; 0xfbc <ldexp+0x2c>
     fa6:	88 23       	and	r24, r24
     fa8:	32 f0       	brmi	.+12     	; 0xfb6 <ldexp+0x26>
     faa:	66 0f       	add	r22, r22
     fac:	77 1f       	adc	r23, r23
     fae:	88 1f       	adc	r24, r24
     fb0:	91 50       	subi	r25, 0x01	; 1
     fb2:	50 40       	sbci	r21, 0x00	; 0
     fb4:	c1 f7       	brne	.-16     	; 0xfa6 <ldexp+0x16>
     fb6:	9e 3f       	cpi	r25, 0xFE	; 254
     fb8:	51 05       	cpc	r21, r1
     fba:	44 f7       	brge	.-48     	; 0xf8c <inverse+0xe>
     fbc:	88 0f       	add	r24, r24
     fbe:	91 1d       	adc	r25, r1
     fc0:	96 95       	lsr	r25
     fc2:	87 95       	ror	r24
     fc4:	97 f9       	bld	r25, 7
     fc6:	08 95       	ret
     fc8:	5f 3f       	cpi	r21, 0xFF	; 255
     fca:	ac f0       	brlt	.+42     	; 0xff6 <ldexp+0x66>
     fcc:	98 3e       	cpi	r25, 0xE8	; 232
     fce:	9c f0       	brlt	.+38     	; 0xff6 <ldexp+0x66>
     fd0:	bb 27       	eor	r27, r27
     fd2:	86 95       	lsr	r24
     fd4:	77 95       	ror	r23
     fd6:	67 95       	ror	r22
     fd8:	b7 95       	ror	r27
     fda:	08 f4       	brcc	.+2      	; 0xfde <ldexp+0x4e>
     fdc:	b1 60       	ori	r27, 0x01	; 1
     fde:	93 95       	inc	r25
     fe0:	c1 f7       	brne	.-16     	; 0xfd2 <ldexp+0x42>
     fe2:	bb 0f       	add	r27, r27
     fe4:	58 f7       	brcc	.-42     	; 0xfbc <ldexp+0x2c>
     fe6:	11 f4       	brne	.+4      	; 0xfec <ldexp+0x5c>
     fe8:	60 ff       	sbrs	r22, 0
     fea:	e8 cf       	rjmp	.-48     	; 0xfbc <ldexp+0x2c>
     fec:	6f 5f       	subi	r22, 0xFF	; 255
     fee:	7f 4f       	sbci	r23, 0xFF	; 255
     ff0:	8f 4f       	sbci	r24, 0xFF	; 255
     ff2:	9f 4f       	sbci	r25, 0xFF	; 255
     ff4:	e3 cf       	rjmp	.-58     	; 0xfbc <ldexp+0x2c>
     ff6:	1b cf       	rjmp	.-458    	; 0xe2e <__fp_szero>
     ff8:	0e f0       	brts	.+2      	; 0xffc <ldexp+0x6c>
     ffa:	41 c1       	rjmp	.+642    	; 0x127e <__fp_mpack>
     ffc:	d3 ce       	rjmp	.-602    	; 0xda4 <__fp_nan>
     ffe:	68 94       	set
    1000:	cb ce       	rjmp	.-618    	; 0xd98 <__fp_inf>

00001002 <log>:
    1002:	fa de       	rcall	.-524    	; 0xdf8 <__fp_splitA>
    1004:	c8 f3       	brcs	.-14     	; 0xff8 <ldexp+0x68>
    1006:	99 23       	and	r25, r25
    1008:	d1 f3       	breq	.-12     	; 0xffe <ldexp+0x6e>
    100a:	c6 f3       	brts	.-16     	; 0xffc <ldexp+0x6c>
    100c:	df 93       	push	r29
    100e:	cf 93       	push	r28
    1010:	1f 93       	push	r17
    1012:	0f 93       	push	r16
    1014:	ff 92       	push	r15
    1016:	c9 2f       	mov	r28, r25
    1018:	dd 27       	eor	r29, r29
    101a:	88 23       	and	r24, r24
    101c:	2a f0       	brmi	.+10     	; 0x1028 <log+0x26>
    101e:	21 97       	sbiw	r28, 0x01	; 1
    1020:	66 0f       	add	r22, r22
    1022:	77 1f       	adc	r23, r23
    1024:	88 1f       	adc	r24, r24
    1026:	da f7       	brpl	.-10     	; 0x101e <log+0x1c>
    1028:	20 e0       	ldi	r18, 0x00	; 0
    102a:	30 e0       	ldi	r19, 0x00	; 0
    102c:	40 e8       	ldi	r20, 0x80	; 128
    102e:	5f eb       	ldi	r21, 0xBF	; 191
    1030:	9f e3       	ldi	r25, 0x3F	; 63
    1032:	88 39       	cpi	r24, 0x98	; 152
    1034:	20 f0       	brcs	.+8      	; 0x103e <log+0x3c>
    1036:	80 3e       	cpi	r24, 0xE0	; 224
    1038:	30 f0       	brcs	.+12     	; 0x1046 <log+0x44>
    103a:	21 96       	adiw	r28, 0x01	; 1
    103c:	8f 77       	andi	r24, 0x7F	; 127
    103e:	da dd       	rcall	.-1100   	; 0xbf4 <__addsf3>
    1040:	ec e0       	ldi	r30, 0x0C	; 12
    1042:	f1 e0       	ldi	r31, 0x01	; 1
    1044:	03 c0       	rjmp	.+6      	; 0x104c <log+0x4a>
    1046:	d6 dd       	rcall	.-1108   	; 0xbf4 <__addsf3>
    1048:	e9 e3       	ldi	r30, 0x39	; 57
    104a:	f1 e0       	ldi	r31, 0x01	; 1
    104c:	73 df       	rcall	.-282    	; 0xf34 <__fp_powser>
    104e:	8b 01       	movw	r16, r22
    1050:	be 01       	movw	r22, r28
    1052:	ec 01       	movw	r28, r24
    1054:	fb 2e       	mov	r15, r27
    1056:	6f 57       	subi	r22, 0x7F	; 127
    1058:	71 09       	sbc	r23, r1
    105a:	75 95       	asr	r23
    105c:	77 1f       	adc	r23, r23
    105e:	88 0b       	sbc	r24, r24
    1060:	99 0b       	sbc	r25, r25
    1062:	5f de       	rcall	.-834    	; 0xd22 <__floatsisf>
    1064:	28 e1       	ldi	r18, 0x18	; 24
    1066:	32 e7       	ldi	r19, 0x72	; 114
    1068:	41 e3       	ldi	r20, 0x31	; 49
    106a:	5f e3       	ldi	r21, 0x3F	; 63
    106c:	49 d0       	rcall	.+146    	; 0x1100 <__mulsf3x>
    106e:	af 2d       	mov	r26, r15
    1070:	98 01       	movw	r18, r16
    1072:	ae 01       	movw	r20, r28
    1074:	ff 90       	pop	r15
    1076:	0f 91       	pop	r16
    1078:	1f 91       	pop	r17
    107a:	cf 91       	pop	r28
    107c:	df 91       	pop	r29
    107e:	cb dd       	rcall	.-1130   	; 0xc16 <__addsf3x>
    1080:	a2 ce       	rjmp	.-700    	; 0xdc6 <__fp_round>

00001082 <modf>:
    1082:	fa 01       	movw	r30, r20
    1084:	dc 01       	movw	r26, r24
    1086:	aa 0f       	add	r26, r26
    1088:	bb 1f       	adc	r27, r27
    108a:	9b 01       	movw	r18, r22
    108c:	ac 01       	movw	r20, r24
    108e:	bf 57       	subi	r27, 0x7F	; 127
    1090:	28 f4       	brcc	.+10     	; 0x109c <modf+0x1a>
    1092:	22 27       	eor	r18, r18
    1094:	33 27       	eor	r19, r19
    1096:	44 27       	eor	r20, r20
    1098:	50 78       	andi	r21, 0x80	; 128
    109a:	1f c0       	rjmp	.+62     	; 0x10da <modf+0x58>
    109c:	b7 51       	subi	r27, 0x17	; 23
    109e:	88 f4       	brcc	.+34     	; 0x10c2 <modf+0x40>
    10a0:	ab 2f       	mov	r26, r27
    10a2:	00 24       	eor	r0, r0
    10a4:	46 95       	lsr	r20
    10a6:	37 95       	ror	r19
    10a8:	27 95       	ror	r18
    10aa:	01 1c       	adc	r0, r1
    10ac:	a3 95       	inc	r26
    10ae:	d2 f3       	brmi	.-12     	; 0x10a4 <modf+0x22>
    10b0:	00 20       	and	r0, r0
    10b2:	69 f0       	breq	.+26     	; 0x10ce <modf+0x4c>
    10b4:	22 0f       	add	r18, r18
    10b6:	33 1f       	adc	r19, r19
    10b8:	44 1f       	adc	r20, r20
    10ba:	b3 95       	inc	r27
    10bc:	da f3       	brmi	.-10     	; 0x10b4 <modf+0x32>
    10be:	0d d0       	rcall	.+26     	; 0x10da <modf+0x58>
    10c0:	98 cd       	rjmp	.-1232   	; 0xbf2 <__subsf3>
    10c2:	61 30       	cpi	r22, 0x01	; 1
    10c4:	71 05       	cpc	r23, r1
    10c6:	a0 e8       	ldi	r26, 0x80	; 128
    10c8:	8a 07       	cpc	r24, r26
    10ca:	b9 46       	sbci	r27, 0x69	; 105
    10cc:	30 f4       	brcc	.+12     	; 0x10da <modf+0x58>
    10ce:	9b 01       	movw	r18, r22
    10d0:	ac 01       	movw	r20, r24
    10d2:	66 27       	eor	r22, r22
    10d4:	77 27       	eor	r23, r23
    10d6:	88 27       	eor	r24, r24
    10d8:	90 78       	andi	r25, 0x80	; 128
    10da:	30 96       	adiw	r30, 0x00	; 0
    10dc:	21 f0       	breq	.+8      	; 0x10e6 <modf+0x64>
    10de:	20 83       	st	Z, r18
    10e0:	31 83       	std	Z+1, r19	; 0x01
    10e2:	42 83       	std	Z+2, r20	; 0x02
    10e4:	53 83       	std	Z+3, r21	; 0x03
    10e6:	08 95       	ret

000010e8 <__mulsf3>:
    10e8:	0b d0       	rcall	.+22     	; 0x1100 <__mulsf3x>
    10ea:	6d ce       	rjmp	.-806    	; 0xdc6 <__fp_round>
    10ec:	5e de       	rcall	.-836    	; 0xdaa <__fp_pscA>
    10ee:	28 f0       	brcs	.+10     	; 0x10fa <__mulsf3+0x12>
    10f0:	63 de       	rcall	.-826    	; 0xdb8 <__fp_pscB>
    10f2:	18 f0       	brcs	.+6      	; 0x10fa <__mulsf3+0x12>
    10f4:	95 23       	and	r25, r21
    10f6:	09 f0       	breq	.+2      	; 0x10fa <__mulsf3+0x12>
    10f8:	4f ce       	rjmp	.-866    	; 0xd98 <__fp_inf>
    10fa:	54 ce       	rjmp	.-856    	; 0xda4 <__fp_nan>
    10fc:	11 24       	eor	r1, r1
    10fe:	97 ce       	rjmp	.-722    	; 0xe2e <__fp_szero>

00001100 <__mulsf3x>:
    1100:	73 de       	rcall	.-794    	; 0xde8 <__fp_split3>
    1102:	a0 f3       	brcs	.-24     	; 0x10ec <__mulsf3+0x4>

00001104 <__mulsf3_pse>:
    1104:	95 9f       	mul	r25, r21
    1106:	d1 f3       	breq	.-12     	; 0x10fc <__mulsf3+0x14>
    1108:	95 0f       	add	r25, r21
    110a:	50 e0       	ldi	r21, 0x00	; 0
    110c:	55 1f       	adc	r21, r21
    110e:	62 9f       	mul	r22, r18
    1110:	f0 01       	movw	r30, r0
    1112:	72 9f       	mul	r23, r18
    1114:	bb 27       	eor	r27, r27
    1116:	f0 0d       	add	r31, r0
    1118:	b1 1d       	adc	r27, r1
    111a:	63 9f       	mul	r22, r19
    111c:	aa 27       	eor	r26, r26
    111e:	f0 0d       	add	r31, r0
    1120:	b1 1d       	adc	r27, r1
    1122:	aa 1f       	adc	r26, r26
    1124:	64 9f       	mul	r22, r20
    1126:	66 27       	eor	r22, r22
    1128:	b0 0d       	add	r27, r0
    112a:	a1 1d       	adc	r26, r1
    112c:	66 1f       	adc	r22, r22
    112e:	82 9f       	mul	r24, r18
    1130:	22 27       	eor	r18, r18
    1132:	b0 0d       	add	r27, r0
    1134:	a1 1d       	adc	r26, r1
    1136:	62 1f       	adc	r22, r18
    1138:	73 9f       	mul	r23, r19
    113a:	b0 0d       	add	r27, r0
    113c:	a1 1d       	adc	r26, r1
    113e:	62 1f       	adc	r22, r18
    1140:	83 9f       	mul	r24, r19
    1142:	a0 0d       	add	r26, r0
    1144:	61 1d       	adc	r22, r1
    1146:	22 1f       	adc	r18, r18
    1148:	74 9f       	mul	r23, r20
    114a:	33 27       	eor	r19, r19
    114c:	a0 0d       	add	r26, r0
    114e:	61 1d       	adc	r22, r1
    1150:	23 1f       	adc	r18, r19
    1152:	84 9f       	mul	r24, r20
    1154:	60 0d       	add	r22, r0
    1156:	21 1d       	adc	r18, r1
    1158:	82 2f       	mov	r24, r18
    115a:	76 2f       	mov	r23, r22
    115c:	6a 2f       	mov	r22, r26
    115e:	11 24       	eor	r1, r1
    1160:	9f 57       	subi	r25, 0x7F	; 127
    1162:	50 40       	sbci	r21, 0x00	; 0
    1164:	8a f0       	brmi	.+34     	; 0x1188 <__mulsf3_pse+0x84>
    1166:	e1 f0       	breq	.+56     	; 0x11a0 <__mulsf3_pse+0x9c>
    1168:	88 23       	and	r24, r24
    116a:	4a f0       	brmi	.+18     	; 0x117e <__mulsf3_pse+0x7a>
    116c:	ee 0f       	add	r30, r30
    116e:	ff 1f       	adc	r31, r31
    1170:	bb 1f       	adc	r27, r27
    1172:	66 1f       	adc	r22, r22
    1174:	77 1f       	adc	r23, r23
    1176:	88 1f       	adc	r24, r24
    1178:	91 50       	subi	r25, 0x01	; 1
    117a:	50 40       	sbci	r21, 0x00	; 0
    117c:	a9 f7       	brne	.-22     	; 0x1168 <__mulsf3_pse+0x64>
    117e:	9e 3f       	cpi	r25, 0xFE	; 254
    1180:	51 05       	cpc	r21, r1
    1182:	70 f0       	brcs	.+28     	; 0x11a0 <__mulsf3_pse+0x9c>
    1184:	09 ce       	rjmp	.-1006   	; 0xd98 <__fp_inf>
    1186:	53 ce       	rjmp	.-858    	; 0xe2e <__fp_szero>
    1188:	5f 3f       	cpi	r21, 0xFF	; 255
    118a:	ec f3       	brlt	.-6      	; 0x1186 <__mulsf3_pse+0x82>
    118c:	98 3e       	cpi	r25, 0xE8	; 232
    118e:	dc f3       	brlt	.-10     	; 0x1186 <__mulsf3_pse+0x82>
    1190:	86 95       	lsr	r24
    1192:	77 95       	ror	r23
    1194:	67 95       	ror	r22
    1196:	b7 95       	ror	r27
    1198:	f7 95       	ror	r31
    119a:	e7 95       	ror	r30
    119c:	9f 5f       	subi	r25, 0xFF	; 255
    119e:	c1 f7       	brne	.-16     	; 0x1190 <__mulsf3_pse+0x8c>
    11a0:	fe 2b       	or	r31, r30
    11a2:	88 0f       	add	r24, r24
    11a4:	91 1d       	adc	r25, r1
    11a6:	96 95       	lsr	r25
    11a8:	87 95       	ror	r24
    11aa:	97 f9       	bld	r25, 7
    11ac:	08 95       	ret

000011ae <__divsf3>:
    11ae:	0c d0       	rcall	.+24     	; 0x11c8 <__divsf3x>
    11b0:	0a ce       	rjmp	.-1004   	; 0xdc6 <__fp_round>
    11b2:	02 de       	rcall	.-1020   	; 0xdb8 <__fp_pscB>
    11b4:	40 f0       	brcs	.+16     	; 0x11c6 <__divsf3+0x18>
    11b6:	f9 dd       	rcall	.-1038   	; 0xdaa <__fp_pscA>
    11b8:	30 f0       	brcs	.+12     	; 0x11c6 <__divsf3+0x18>
    11ba:	21 f4       	brne	.+8      	; 0x11c4 <__divsf3+0x16>
    11bc:	5f 3f       	cpi	r21, 0xFF	; 255
    11be:	19 f0       	breq	.+6      	; 0x11c6 <__divsf3+0x18>
    11c0:	eb cd       	rjmp	.-1066   	; 0xd98 <__fp_inf>
    11c2:	51 11       	cpse	r21, r1
    11c4:	34 ce       	rjmp	.-920    	; 0xe2e <__fp_szero>
    11c6:	ee cd       	rjmp	.-1060   	; 0xda4 <__fp_nan>

000011c8 <__divsf3x>:
    11c8:	0f de       	rcall	.-994    	; 0xde8 <__fp_split3>
    11ca:	98 f3       	brcs	.-26     	; 0x11b2 <__divsf3+0x4>

000011cc <__divsf3_pse>:
    11cc:	99 23       	and	r25, r25
    11ce:	c9 f3       	breq	.-14     	; 0x11c2 <__divsf3+0x14>
    11d0:	55 23       	and	r21, r21
    11d2:	b1 f3       	breq	.-20     	; 0x11c0 <__divsf3+0x12>
    11d4:	95 1b       	sub	r25, r21
    11d6:	55 0b       	sbc	r21, r21
    11d8:	bb 27       	eor	r27, r27
    11da:	aa 27       	eor	r26, r26
    11dc:	62 17       	cp	r22, r18
    11de:	73 07       	cpc	r23, r19
    11e0:	84 07       	cpc	r24, r20
    11e2:	38 f0       	brcs	.+14     	; 0x11f2 <__divsf3_pse+0x26>
    11e4:	9f 5f       	subi	r25, 0xFF	; 255
    11e6:	5f 4f       	sbci	r21, 0xFF	; 255
    11e8:	22 0f       	add	r18, r18
    11ea:	33 1f       	adc	r19, r19
    11ec:	44 1f       	adc	r20, r20
    11ee:	aa 1f       	adc	r26, r26
    11f0:	a9 f3       	breq	.-22     	; 0x11dc <__divsf3_pse+0x10>
    11f2:	33 d0       	rcall	.+102    	; 0x125a <__divsf3_pse+0x8e>
    11f4:	0e 2e       	mov	r0, r30
    11f6:	3a f0       	brmi	.+14     	; 0x1206 <__divsf3_pse+0x3a>
    11f8:	e0 e8       	ldi	r30, 0x80	; 128
    11fa:	30 d0       	rcall	.+96     	; 0x125c <__divsf3_pse+0x90>
    11fc:	91 50       	subi	r25, 0x01	; 1
    11fe:	50 40       	sbci	r21, 0x00	; 0
    1200:	e6 95       	lsr	r30
    1202:	00 1c       	adc	r0, r0
    1204:	ca f7       	brpl	.-14     	; 0x11f8 <__divsf3_pse+0x2c>
    1206:	29 d0       	rcall	.+82     	; 0x125a <__divsf3_pse+0x8e>
    1208:	fe 2f       	mov	r31, r30
    120a:	27 d0       	rcall	.+78     	; 0x125a <__divsf3_pse+0x8e>
    120c:	66 0f       	add	r22, r22
    120e:	77 1f       	adc	r23, r23
    1210:	88 1f       	adc	r24, r24
    1212:	bb 1f       	adc	r27, r27
    1214:	26 17       	cp	r18, r22
    1216:	37 07       	cpc	r19, r23
    1218:	48 07       	cpc	r20, r24
    121a:	ab 07       	cpc	r26, r27
    121c:	b0 e8       	ldi	r27, 0x80	; 128
    121e:	09 f0       	breq	.+2      	; 0x1222 <__divsf3_pse+0x56>
    1220:	bb 0b       	sbc	r27, r27
    1222:	80 2d       	mov	r24, r0
    1224:	bf 01       	movw	r22, r30
    1226:	ff 27       	eor	r31, r31
    1228:	93 58       	subi	r25, 0x83	; 131
    122a:	5f 4f       	sbci	r21, 0xFF	; 255
    122c:	2a f0       	brmi	.+10     	; 0x1238 <__divsf3_pse+0x6c>
    122e:	9e 3f       	cpi	r25, 0xFE	; 254
    1230:	51 05       	cpc	r21, r1
    1232:	68 f0       	brcs	.+26     	; 0x124e <__divsf3_pse+0x82>
    1234:	b1 cd       	rjmp	.-1182   	; 0xd98 <__fp_inf>
    1236:	fb cd       	rjmp	.-1034   	; 0xe2e <__fp_szero>
    1238:	5f 3f       	cpi	r21, 0xFF	; 255
    123a:	ec f3       	brlt	.-6      	; 0x1236 <__divsf3_pse+0x6a>
    123c:	98 3e       	cpi	r25, 0xE8	; 232
    123e:	dc f3       	brlt	.-10     	; 0x1236 <__divsf3_pse+0x6a>
    1240:	86 95       	lsr	r24
    1242:	77 95       	ror	r23
    1244:	67 95       	ror	r22
    1246:	b7 95       	ror	r27
    1248:	f7 95       	ror	r31
    124a:	9f 5f       	subi	r25, 0xFF	; 255
    124c:	c9 f7       	brne	.-14     	; 0x1240 <__divsf3_pse+0x74>
    124e:	88 0f       	add	r24, r24
    1250:	91 1d       	adc	r25, r1
    1252:	96 95       	lsr	r25
    1254:	87 95       	ror	r24
    1256:	97 f9       	bld	r25, 7
    1258:	08 95       	ret
    125a:	e1 e0       	ldi	r30, 0x01	; 1
    125c:	66 0f       	add	r22, r22
    125e:	77 1f       	adc	r23, r23
    1260:	88 1f       	adc	r24, r24
    1262:	bb 1f       	adc	r27, r27
    1264:	62 17       	cp	r22, r18
    1266:	73 07       	cpc	r23, r19
    1268:	84 07       	cpc	r24, r20
    126a:	ba 07       	cpc	r27, r26
    126c:	20 f0       	brcs	.+8      	; 0x1276 <__divsf3_pse+0xaa>
    126e:	62 1b       	sub	r22, r18
    1270:	73 0b       	sbc	r23, r19
    1272:	84 0b       	sbc	r24, r20
    1274:	ba 0b       	sbc	r27, r26
    1276:	ee 1f       	adc	r30, r30
    1278:	88 f7       	brcc	.-30     	; 0x125c <__divsf3_pse+0x90>
    127a:	e0 95       	com	r30
    127c:	08 95       	ret

0000127e <__fp_mpack>:
    127e:	9f 3f       	cpi	r25, 0xFF	; 255
    1280:	31 f0       	breq	.+12     	; 0x128e <__fp_mpack_finite+0xc>

00001282 <__fp_mpack_finite>:
    1282:	91 50       	subi	r25, 0x01	; 1
    1284:	20 f4       	brcc	.+8      	; 0x128e <__fp_mpack_finite+0xc>
    1286:	87 95       	ror	r24
    1288:	77 95       	ror	r23
    128a:	67 95       	ror	r22
    128c:	b7 95       	ror	r27
    128e:	88 0f       	add	r24, r24
    1290:	91 1d       	adc	r25, r1
    1292:	96 95       	lsr	r25
    1294:	87 95       	ror	r24
    1296:	97 f9       	bld	r25, 7
    1298:	08 95       	ret

0000129a <__divmodhi4>:
    129a:	97 fb       	bst	r25, 7
    129c:	07 2e       	mov	r0, r23
    129e:	16 f4       	brtc	.+4      	; 0x12a4 <__divmodhi4+0xa>
    12a0:	00 94       	com	r0
    12a2:	06 d0       	rcall	.+12     	; 0x12b0 <__divmodhi4_neg1>
    12a4:	77 fd       	sbrc	r23, 7
    12a6:	08 d0       	rcall	.+16     	; 0x12b8 <__divmodhi4_neg2>
    12a8:	7d d0       	rcall	.+250    	; 0x13a4 <__udivmodhi4>
    12aa:	07 fc       	sbrc	r0, 7
    12ac:	05 d0       	rcall	.+10     	; 0x12b8 <__divmodhi4_neg2>
    12ae:	3e f4       	brtc	.+14     	; 0x12be <__divmodhi4_exit>

000012b0 <__divmodhi4_neg1>:
    12b0:	90 95       	com	r25
    12b2:	81 95       	neg	r24
    12b4:	9f 4f       	sbci	r25, 0xFF	; 255
    12b6:	08 95       	ret

000012b8 <__divmodhi4_neg2>:
    12b8:	70 95       	com	r23
    12ba:	61 95       	neg	r22
    12bc:	7f 4f       	sbci	r23, 0xFF	; 255

000012be <__divmodhi4_exit>:
    12be:	08 95       	ret

000012c0 <__udivmodsi4>:
    12c0:	a1 e2       	ldi	r26, 0x21	; 33
    12c2:	1a 2e       	mov	r1, r26
    12c4:	aa 1b       	sub	r26, r26
    12c6:	bb 1b       	sub	r27, r27
    12c8:	fd 01       	movw	r30, r26
    12ca:	0d c0       	rjmp	.+26     	; 0x12e6 <__udivmodsi4_ep>

000012cc <__udivmodsi4_loop>:
    12cc:	aa 1f       	adc	r26, r26
    12ce:	bb 1f       	adc	r27, r27
    12d0:	ee 1f       	adc	r30, r30
    12d2:	ff 1f       	adc	r31, r31
    12d4:	a2 17       	cp	r26, r18
    12d6:	b3 07       	cpc	r27, r19
    12d8:	e4 07       	cpc	r30, r20
    12da:	f5 07       	cpc	r31, r21
    12dc:	20 f0       	brcs	.+8      	; 0x12e6 <__udivmodsi4_ep>
    12de:	a2 1b       	sub	r26, r18
    12e0:	b3 0b       	sbc	r27, r19
    12e2:	e4 0b       	sbc	r30, r20
    12e4:	f5 0b       	sbc	r31, r21

000012e6 <__udivmodsi4_ep>:
    12e6:	66 1f       	adc	r22, r22
    12e8:	77 1f       	adc	r23, r23
    12ea:	88 1f       	adc	r24, r24
    12ec:	99 1f       	adc	r25, r25
    12ee:	1a 94       	dec	r1
    12f0:	69 f7       	brne	.-38     	; 0x12cc <__udivmodsi4_loop>
    12f2:	60 95       	com	r22
    12f4:	70 95       	com	r23
    12f6:	80 95       	com	r24
    12f8:	90 95       	com	r25
    12fa:	9b 01       	movw	r18, r22
    12fc:	ac 01       	movw	r20, r24
    12fe:	bd 01       	movw	r22, r26
    1300:	cf 01       	movw	r24, r30
    1302:	08 95       	ret

00001304 <__umulhisi3>:
    1304:	a2 9f       	mul	r26, r18
    1306:	b0 01       	movw	r22, r0
    1308:	b3 9f       	mul	r27, r19
    130a:	c0 01       	movw	r24, r0
    130c:	a3 9f       	mul	r26, r19
    130e:	70 0d       	add	r23, r0
    1310:	81 1d       	adc	r24, r1
    1312:	11 24       	eor	r1, r1
    1314:	91 1d       	adc	r25, r1
    1316:	b2 9f       	mul	r27, r18
    1318:	70 0d       	add	r23, r0
    131a:	81 1d       	adc	r24, r1
    131c:	11 24       	eor	r1, r1
    131e:	91 1d       	adc	r25, r1
    1320:	08 95       	ret

00001322 <__muluhisi3>:
    1322:	f0 df       	rcall	.-32     	; 0x1304 <__umulhisi3>
    1324:	a5 9f       	mul	r26, r21
    1326:	90 0d       	add	r25, r0
    1328:	b4 9f       	mul	r27, r20
    132a:	90 0d       	add	r25, r0
    132c:	a4 9f       	mul	r26, r20
    132e:	80 0d       	add	r24, r0
    1330:	91 1d       	adc	r25, r1
    1332:	11 24       	eor	r1, r1
    1334:	08 95       	ret

00001336 <__ashldi3>:
    1336:	0f 93       	push	r16
    1338:	08 30       	cpi	r16, 0x08	; 8
    133a:	90 f0       	brcs	.+36     	; 0x1360 <__ashldi3+0x2a>
    133c:	98 2f       	mov	r25, r24
    133e:	87 2f       	mov	r24, r23
    1340:	76 2f       	mov	r23, r22
    1342:	65 2f       	mov	r22, r21
    1344:	54 2f       	mov	r21, r20
    1346:	43 2f       	mov	r20, r19
    1348:	32 2f       	mov	r19, r18
    134a:	22 27       	eor	r18, r18
    134c:	08 50       	subi	r16, 0x08	; 8
    134e:	f4 cf       	rjmp	.-24     	; 0x1338 <__ashldi3+0x2>
    1350:	22 0f       	add	r18, r18
    1352:	33 1f       	adc	r19, r19
    1354:	44 1f       	adc	r20, r20
    1356:	55 1f       	adc	r21, r21
    1358:	66 1f       	adc	r22, r22
    135a:	77 1f       	adc	r23, r23
    135c:	88 1f       	adc	r24, r24
    135e:	99 1f       	adc	r25, r25
    1360:	0a 95       	dec	r16
    1362:	b2 f7       	brpl	.-20     	; 0x1350 <__ashldi3+0x1a>
    1364:	0f 91       	pop	r16
    1366:	08 95       	ret

00001368 <__adddi3>:
    1368:	2a 0d       	add	r18, r10
    136a:	3b 1d       	adc	r19, r11
    136c:	4c 1d       	adc	r20, r12
    136e:	5d 1d       	adc	r21, r13
    1370:	6e 1d       	adc	r22, r14
    1372:	7f 1d       	adc	r23, r15
    1374:	80 1f       	adc	r24, r16
    1376:	91 1f       	adc	r25, r17
    1378:	08 95       	ret

0000137a <__adddi3_s8>:
    137a:	00 24       	eor	r0, r0
    137c:	a7 fd       	sbrc	r26, 7
    137e:	00 94       	com	r0
    1380:	2a 0f       	add	r18, r26
    1382:	30 1d       	adc	r19, r0
    1384:	40 1d       	adc	r20, r0
    1386:	50 1d       	adc	r21, r0
    1388:	60 1d       	adc	r22, r0
    138a:	70 1d       	adc	r23, r0
    138c:	80 1d       	adc	r24, r0
    138e:	90 1d       	adc	r25, r0
    1390:	08 95       	ret

00001392 <__cmpdi2>:
    1392:	2a 15       	cp	r18, r10
    1394:	3b 05       	cpc	r19, r11
    1396:	4c 05       	cpc	r20, r12
    1398:	5d 05       	cpc	r21, r13
    139a:	6e 05       	cpc	r22, r14
    139c:	7f 05       	cpc	r23, r15
    139e:	80 07       	cpc	r24, r16
    13a0:	91 07       	cpc	r25, r17
    13a2:	08 95       	ret

000013a4 <__udivmodhi4>:
    13a4:	aa 1b       	sub	r26, r26
    13a6:	bb 1b       	sub	r27, r27
    13a8:	51 e1       	ldi	r21, 0x11	; 17
    13aa:	07 c0       	rjmp	.+14     	; 0x13ba <__udivmodhi4_ep>

000013ac <__udivmodhi4_loop>:
    13ac:	aa 1f       	adc	r26, r26
    13ae:	bb 1f       	adc	r27, r27
    13b0:	a6 17       	cp	r26, r22
    13b2:	b7 07       	cpc	r27, r23
    13b4:	10 f0       	brcs	.+4      	; 0x13ba <__udivmodhi4_ep>
    13b6:	a6 1b       	sub	r26, r22
    13b8:	b7 0b       	sbc	r27, r23

000013ba <__udivmodhi4_ep>:
    13ba:	88 1f       	adc	r24, r24
    13bc:	99 1f       	adc	r25, r25
    13be:	5a 95       	dec	r21
    13c0:	a9 f7       	brne	.-22     	; 0x13ac <__udivmodhi4_loop>
    13c2:	80 95       	com	r24
    13c4:	90 95       	com	r25
    13c6:	bc 01       	movw	r22, r24
    13c8:	cd 01       	movw	r24, r26
    13ca:	08 95       	ret

000013cc <__itoa_ncheck>:
    13cc:	bb 27       	eor	r27, r27
    13ce:	4a 30       	cpi	r20, 0x0A	; 10
    13d0:	31 f4       	brne	.+12     	; 0x13de <__itoa_ncheck+0x12>
    13d2:	99 23       	and	r25, r25
    13d4:	22 f4       	brpl	.+8      	; 0x13de <__itoa_ncheck+0x12>
    13d6:	bd e2       	ldi	r27, 0x2D	; 45
    13d8:	90 95       	com	r25
    13da:	81 95       	neg	r24
    13dc:	9f 4f       	sbci	r25, 0xFF	; 255
    13de:	01 c0       	rjmp	.+2      	; 0x13e2 <__utoa_common>

000013e0 <__utoa_ncheck>:
    13e0:	bb 27       	eor	r27, r27

000013e2 <__utoa_common>:
    13e2:	fb 01       	movw	r30, r22
    13e4:	55 27       	eor	r21, r21
    13e6:	aa 27       	eor	r26, r26
    13e8:	88 0f       	add	r24, r24
    13ea:	99 1f       	adc	r25, r25
    13ec:	aa 1f       	adc	r26, r26
    13ee:	a4 17       	cp	r26, r20
    13f0:	10 f0       	brcs	.+4      	; 0x13f6 <__utoa_common+0x14>
    13f2:	a4 1b       	sub	r26, r20
    13f4:	83 95       	inc	r24
    13f6:	50 51       	subi	r21, 0x10	; 16
    13f8:	b9 f7       	brne	.-18     	; 0x13e8 <__utoa_common+0x6>
    13fa:	a0 5d       	subi	r26, 0xD0	; 208
    13fc:	aa 33       	cpi	r26, 0x3A	; 58
    13fe:	08 f0       	brcs	.+2      	; 0x1402 <__utoa_common+0x20>
    1400:	a9 5d       	subi	r26, 0xD9	; 217
    1402:	a1 93       	st	Z+, r26
    1404:	00 97       	sbiw	r24, 0x00	; 0
    1406:	79 f7       	brne	.-34     	; 0x13e6 <__utoa_common+0x4>
    1408:	b1 11       	cpse	r27, r1
    140a:	b1 93       	st	Z+, r27
    140c:	11 92       	st	Z+, r1
    140e:	cb 01       	movw	r24, r22
    1410:	00 c0       	rjmp	.+0      	; 0x1412 <strrev>

00001412 <strrev>:
    1412:	dc 01       	movw	r26, r24
    1414:	fc 01       	movw	r30, r24
    1416:	67 2f       	mov	r22, r23
    1418:	71 91       	ld	r23, Z+
    141a:	77 23       	and	r23, r23
    141c:	e1 f7       	brne	.-8      	; 0x1416 <strrev+0x4>
    141e:	32 97       	sbiw	r30, 0x02	; 2
    1420:	04 c0       	rjmp	.+8      	; 0x142a <strrev+0x18>
    1422:	7c 91       	ld	r23, X
    1424:	6d 93       	st	X+, r22
    1426:	70 83       	st	Z, r23
    1428:	62 91       	ld	r22, -Z
    142a:	ae 17       	cp	r26, r30
    142c:	bf 07       	cpc	r27, r31
    142e:	c8 f3       	brcs	.-14     	; 0x1422 <strrev+0x10>
    1430:	08 95       	ret

00001432 <_exit>:
    1432:	f8 94       	cli

00001434 <__stop_program>:
    1434:	ff cf       	rjmp	.-2      	; 0x1434 <__stop_program>
