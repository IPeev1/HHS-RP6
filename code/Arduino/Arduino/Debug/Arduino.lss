
Arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800200  0000145c  000014f0  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000145c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000157  008002ba  008002ba  000015aa  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000015aa  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015dc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  0000161c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d57  00000000  00000000  0000176c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001193  00000000  00000000  000034c3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d49  00000000  00000000  00004656  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000488  00000000  00000000  000053a0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009ec  00000000  00000000  00005828  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e5f  00000000  00000000  00006214  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  00007073  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
       2:	00 00       	nop
       4:	d0 c0       	rjmp	.+416    	; 0x1a6 <__bad_interrupt>
       6:	00 00       	nop
       8:	ce c0       	rjmp	.+412    	; 0x1a6 <__bad_interrupt>
       a:	00 00       	nop
       c:	cc c0       	rjmp	.+408    	; 0x1a6 <__bad_interrupt>
       e:	00 00       	nop
      10:	ca c0       	rjmp	.+404    	; 0x1a6 <__bad_interrupt>
      12:	00 00       	nop
      14:	c8 c0       	rjmp	.+400    	; 0x1a6 <__bad_interrupt>
      16:	00 00       	nop
      18:	c6 c0       	rjmp	.+396    	; 0x1a6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c4 c0       	rjmp	.+392    	; 0x1a6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c2 c0       	rjmp	.+388    	; 0x1a6 <__bad_interrupt>
      22:	00 00       	nop
      24:	c0 c0       	rjmp	.+384    	; 0x1a6 <__bad_interrupt>
      26:	00 00       	nop
      28:	be c0       	rjmp	.+380    	; 0x1a6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	bc c0       	rjmp	.+376    	; 0x1a6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ba c0       	rjmp	.+372    	; 0x1a6 <__bad_interrupt>
      32:	00 00       	nop
      34:	b8 c0       	rjmp	.+368    	; 0x1a6 <__bad_interrupt>
      36:	00 00       	nop
      38:	b6 c0       	rjmp	.+364    	; 0x1a6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	11 c5       	rjmp	.+2594   	; 0xa60 <__vector_15>
      3e:	00 00       	nop
      40:	b2 c0       	rjmp	.+356    	; 0x1a6 <__bad_interrupt>
      42:	00 00       	nop
      44:	b0 c0       	rjmp	.+352    	; 0x1a6 <__bad_interrupt>
      46:	00 00       	nop
      48:	ae c0       	rjmp	.+348    	; 0x1a6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ac c0       	rjmp	.+344    	; 0x1a6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	aa c0       	rjmp	.+340    	; 0x1a6 <__bad_interrupt>
      52:	00 00       	nop
      54:	a8 c0       	rjmp	.+336    	; 0x1a6 <__bad_interrupt>
      56:	00 00       	nop
      58:	a6 c0       	rjmp	.+332    	; 0x1a6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a4 c0       	rjmp	.+328    	; 0x1a6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a2 c0       	rjmp	.+324    	; 0x1a6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b7 c0       	rjmp	.+366    	; 0x1d4 <__vector_25>
      66:	00 00       	nop
      68:	9e c0       	rjmp	.+316    	; 0x1a6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9c c0       	rjmp	.+312    	; 0x1a6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	9a c0       	rjmp	.+308    	; 0x1a6 <__bad_interrupt>
      72:	00 00       	nop
      74:	98 c0       	rjmp	.+304    	; 0x1a6 <__bad_interrupt>
      76:	00 00       	nop
      78:	96 c0       	rjmp	.+300    	; 0x1a6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	94 c0       	rjmp	.+296    	; 0x1a6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	92 c0       	rjmp	.+292    	; 0x1a6 <__bad_interrupt>
      82:	00 00       	nop
      84:	90 c0       	rjmp	.+288    	; 0x1a6 <__bad_interrupt>
      86:	00 00       	nop
      88:	8e c0       	rjmp	.+284    	; 0x1a6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	b5 c1       	rjmp	.+874    	; 0x3f8 <__vector_35>
      8e:	00 00       	nop
      90:	8a c0       	rjmp	.+276    	; 0x1a6 <__bad_interrupt>
      92:	00 00       	nop
      94:	88 c0       	rjmp	.+272    	; 0x1a6 <__bad_interrupt>
      96:	00 00       	nop
      98:	86 c0       	rjmp	.+268    	; 0x1a6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	9e c3       	rjmp	.+1852   	; 0x7da <__vector_39>
      9e:	00 00       	nop
      a0:	82 c0       	rjmp	.+260    	; 0x1a6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	80 c0       	rjmp	.+256    	; 0x1a6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	7e c0       	rjmp	.+252    	; 0x1a6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	7c c0       	rjmp	.+248    	; 0x1a6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	7a c0       	rjmp	.+244    	; 0x1a6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	78 c0       	rjmp	.+240    	; 0x1a6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	76 c0       	rjmp	.+236    	; 0x1a6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	74 c0       	rjmp	.+232    	; 0x1a6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	72 c0       	rjmp	.+228    	; 0x1a6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	70 c0       	rjmp	.+224    	; 0x1a6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	6e c0       	rjmp	.+220    	; 0x1a6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	6c c0       	rjmp	.+216    	; 0x1a6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	6a c0       	rjmp	.+212    	; 0x1a6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	68 c0       	rjmp	.+208    	; 0x1a6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	66 c0       	rjmp	.+204    	; 0x1a6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	64 c0       	rjmp	.+200    	; 0x1a6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	62 c0       	rjmp	.+196    	; 0x1a6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	07 63       	ori	r16, 0x37	; 55
      e6:	42 36       	cpi	r20, 0x62	; 98
      e8:	b7 9b       	sbis	0x16, 7	; 22
      ea:	d8 a7       	std	Y+40, r29	; 0x28
      ec:	1a 39       	cpi	r17, 0x9A	; 154
      ee:	68 56       	subi	r22, 0x68	; 104
      f0:	18 ae       	std	Y+56, r1	; 0x38
      f2:	ba ab       	std	Y+50, r27	; 0x32
      f4:	55 8c       	ldd	r5, Z+29	; 0x1d
      f6:	1d 3c       	cpi	r17, 0xCD	; 205
      f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
      fa:	57 63       	ori	r21, 0x37	; 55
      fc:	bd 6d       	ori	r27, 0xDD	; 221
      fe:	ed fd       	.word	0xfded	; ????
     100:	75 3e       	cpi	r23, 0xE5	; 229
     102:	f6 17       	cp	r31, r22
     104:	72 31       	cpi	r23, 0x12	; 18
     106:	bf 00       	.word	0x00bf	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 00       	nop
     110:	be 92       	st	-X, r11
     112:	24 49       	sbci	r18, 0x94	; 148
     114:	12 3e       	cpi	r17, 0xE2	; 226
     116:	ab aa       	std	Y+51, r10	; 0x33
     118:	aa 2a       	or	r10, r26
     11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
     11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
     11e:	4c 3e       	cpi	r20, 0xEC	; 236
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	be ab       	std	Y+54, r27	; 0x36
     126:	aa aa       	std	Y+50, r10	; 0x32
     128:	aa 3e       	cpi	r26, 0xEA	; 234
     12a:	00 00       	nop
     12c:	00 00       	nop
     12e:	bf 00       	.word	0x00bf	; ????
     130:	00 00       	nop
     132:	80 3f       	cpi	r24, 0xF0	; 240
     134:	00 00       	nop
     136:	00 00       	nop
     138:	00 08       	sbc	r0, r0
     13a:	41 78       	andi	r20, 0x81	; 129
     13c:	d3 bb       	out	0x13, r29	; 19
     13e:	43 87       	std	Z+11, r20	; 0x0b
     140:	d1 13       	cpse	r29, r17
     142:	3d 19       	sub	r19, r13
     144:	0e 3c       	cpi	r16, 0xCE	; 206
     146:	c3 bd       	out	0x23, r28	; 35
     148:	42 82       	std	Z+2, r4	; 0x02
     14a:	ad 2b       	or	r26, r29
     14c:	3e 68       	ori	r19, 0x8E	; 142
     14e:	ec 82       	std	Y+4, r14	; 0x04
     150:	76 be       	out	0x36, r7	; 54
     152:	d9 8f       	std	Y+25, r29	; 0x19
     154:	e1 a9       	ldd	r30, Z+49	; 0x31
     156:	3e 4c       	sbci	r19, 0xCE	; 206
     158:	80 ef       	ldi	r24, 0xF0	; 240
     15a:	ff be       	out	0x3f, r15	; 63
     15c:	01 c4       	rjmp	.+2050   	; 0x960 <writeToSlave+0x60>
     15e:	ff 7f       	andi	r31, 0xFF	; 255
     160:	3f 00       	.word	0x003f	; ????
     162:	00 00       	nop
	...

00000166 <__ctors_end>:
     166:	11 24       	eor	r1, r1
     168:	1f be       	out	0x3f, r1	; 63
     16a:	cf ef       	ldi	r28, 0xFF	; 255
     16c:	d1 e2       	ldi	r29, 0x21	; 33
     16e:	de bf       	out	0x3e, r29	; 62
     170:	cd bf       	out	0x3d, r28	; 61
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	0c bf       	out	0x3c, r16	; 60

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b2 e0       	ldi	r27, 0x02	; 2
     17c:	ec e5       	ldi	r30, 0x5C	; 92
     17e:	f4 e1       	ldi	r31, 0x14	; 20
     180:	00 e0       	ldi	r16, 0x00	; 0
     182:	0b bf       	out	0x3b, r16	; 59
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x14>
     186:	07 90       	elpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	aa 3b       	cpi	r26, 0xBA	; 186
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0x10>

00000190 <__do_clear_bss>:
     190:	24 e0       	ldi	r18, 0x04	; 4
     192:	aa eb       	ldi	r26, 0xBA	; 186
     194:	b2 e0       	ldi	r27, 0x02	; 2
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	a1 31       	cpi	r26, 0x11	; 17
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	03 d2       	rcall	.+1030   	; 0x5a8 <main>
     1a2:	0c 94 2c 0a 	jmp	0x1458	; 0x1458 <_exit>

000001a6 <__bad_interrupt>:
     1a6:	2c cf       	rjmp	.-424    	; 0x0 <__vectors>

000001a8 <init_USART>:
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
}
     1a8:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
     1ac:	e1 ec       	ldi	r30, 0xC1	; 193
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	80 81       	ld	r24, Z
     1b2:	80 69       	ori	r24, 0x90	; 144
     1b4:	80 83       	st	Z, r24
     1b6:	80 81       	ld	r24, Z
     1b8:	88 60       	ori	r24, 0x08	; 8
     1ba:	80 83       	st	Z, r24
     1bc:	e2 ec       	ldi	r30, 0xC2	; 194
     1be:	f0 e0       	ldi	r31, 0x00	; 0
     1c0:	80 81       	ld	r24, Z
     1c2:	86 60       	ori	r24, 0x06	; 6
     1c4:	80 83       	st	Z, r24
     1c6:	80 e1       	ldi	r24, 0x10	; 16
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     1ce:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     1d2:	08 95       	ret

000001d4 <__vector_25>:
     1d4:	1f 92       	push	r1
     1d6:	0f 92       	push	r0
     1d8:	0f b6       	in	r0, 0x3f	; 63
     1da:	0f 92       	push	r0
     1dc:	11 24       	eor	r1, r1
     1de:	0b b6       	in	r0, 0x3b	; 59
     1e0:	0f 92       	push	r0
     1e2:	df 92       	push	r13
     1e4:	ef 92       	push	r14
     1e6:	ff 92       	push	r15
     1e8:	0f 93       	push	r16
     1ea:	1f 93       	push	r17
     1ec:	2f 93       	push	r18
     1ee:	3f 93       	push	r19
     1f0:	4f 93       	push	r20
     1f2:	5f 93       	push	r21
     1f4:	6f 93       	push	r22
     1f6:	7f 93       	push	r23
     1f8:	8f 93       	push	r24
     1fa:	9f 93       	push	r25
     1fc:	af 93       	push	r26
     1fe:	bf 93       	push	r27
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	ef 93       	push	r30
     206:	ff 93       	push	r31
     208:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     20c:	90 ed       	ldi	r25, 0xD0	; 208
     20e:	98 0f       	add	r25, r24
     210:	9a 30       	cpi	r25, 0x0A	; 10
     212:	c0 f4       	brcc	.+48     	; 0x244 <__vector_25+0x70>
     214:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <command.1976>
     218:	94 37       	cpi	r25, 0x74	; 116
     21a:	09 f0       	breq	.+2      	; 0x21e <__vector_25+0x4a>
     21c:	b4 c0       	rjmp	.+360    	; 0x386 <__vector_25+0x1b2>
     21e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     222:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     226:	2f 3f       	cpi	r18, 0xFF	; 255
     228:	31 05       	cpc	r19, r1
     22a:	0c f0       	brlt	.+2      	; 0x22e <__vector_25+0x5a>
     22c:	ac c0       	rjmp	.+344    	; 0x386 <__vector_25+0x1b2>
     22e:	2f 5f       	subi	r18, 0xFF	; 255
     230:	3f 4f       	sbci	r19, 0xFF	; 255
     232:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <__data_start+0x1>
     236:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <__data_start>
     23a:	f9 01       	movw	r30, r18
     23c:	e2 54       	subi	r30, 0x42	; 66
     23e:	fd 4f       	sbci	r31, 0xFD	; 253
     240:	80 83       	st	Z, r24
     242:	a1 c0       	rjmp	.+322    	; 0x386 <__vector_25+0x1b2>
     244:	9f e9       	ldi	r25, 0x9F	; 159
     246:	98 0f       	add	r25, r24
     248:	9a 31       	cpi	r25, 0x1A	; 26
     24a:	80 f4       	brcc	.+32     	; 0x26c <__vector_25+0x98>
     24c:	85 37       	cpi	r24, 0x75	; 117
     24e:	40 f4       	brcc	.+16     	; 0x260 <__vector_25+0x8c>
     250:	83 37       	cpi	r24, 0x73	; 115
     252:	48 f4       	brcc	.+18     	; 0x266 <__vector_25+0x92>
     254:	81 36       	cpi	r24, 0x61	; 97
     256:	39 f0       	breq	.+14     	; 0x266 <__vector_25+0x92>
     258:	84 36       	cpi	r24, 0x64	; 100
     25a:	09 f0       	breq	.+2      	; 0x25e <__vector_25+0x8a>
     25c:	94 c0       	rjmp	.+296    	; 0x386 <__vector_25+0x1b2>
     25e:	03 c0       	rjmp	.+6      	; 0x266 <__vector_25+0x92>
     260:	87 37       	cpi	r24, 0x77	; 119
     262:	09 f0       	breq	.+2      	; 0x266 <__vector_25+0x92>
     264:	90 c0       	rjmp	.+288    	; 0x386 <__vector_25+0x1b2>
     266:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <command.1976>
     26a:	8d c0       	rjmp	.+282    	; 0x386 <__vector_25+0x1b2>
     26c:	8d 30       	cpi	r24, 0x0D	; 13
     26e:	09 f0       	breq	.+2      	; 0x272 <__vector_25+0x9e>
     270:	8a c0       	rjmp	.+276    	; 0x386 <__vector_25+0x1b2>
     272:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <command.1976>
     276:	84 37       	cpi	r24, 0x74	; 116
     278:	b1 f5       	brne	.+108    	; 0x2e6 <__vector_25+0x112>
     27a:	00 91 00 02 	lds	r16, 0x0200	; 0x800200 <__data_start>
     27e:	10 91 01 02 	lds	r17, 0x0201	; 0x800201 <__data_start+0x1>
     282:	11 23       	and	r17, r17
     284:	0c f4       	brge	.+2      	; 0x288 <__vector_25+0xb4>
     286:	71 c0       	rjmp	.+226    	; 0x36a <__vector_25+0x196>
     288:	c0 e0       	ldi	r28, 0x00	; 0
     28a:	d0 e0       	ldi	r29, 0x00	; 0
     28c:	d1 2c       	mov	r13, r1
     28e:	e1 2c       	mov	r14, r1
     290:	f1 2c       	mov	r15, r1
     292:	b8 01       	movw	r22, r16
     294:	6c 1b       	sub	r22, r28
     296:	7d 0b       	sbc	r23, r29
     298:	07 2e       	mov	r0, r23
     29a:	00 0c       	add	r0, r0
     29c:	88 0b       	sbc	r24, r24
     29e:	99 0b       	sbc	r25, r25
     2a0:	7a d5       	rcall	.+2804   	; 0xd96 <__floatsisf>
     2a2:	9b 01       	movw	r18, r22
     2a4:	ac 01       	movw	r20, r24
     2a6:	60 e0       	ldi	r22, 0x00	; 0
     2a8:	70 e0       	ldi	r23, 0x00	; 0
     2aa:	80 e2       	ldi	r24, 0x20	; 32
     2ac:	91 e4       	ldi	r25, 0x41	; 65
     2ae:	ff d5       	rcall	.+3070   	; 0xeae <pow>
     2b0:	c2 54       	subi	r28, 0x42	; 66
     2b2:	dd 4f       	sbci	r29, 0xFD	; 253
     2b4:	c8 81       	ld	r28, Y
     2b6:	c0 53       	subi	r28, 0x30	; 48
     2b8:	d0 e0       	ldi	r29, 0x00	; 0
     2ba:	20 e0       	ldi	r18, 0x00	; 0
     2bc:	30 e0       	ldi	r19, 0x00	; 0
     2be:	40 e0       	ldi	r20, 0x00	; 0
     2c0:	5f e3       	ldi	r21, 0x3F	; 63
     2c2:	d2 d4       	rcall	.+2468   	; 0xc68 <__addsf3>
     2c4:	35 d5       	rcall	.+2666   	; 0xd30 <__fixsfsi>
     2c6:	c6 9f       	mul	r28, r22
     2c8:	90 01       	movw	r18, r0
     2ca:	c7 9f       	mul	r28, r23
     2cc:	30 0d       	add	r19, r0
     2ce:	d6 9f       	mul	r29, r22
     2d0:	30 0d       	add	r19, r0
     2d2:	11 24       	eor	r1, r1
     2d4:	e2 0e       	add	r14, r18
     2d6:	f3 1e       	adc	r15, r19
     2d8:	d3 94       	inc	r13
     2da:	cd 2d       	mov	r28, r13
     2dc:	d0 e0       	ldi	r29, 0x00	; 0
     2de:	0c 17       	cp	r16, r28
     2e0:	1d 07       	cpc	r17, r29
     2e2:	bc f6       	brge	.-82     	; 0x292 <__vector_25+0xbe>
     2e4:	3d c0       	rjmp	.+122    	; 0x360 <__vector_25+0x18c>
     2e6:	88 23       	and	r24, r24
     2e8:	09 f4       	brne	.+2      	; 0x2ec <__vector_25+0x118>
     2ea:	4d c0       	rjmp	.+154    	; 0x386 <__vector_25+0x1b2>
     2ec:	83 37       	cpi	r24, 0x73	; 115
     2ee:	01 f1       	breq	.+64     	; 0x330 <__vector_25+0x15c>
     2f0:	28 f4       	brcc	.+10     	; 0x2fc <__vector_25+0x128>
     2f2:	81 36       	cpi	r24, 0x61	; 97
     2f4:	91 f0       	breq	.+36     	; 0x31a <__vector_25+0x146>
     2f6:	84 36       	cpi	r24, 0x64	; 100
     2f8:	31 f1       	breq	.+76     	; 0x346 <__vector_25+0x172>
     2fa:	3d c0       	rjmp	.+122    	; 0x376 <__vector_25+0x1a2>
     2fc:	84 37       	cpi	r24, 0x74	; 116
     2fe:	71 f1       	breq	.+92     	; 0x35c <__vector_25+0x188>
     300:	87 37       	cpi	r24, 0x77	; 119
     302:	c9 f5       	brne	.+114    	; 0x376 <__vector_25+0x1a2>
     304:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <rp6Data+0x2>
     308:	81 30       	cpi	r24, 0x01	; 1
     30a:	19 f4       	brne	.+6      	; 0x312 <__vector_25+0x13e>
     30c:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <rp6Data+0x2>
     310:	32 c0       	rjmp	.+100    	; 0x376 <__vector_25+0x1a2>
     312:	81 e0       	ldi	r24, 0x01	; 1
     314:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <rp6Data+0x2>
     318:	2e c0       	rjmp	.+92     	; 0x376 <__vector_25+0x1a2>
     31a:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <rp6Data+0x3>
     31e:	8f 3f       	cpi	r24, 0xFF	; 255
     320:	19 f4       	brne	.+6      	; 0x328 <__vector_25+0x154>
     322:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <rp6Data+0x3>
     326:	27 c0       	rjmp	.+78     	; 0x376 <__vector_25+0x1a2>
     328:	8f ef       	ldi	r24, 0xFF	; 255
     32a:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <rp6Data+0x3>
     32e:	23 c0       	rjmp	.+70     	; 0x376 <__vector_25+0x1a2>
     330:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <rp6Data+0x2>
     334:	8f 3f       	cpi	r24, 0xFF	; 255
     336:	19 f4       	brne	.+6      	; 0x33e <__vector_25+0x16a>
     338:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <rp6Data+0x2>
     33c:	1c c0       	rjmp	.+56     	; 0x376 <__vector_25+0x1a2>
     33e:	8f ef       	ldi	r24, 0xFF	; 255
     340:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <rp6Data+0x2>
     344:	18 c0       	rjmp	.+48     	; 0x376 <__vector_25+0x1a2>
     346:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <rp6Data+0x3>
     34a:	81 30       	cpi	r24, 0x01	; 1
     34c:	19 f4       	brne	.+6      	; 0x354 <__vector_25+0x180>
     34e:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <rp6Data+0x3>
     352:	11 c0       	rjmp	.+34     	; 0x376 <__vector_25+0x1a2>
     354:	81 e0       	ldi	r24, 0x01	; 1
     356:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <rp6Data+0x3>
     35a:	0d c0       	rjmp	.+26     	; 0x376 <__vector_25+0x1a2>
     35c:	e1 2c       	mov	r14, r1
     35e:	f1 2c       	mov	r15, r1
     360:	85 e6       	ldi	r24, 0x65	; 101
     362:	e8 16       	cp	r14, r24
     364:	f1 04       	cpc	r15, r1
     366:	38 f4       	brcc	.+14     	; 0x376 <__vector_25+0x1a2>
     368:	02 c0       	rjmp	.+4      	; 0x36e <__vector_25+0x19a>
     36a:	e1 2c       	mov	r14, r1
     36c:	f1 2c       	mov	r15, r1
     36e:	f0 92 01 04 	sts	0x0401, r15	; 0x800401 <rp6Data+0x1>
     372:	e0 92 00 04 	sts	0x0400, r14	; 0x800400 <rp6Data>
     376:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <command.1976>
     37a:	8f ef       	ldi	r24, 0xFF	; 255
     37c:	9f ef       	ldi	r25, 0xFF	; 255
     37e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__data_start+0x1>
     382:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
     386:	ff 91       	pop	r31
     388:	ef 91       	pop	r30
     38a:	df 91       	pop	r29
     38c:	cf 91       	pop	r28
     38e:	bf 91       	pop	r27
     390:	af 91       	pop	r26
     392:	9f 91       	pop	r25
     394:	8f 91       	pop	r24
     396:	7f 91       	pop	r23
     398:	6f 91       	pop	r22
     39a:	5f 91       	pop	r21
     39c:	4f 91       	pop	r20
     39e:	3f 91       	pop	r19
     3a0:	2f 91       	pop	r18
     3a2:	1f 91       	pop	r17
     3a4:	0f 91       	pop	r16
     3a6:	ff 90       	pop	r15
     3a8:	ef 90       	pop	r14
     3aa:	df 90       	pop	r13
     3ac:	0f 90       	pop	r0
     3ae:	0b be       	out	0x3b, r0	; 59
     3b0:	0f 90       	pop	r0
     3b2:	0f be       	out	0x3f, r0	; 63
     3b4:	0f 90       	pop	r0
     3b6:	1f 90       	pop	r1
     3b8:	18 95       	reti

000003ba <init_micros>:
     3ba:	e1 e9       	ldi	r30, 0x91	; 145
     3bc:	f0 e0       	ldi	r31, 0x00	; 0
     3be:	80 81       	ld	r24, Z
     3c0:	81 60       	ori	r24, 0x01	; 1
     3c2:	80 83       	st	Z, r24
     3c4:	e1 e7       	ldi	r30, 0x71	; 113
     3c6:	f0 e0       	ldi	r31, 0x00	; 0
     3c8:	80 81       	ld	r24, Z
     3ca:	81 60       	ori	r24, 0x01	; 1
     3cc:	80 83       	st	Z, r24
     3ce:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     3d2:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     3d6:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <t3TotalOverflow>
     3da:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <t3TotalOverflow+0x1>
     3de:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <t3TotalOverflow+0x2>
     3e2:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <t3TotalOverflow+0x3>
     3e6:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <t3TotalOverflow+0x4>
     3ea:	10 92 df 03 	sts	0x03DF, r1	; 0x8003df <t3TotalOverflow+0x5>
     3ee:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <t3TotalOverflow+0x6>
     3f2:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <t3TotalOverflow+0x7>
     3f6:	08 95       	ret

000003f8 <__vector_35>:
     3f8:	1f 92       	push	r1
     3fa:	0f 92       	push	r0
     3fc:	0f b6       	in	r0, 0x3f	; 63
     3fe:	0f 92       	push	r0
     400:	11 24       	eor	r1, r1
     402:	2f 93       	push	r18
     404:	3f 93       	push	r19
     406:	4f 93       	push	r20
     408:	5f 93       	push	r21
     40a:	6f 93       	push	r22
     40c:	7f 93       	push	r23
     40e:	8f 93       	push	r24
     410:	9f 93       	push	r25
     412:	af 93       	push	r26
     414:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <t3TotalOverflow>
     418:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <t3TotalOverflow+0x1>
     41c:	40 91 dc 03 	lds	r20, 0x03DC	; 0x8003dc <t3TotalOverflow+0x2>
     420:	50 91 dd 03 	lds	r21, 0x03DD	; 0x8003dd <t3TotalOverflow+0x3>
     424:	60 91 de 03 	lds	r22, 0x03DE	; 0x8003de <t3TotalOverflow+0x4>
     428:	70 91 df 03 	lds	r23, 0x03DF	; 0x8003df <t3TotalOverflow+0x5>
     42c:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <t3TotalOverflow+0x6>
     430:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <t3TotalOverflow+0x7>
     434:	a1 e0       	ldi	r26, 0x01	; 1
     436:	b9 d7       	rcall	.+3954   	; 0x13aa <__adddi3_s8>
     438:	20 93 da 03 	sts	0x03DA, r18	; 0x8003da <t3TotalOverflow>
     43c:	30 93 db 03 	sts	0x03DB, r19	; 0x8003db <t3TotalOverflow+0x1>
     440:	40 93 dc 03 	sts	0x03DC, r20	; 0x8003dc <t3TotalOverflow+0x2>
     444:	50 93 dd 03 	sts	0x03DD, r21	; 0x8003dd <t3TotalOverflow+0x3>
     448:	60 93 de 03 	sts	0x03DE, r22	; 0x8003de <t3TotalOverflow+0x4>
     44c:	70 93 df 03 	sts	0x03DF, r23	; 0x8003df <t3TotalOverflow+0x5>
     450:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <t3TotalOverflow+0x6>
     454:	90 93 e1 03 	sts	0x03E1, r25	; 0x8003e1 <t3TotalOverflow+0x7>
     458:	af 91       	pop	r26
     45a:	9f 91       	pop	r25
     45c:	8f 91       	pop	r24
     45e:	7f 91       	pop	r23
     460:	6f 91       	pop	r22
     462:	5f 91       	pop	r21
     464:	4f 91       	pop	r20
     466:	3f 91       	pop	r19
     468:	2f 91       	pop	r18
     46a:	0f 90       	pop	r0
     46c:	0f be       	out	0x3f, r0	; 63
     46e:	0f 90       	pop	r0
     470:	1f 90       	pop	r1
     472:	18 95       	reti

00000474 <micros>:
     474:	4f 92       	push	r4
     476:	5f 92       	push	r5
     478:	6f 92       	push	r6
     47a:	7f 92       	push	r7
     47c:	8f 92       	push	r8
     47e:	9f 92       	push	r9
     480:	af 92       	push	r10
     482:	bf 92       	push	r11
     484:	cf 92       	push	r12
     486:	df 92       	push	r13
     488:	ef 92       	push	r14
     48a:	ff 92       	push	r15
     48c:	0f 93       	push	r16
     48e:	1f 93       	push	r17
     490:	80 90 94 00 	lds	r8, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     494:	90 90 95 00 	lds	r9, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     498:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <t3TotalOverflow>
     49c:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <t3TotalOverflow+0x1>
     4a0:	40 91 dc 03 	lds	r20, 0x03DC	; 0x8003dc <t3TotalOverflow+0x2>
     4a4:	50 91 dd 03 	lds	r21, 0x03DD	; 0x8003dd <t3TotalOverflow+0x3>
     4a8:	60 91 de 03 	lds	r22, 0x03DE	; 0x8003de <t3TotalOverflow+0x4>
     4ac:	70 91 df 03 	lds	r23, 0x03DF	; 0x8003df <t3TotalOverflow+0x5>
     4b0:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <t3TotalOverflow+0x6>
     4b4:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <t3TotalOverflow+0x7>
     4b8:	98 2c       	mov	r9, r8
     4ba:	88 24       	eor	r8, r8
     4bc:	99 0c       	add	r9, r9
     4be:	99 0c       	add	r9, r9
     4c0:	99 0c       	add	r9, r9
     4c2:	99 0c       	add	r9, r9
     4c4:	09 2c       	mov	r0, r9
     4c6:	00 0c       	add	r0, r0
     4c8:	aa 08       	sbc	r10, r10
     4ca:	bb 08       	sbc	r11, r11
     4cc:	bb 20       	and	r11, r11
     4ce:	2c f4       	brge	.+10     	; 0x4da <micros+0x66>
     4d0:	ef ef       	ldi	r30, 0xFF	; 255
     4d2:	8e 0e       	add	r8, r30
     4d4:	9e 1e       	adc	r9, r30
     4d6:	a1 1c       	adc	r10, r1
     4d8:	b1 1c       	adc	r11, r1
     4da:	25 01       	movw	r4, r10
     4dc:	77 24       	eor	r7, r7
     4de:	57 fc       	sbrc	r5, 7
     4e0:	70 94       	com	r7
     4e2:	67 2c       	mov	r6, r7
     4e4:	bb 0c       	add	r11, r11
     4e6:	88 08       	sbc	r8, r8
     4e8:	98 2c       	mov	r9, r8
     4ea:	54 01       	movw	r10, r8
     4ec:	0c e0       	ldi	r16, 0x0C	; 12
     4ee:	3b d7       	rcall	.+3702   	; 0x1366 <__ashldi3>
     4f0:	f2 2f       	mov	r31, r18
     4f2:	e3 2f       	mov	r30, r19
     4f4:	c4 2e       	mov	r12, r20
     4f6:	d5 2e       	mov	r13, r21
     4f8:	e6 2e       	mov	r14, r22
     4fa:	f7 2e       	mov	r15, r23
     4fc:	08 2f       	mov	r16, r24
     4fe:	19 2f       	mov	r17, r25
     500:	24 2d       	mov	r18, r4
     502:	35 2d       	mov	r19, r5
     504:	46 2d       	mov	r20, r6
     506:	57 2d       	mov	r21, r7
     508:	68 2d       	mov	r22, r8
     50a:	78 2d       	mov	r23, r8
     50c:	88 2d       	mov	r24, r8
     50e:	98 2d       	mov	r25, r8
     510:	af 2e       	mov	r10, r31
     512:	be 2e       	mov	r11, r30
     514:	41 d7       	rcall	.+3714   	; 0x1398 <__adddi3>
     516:	1f 91       	pop	r17
     518:	0f 91       	pop	r16
     51a:	ff 90       	pop	r15
     51c:	ef 90       	pop	r14
     51e:	df 90       	pop	r13
     520:	cf 90       	pop	r12
     522:	bf 90       	pop	r11
     524:	af 90       	pop	r10
     526:	9f 90       	pop	r9
     528:	8f 90       	pop	r8
     52a:	7f 90       	pop	r7
     52c:	6f 90       	pop	r6
     52e:	5f 90       	pop	r5
     530:	4f 90       	pop	r4
     532:	08 95       	ret

00000534 <init_TWI>:
     534:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     538:	88 e4       	ldi	r24, 0x48	; 72
     53a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     53e:	85 e0       	ldi	r24, 0x05	; 5
     540:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     544:	08 95       	ret

00000546 <init_TWI_Timer2>:
     546:	e1 eb       	ldi	r30, 0xB1	; 177
     548:	f0 e0       	ldi	r31, 0x00	; 0
     54a:	80 81       	ld	r24, Z
     54c:	87 60       	ori	r24, 0x07	; 7
     54e:	80 83       	st	Z, r24
     550:	e0 e7       	ldi	r30, 0x70	; 112
     552:	f0 e0       	ldi	r31, 0x00	; 0
     554:	80 81       	ld	r24, Z
     556:	81 60       	ori	r24, 0x01	; 1
     558:	80 83       	st	Z, r24
     55a:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7000b2>
     55e:	08 95       	ret

00000560 <init_arduinoData>:
     560:	e2 ee       	ldi	r30, 0xE2	; 226
     562:	f3 e0       	ldi	r31, 0x03	; 3
     564:	11 82       	std	Z+1, r1	; 0x01
     566:	10 82       	st	Z, r1
     568:	13 82       	std	Z+3, r1	; 0x03
     56a:	12 82       	std	Z+2, r1	; 0x02
     56c:	08 95       	ret

0000056e <init_rp6Data>:
     56e:	e0 e0       	ldi	r30, 0x00	; 0
     570:	f4 e0       	ldi	r31, 0x04	; 4
     572:	11 82       	std	Z+1, r1	; 0x01
     574:	10 82       	st	Z, r1
     576:	12 82       	std	Z+2, r1	; 0x02
     578:	13 82       	std	Z+3, r1	; 0x03
     57a:	83 e0       	ldi	r24, 0x03	; 3
     57c:	90 e0       	ldi	r25, 0x00	; 0
     57e:	95 83       	std	Z+5, r25	; 0x05
     580:	84 83       	std	Z+4, r24	; 0x04
     582:	84 ec       	ldi	r24, 0xC4	; 196
     584:	99 e0       	ldi	r25, 0x09	; 9
     586:	97 83       	std	Z+7, r25	; 0x07
     588:	86 83       	std	Z+6, r24	; 0x06
     58a:	80 e7       	ldi	r24, 0x70	; 112
     58c:	97 e1       	ldi	r25, 0x17	; 23
     58e:	91 87       	std	Z+9, r25	; 0x09
     590:	80 87       	std	Z+8, r24	; 0x08
     592:	88 ec       	ldi	r24, 0xC8	; 200
     594:	90 e0       	ldi	r25, 0x00	; 0
     596:	a0 e0       	ldi	r26, 0x00	; 0
     598:	b0 e0       	ldi	r27, 0x00	; 0
     59a:	82 87       	std	Z+10, r24	; 0x0a
     59c:	93 87       	std	Z+11, r25	; 0x0b
     59e:	a4 87       	std	Z+12, r26	; 0x0c
     5a0:	b5 87       	std	Z+13, r27	; 0x0d
     5a2:	81 e0       	ldi	r24, 0x01	; 1
     5a4:	86 87       	std	Z+14, r24	; 0x0e
     5a6:	08 95       	ret

000005a8 <main>:
     5a8:	78 94       	sei
     5aa:	07 df       	rcall	.-498    	; 0x3ba <init_micros>
     5ac:	fd dd       	rcall	.-1030   	; 0x1a8 <init_USART>
     5ae:	c2 df       	rcall	.-124    	; 0x534 <init_TWI>
     5b0:	ca df       	rcall	.-108    	; 0x546 <init_TWI_Timer2>
     5b2:	dd df       	rcall	.-70     	; 0x56e <init_rp6Data>
     5b4:	d5 df       	rcall	.-86     	; 0x560 <init_arduinoData>
     5b6:	cc d2       	rcall	.+1432   	; 0xb50 <initTimer>
     5b8:	f7 dd       	rcall	.-1042   	; 0x1a8 <init_USART>
     5ba:	c0 e0       	ldi	r28, 0x00	; 0
     5bc:	d4 e0       	ldi	r29, 0x04	; 4
     5be:	40 90 c2 03 	lds	r4, 0x03C2	; 0x8003c2 <ultrasonicSensorTimer>
     5c2:	50 90 c3 03 	lds	r5, 0x03C3	; 0x8003c3 <ultrasonicSensorTimer+0x1>
     5c6:	60 90 c4 03 	lds	r6, 0x03C4	; 0x8003c4 <ultrasonicSensorTimer+0x2>
     5ca:	70 90 c5 03 	lds	r7, 0x03C5	; 0x8003c5 <ultrasonicSensorTimer+0x3>
     5ce:	52 df       	rcall	.-348    	; 0x474 <micros>
     5d0:	f2 2f       	mov	r31, r18
     5d2:	e3 2f       	mov	r30, r19
     5d4:	c4 2e       	mov	r12, r20
     5d6:	d5 2e       	mov	r13, r21
     5d8:	e6 2e       	mov	r14, r22
     5da:	f7 2e       	mov	r15, r23
     5dc:	08 2f       	mov	r16, r24
     5de:	19 2f       	mov	r17, r25
     5e0:	24 2d       	mov	r18, r4
     5e2:	35 2d       	mov	r19, r5
     5e4:	46 2d       	mov	r20, r6
     5e6:	57 2d       	mov	r21, r7
     5e8:	60 e0       	ldi	r22, 0x00	; 0
     5ea:	70 e0       	ldi	r23, 0x00	; 0
     5ec:	80 e0       	ldi	r24, 0x00	; 0
     5ee:	90 e0       	ldi	r25, 0x00	; 0
     5f0:	af 2e       	mov	r10, r31
     5f2:	be 2e       	mov	r11, r30
     5f4:	e6 d6       	rcall	.+3532   	; 0x13c2 <__cmpdi2>
     5f6:	08 f0       	brcs	.+2      	; 0x5fa <main+0x52>
     5f8:	4e c0       	rjmp	.+156    	; 0x696 <main+0xee>
     5fa:	8a e0       	ldi	r24, 0x0A	; 10
     5fc:	92 e0       	ldi	r25, 0x02	; 2
     5fe:	78 d2       	rcall	.+1264   	; 0xaf0 <writeString>
     600:	8d e0       	ldi	r24, 0x0D	; 13
     602:	92 e0       	ldi	r25, 0x02	; 2
     604:	75 d2       	rcall	.+1258   	; 0xaf0 <writeString>
     606:	ae d2       	rcall	.+1372   	; 0xb64 <ultrasonicSensor>
     608:	88 d2       	rcall	.+1296   	; 0xb1a <writeInt>
     60a:	82 e2       	ldi	r24, 0x22	; 34
     60c:	92 e0       	ldi	r25, 0x02	; 2
     60e:	70 d2       	rcall	.+1248   	; 0xaf0 <writeString>
     610:	88 81       	ld	r24, Y
     612:	99 81       	ldd	r25, Y+1	; 0x01
     614:	82 d2       	rcall	.+1284   	; 0xb1a <writeInt>
     616:	8f e2       	ldi	r24, 0x2F	; 47
     618:	92 e0       	ldi	r25, 0x02	; 2
     61a:	6a d2       	rcall	.+1236   	; 0xaf0 <writeString>
     61c:	8a 81       	ldd	r24, Y+2	; 0x02
     61e:	81 30       	cpi	r24, 0x01	; 1
     620:	21 f4       	brne	.+8      	; 0x62a <main+0x82>
     622:	8e e3       	ldi	r24, 0x3E	; 62
     624:	92 e0       	ldi	r25, 0x02	; 2
     626:	64 d2       	rcall	.+1224   	; 0xaf0 <writeString>
     628:	0b c0       	rjmp	.+22     	; 0x640 <main+0x98>
     62a:	81 11       	cpse	r24, r1
     62c:	04 c0       	rjmp	.+8      	; 0x636 <main+0x8e>
     62e:	88 e4       	ldi	r24, 0x48	; 72
     630:	92 e0       	ldi	r25, 0x02	; 2
     632:	5e d2       	rcall	.+1212   	; 0xaf0 <writeString>
     634:	05 c0       	rjmp	.+10     	; 0x640 <main+0x98>
     636:	8f 3f       	cpi	r24, 0xFF	; 255
     638:	19 f4       	brne	.+6      	; 0x640 <main+0x98>
     63a:	85 e5       	ldi	r24, 0x55	; 85
     63c:	92 e0       	ldi	r25, 0x02	; 2
     63e:	58 d2       	rcall	.+1200   	; 0xaf0 <writeString>
     640:	8b 81       	ldd	r24, Y+3	; 0x03
     642:	8f 3f       	cpi	r24, 0xFF	; 255
     644:	21 f4       	brne	.+8      	; 0x64e <main+0xa6>
     646:	81 e6       	ldi	r24, 0x61	; 97
     648:	92 e0       	ldi	r25, 0x02	; 2
     64a:	52 d2       	rcall	.+1188   	; 0xaf0 <writeString>
     64c:	0b c0       	rjmp	.+22     	; 0x664 <main+0xbc>
     64e:	81 11       	cpse	r24, r1
     650:	04 c0       	rjmp	.+8      	; 0x65a <main+0xb2>
     652:	8e e6       	ldi	r24, 0x6E	; 110
     654:	92 e0       	ldi	r25, 0x02	; 2
     656:	4c d2       	rcall	.+1176   	; 0xaf0 <writeString>
     658:	05 c0       	rjmp	.+10     	; 0x664 <main+0xbc>
     65a:	81 30       	cpi	r24, 0x01	; 1
     65c:	19 f4       	brne	.+6      	; 0x664 <main+0xbc>
     65e:	8d e7       	ldi	r24, 0x7D	; 125
     660:	92 e0       	ldi	r25, 0x02	; 2
     662:	46 d2       	rcall	.+1164   	; 0xaf0 <writeString>
     664:	07 df       	rcall	.-498    	; 0x474 <micros>
     666:	82 2e       	mov	r8, r18
     668:	93 2e       	mov	r9, r19
     66a:	a4 2e       	mov	r10, r20
     66c:	b5 2e       	mov	r11, r21
     66e:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrasonicSensorSpeed>
     672:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrasonicSensorSpeed+0x1>
     676:	a0 91 08 02 	lds	r26, 0x0208	; 0x800208 <ultrasonicSensorSpeed+0x2>
     67a:	b0 91 09 02 	lds	r27, 0x0209	; 0x800209 <ultrasonicSensorSpeed+0x3>
     67e:	88 0e       	add	r8, r24
     680:	99 1e       	adc	r9, r25
     682:	aa 1e       	adc	r10, r26
     684:	bb 1e       	adc	r11, r27
     686:	80 92 c2 03 	sts	0x03C2, r8	; 0x8003c2 <ultrasonicSensorTimer>
     68a:	90 92 c3 03 	sts	0x03C3, r9	; 0x8003c3 <ultrasonicSensorTimer+0x1>
     68e:	a0 92 c4 03 	sts	0x03C4, r10	; 0x8003c4 <ultrasonicSensorTimer+0x2>
     692:	b0 92 c5 03 	sts	0x03C5, r11	; 0x8003c5 <ultrasonicSensorTimer+0x3>
     696:	40 90 be 03 	lds	r4, 0x03BE	; 0x8003be <stoptimer>
     69a:	50 90 bf 03 	lds	r5, 0x03BF	; 0x8003bf <stoptimer+0x1>
     69e:	60 90 c0 03 	lds	r6, 0x03C0	; 0x8003c0 <stoptimer+0x2>
     6a2:	70 90 c1 03 	lds	r7, 0x03C1	; 0x8003c1 <stoptimer+0x3>
     6a6:	e6 de       	rcall	.-564    	; 0x474 <micros>
     6a8:	f2 2f       	mov	r31, r18
     6aa:	e3 2f       	mov	r30, r19
     6ac:	c4 2e       	mov	r12, r20
     6ae:	d5 2e       	mov	r13, r21
     6b0:	e6 2e       	mov	r14, r22
     6b2:	f7 2e       	mov	r15, r23
     6b4:	08 2f       	mov	r16, r24
     6b6:	19 2f       	mov	r17, r25
     6b8:	24 2d       	mov	r18, r4
     6ba:	35 2d       	mov	r19, r5
     6bc:	46 2d       	mov	r20, r6
     6be:	57 2d       	mov	r21, r7
     6c0:	60 e0       	ldi	r22, 0x00	; 0
     6c2:	70 e0       	ldi	r23, 0x00	; 0
     6c4:	80 e0       	ldi	r24, 0x00	; 0
     6c6:	90 e0       	ldi	r25, 0x00	; 0
     6c8:	af 2e       	mov	r10, r31
     6ca:	be 2e       	mov	r11, r30
     6cc:	7a d6       	rcall	.+3316   	; 0x13c2 <__cmpdi2>
     6ce:	08 f0       	brcs	.+2      	; 0x6d2 <main+0x12a>
     6d0:	76 cf       	rjmp	.-276    	; 0x5be <main+0x16>
     6d2:	48 d2       	rcall	.+1168   	; 0xb64 <ultrasonicSensor>
     6d4:	28 81       	ld	r18, Y
     6d6:	39 81       	ldd	r19, Y+1	; 0x01
     6d8:	2d 33       	cpi	r18, 0x3D	; 61
     6da:	31 05       	cpc	r19, r1
     6dc:	48 f4       	brcc	.+18     	; 0x6f0 <main+0x148>
     6de:	2a 81       	ldd	r18, Y+2	; 0x02
     6e0:	21 30       	cpi	r18, 0x01	; 1
     6e2:	71 f4       	brne	.+28     	; 0x700 <main+0x158>
     6e4:	84 3b       	cpi	r24, 0xB4	; 180
     6e6:	91 05       	cpc	r25, r1
     6e8:	58 f4       	brcc	.+22     	; 0x700 <main+0x158>
     6ea:	19 82       	std	Y+1, r1	; 0x01
     6ec:	18 82       	st	Y, r1
     6ee:	08 c0       	rjmp	.+16     	; 0x700 <main+0x158>
     6f0:	88 31       	cpi	r24, 0x18	; 24
     6f2:	91 40       	sbci	r25, 0x01	; 1
     6f4:	28 f4       	brcc	.+10     	; 0x700 <main+0x158>
     6f6:	8a 81       	ldd	r24, Y+2	; 0x02
     6f8:	81 30       	cpi	r24, 0x01	; 1
     6fa:	11 f4       	brne	.+4      	; 0x700 <main+0x158>
     6fc:	19 82       	std	Y+1, r1	; 0x01
     6fe:	18 82       	st	Y, r1
     700:	b9 de       	rcall	.-654    	; 0x474 <micros>
     702:	82 2e       	mov	r8, r18
     704:	93 2e       	mov	r9, r19
     706:	a4 2e       	mov	r10, r20
     708:	b5 2e       	mov	r11, r21
     70a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <stoptimerspeed>
     70e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <stoptimerspeed+0x1>
     712:	a0 91 04 02 	lds	r26, 0x0204	; 0x800204 <stoptimerspeed+0x2>
     716:	b0 91 05 02 	lds	r27, 0x0205	; 0x800205 <stoptimerspeed+0x3>
     71a:	88 0e       	add	r8, r24
     71c:	99 1e       	adc	r9, r25
     71e:	aa 1e       	adc	r10, r26
     720:	bb 1e       	adc	r11, r27
     722:	80 92 be 03 	sts	0x03BE, r8	; 0x8003be <stoptimer>
     726:	90 92 bf 03 	sts	0x03BF, r9	; 0x8003bf <stoptimer+0x1>
     72a:	a0 92 c0 03 	sts	0x03C0, r10	; 0x8003c0 <stoptimer+0x2>
     72e:	b0 92 c1 03 	sts	0x03C1, r11	; 0x8003c1 <stoptimer+0x3>
     732:	45 cf       	rjmp	.-374    	; 0x5be <main+0x16>

00000734 <arduinoDataInterpreter>:
     734:	a2 ee       	ldi	r26, 0xE2	; 226
     736:	b3 e0       	ldi	r27, 0x03	; 3
     738:	e6 ec       	ldi	r30, 0xC6	; 198
     73a:	f3 e0       	ldi	r31, 0x03	; 3
     73c:	81 81       	ldd	r24, Z+1	; 0x01
     73e:	90 e0       	ldi	r25, 0x00	; 0
     740:	98 2f       	mov	r25, r24
     742:	88 27       	eor	r24, r24
     744:	22 81       	ldd	r18, Z+2	; 0x02
     746:	82 0f       	add	r24, r18
     748:	91 1d       	adc	r25, r1
     74a:	11 96       	adiw	r26, 0x01	; 1
     74c:	9c 93       	st	X, r25
     74e:	8e 93       	st	-X, r24
     750:	83 81       	ldd	r24, Z+3	; 0x03
     752:	90 e0       	ldi	r25, 0x00	; 0
     754:	98 2f       	mov	r25, r24
     756:	88 27       	eor	r24, r24
     758:	24 81       	ldd	r18, Z+4	; 0x04
     75a:	82 0f       	add	r24, r18
     75c:	91 1d       	adc	r25, r1
     75e:	13 96       	adiw	r26, 0x03	; 3
     760:	9c 93       	st	X, r25
     762:	8e 93       	st	-X, r24
     764:	12 97       	sbiw	r26, 0x02	; 2
     766:	85 81       	ldd	r24, Z+5	; 0x05
     768:	90 e0       	ldi	r25, 0x00	; 0
     76a:	98 2f       	mov	r25, r24
     76c:	88 27       	eor	r24, r24
     76e:	26 81       	ldd	r18, Z+6	; 0x06
     770:	82 0f       	add	r24, r18
     772:	91 1d       	adc	r25, r1
     774:	15 96       	adiw	r26, 0x05	; 5
     776:	9c 93       	st	X, r25
     778:	8e 93       	st	-X, r24
     77a:	14 97       	sbiw	r26, 0x04	; 4
     77c:	87 81       	ldd	r24, Z+7	; 0x07
     77e:	90 e0       	ldi	r25, 0x00	; 0
     780:	98 2f       	mov	r25, r24
     782:	88 27       	eor	r24, r24
     784:	20 85       	ldd	r18, Z+8	; 0x08
     786:	82 0f       	add	r24, r18
     788:	91 1d       	adc	r25, r1
     78a:	17 96       	adiw	r26, 0x07	; 7
     78c:	9c 93       	st	X, r25
     78e:	8e 93       	st	-X, r24
     790:	16 97       	sbiw	r26, 0x06	; 6
     792:	81 85       	ldd	r24, Z+9	; 0x09
     794:	90 e0       	ldi	r25, 0x00	; 0
     796:	98 2f       	mov	r25, r24
     798:	88 27       	eor	r24, r24
     79a:	22 85       	ldd	r18, Z+10	; 0x0a
     79c:	82 0f       	add	r24, r18
     79e:	91 1d       	adc	r25, r1
     7a0:	19 96       	adiw	r26, 0x09	; 9
     7a2:	9c 93       	st	X, r25
     7a4:	8e 93       	st	-X, r24
     7a6:	18 97       	sbiw	r26, 0x08	; 8
     7a8:	08 95       	ret

000007aa <I2C_receiveInterpreter>:
     7aa:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <receiveDataTWI>
     7ae:	81 30       	cpi	r24, 0x01	; 1
     7b0:	09 f4       	brne	.+2      	; 0x7b4 <I2C_receiveInterpreter+0xa>
     7b2:	c0 cf       	rjmp	.-128    	; 0x734 <arduinoDataInterpreter>
     7b4:	08 95       	ret

000007b6 <clearSendData>:
     7b6:	ec ee       	ldi	r30, 0xEC	; 236
     7b8:	f3 e0       	ldi	r31, 0x03	; 3
     7ba:	80 e0       	ldi	r24, 0x00	; 0
     7bc:	94 e0       	ldi	r25, 0x04	; 4
     7be:	11 92       	st	Z+, r1
     7c0:	e8 17       	cp	r30, r24
     7c2:	f9 07       	cpc	r31, r25
     7c4:	e1 f7       	brne	.-8      	; 0x7be <clearSendData+0x8>
     7c6:	08 95       	ret

000007c8 <clearReceiveData>:
     7c8:	e6 ec       	ldi	r30, 0xC6	; 198
     7ca:	f3 e0       	ldi	r31, 0x03	; 3
     7cc:	8a ed       	ldi	r24, 0xDA	; 218
     7ce:	93 e0       	ldi	r25, 0x03	; 3
     7d0:	11 92       	st	Z+, r1
     7d2:	e8 17       	cp	r30, r24
     7d4:	f9 07       	cpc	r31, r25
     7d6:	e1 f7       	brne	.-8      	; 0x7d0 <clearReceiveData+0x8>
     7d8:	08 95       	ret

000007da <__vector_39>:
     7da:	1f 92       	push	r1
     7dc:	0f 92       	push	r0
     7de:	0f b6       	in	r0, 0x3f	; 63
     7e0:	0f 92       	push	r0
     7e2:	11 24       	eor	r1, r1
     7e4:	0b b6       	in	r0, 0x3b	; 59
     7e6:	0f 92       	push	r0
     7e8:	2f 93       	push	r18
     7ea:	3f 93       	push	r19
     7ec:	4f 93       	push	r20
     7ee:	5f 93       	push	r21
     7f0:	6f 93       	push	r22
     7f2:	7f 93       	push	r23
     7f4:	8f 93       	push	r24
     7f6:	9f 93       	push	r25
     7f8:	af 93       	push	r26
     7fa:	bf 93       	push	r27
     7fc:	ef 93       	push	r30
     7fe:	ff 93       	push	r31
     800:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     804:	80 35       	cpi	r24, 0x50	; 80
     806:	69 f0       	breq	.+26     	; 0x822 <__vector_39+0x48>
     808:	88 35       	cpi	r24, 0x58	; 88
     80a:	51 f1       	breq	.+84     	; 0x860 <__vector_39+0x86>
     80c:	80 34       	cpi	r24, 0x40	; 64
     80e:	a9 f5       	brne	.+106    	; 0x87a <__vector_39+0xa0>
     810:	db df       	rcall	.-74     	; 0x7c8 <clearReceiveData>
     812:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <bytecounter.2023+0x1>
     816:	10 92 bc 02 	sts	0x02BC, r1	; 0x8002bc <bytecounter.2023>
     81a:	85 ec       	ldi	r24, 0xC5	; 197
     81c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     820:	2c c0       	rjmp	.+88     	; 0x87a <__vector_39+0xa0>
     822:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <bytecounter.2023>
     826:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <bytecounter.2023+0x1>
     82a:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     82e:	fc 01       	movw	r30, r24
     830:	ea 53       	subi	r30, 0x3A	; 58
     832:	fc 4f       	sbci	r31, 0xFC	; 252
     834:	20 83       	st	Z, r18
     836:	82 31       	cpi	r24, 0x12	; 18
     838:	91 05       	cpc	r25, r1
     83a:	4c f4       	brge	.+18     	; 0x84e <__vector_39+0x74>
     83c:	01 96       	adiw	r24, 0x01	; 1
     83e:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <bytecounter.2023+0x1>
     842:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <bytecounter.2023>
     846:	85 ec       	ldi	r24, 0xC5	; 197
     848:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     84c:	16 c0       	rjmp	.+44     	; 0x87a <__vector_39+0xa0>
     84e:	01 96       	adiw	r24, 0x01	; 1
     850:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <bytecounter.2023+0x1>
     854:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <bytecounter.2023>
     858:	85 e8       	ldi	r24, 0x85	; 133
     85a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     85e:	0d c0       	rjmp	.+26     	; 0x87a <__vector_39+0xa0>
     860:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     864:	e0 91 bc 02 	lds	r30, 0x02BC	; 0x8002bc <bytecounter.2023>
     868:	f0 91 bd 02 	lds	r31, 0x02BD	; 0x8002bd <bytecounter.2023+0x1>
     86c:	ea 53       	subi	r30, 0x3A	; 58
     86e:	fc 4f       	sbci	r31, 0xFC	; 252
     870:	80 83       	st	Z, r24
     872:	85 e9       	ldi	r24, 0x95	; 149
     874:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     878:	98 df       	rcall	.-208    	; 0x7aa <I2C_receiveInterpreter>
     87a:	ff 91       	pop	r31
     87c:	ef 91       	pop	r30
     87e:	bf 91       	pop	r27
     880:	af 91       	pop	r26
     882:	9f 91       	pop	r25
     884:	8f 91       	pop	r24
     886:	7f 91       	pop	r23
     888:	6f 91       	pop	r22
     88a:	5f 91       	pop	r21
     88c:	4f 91       	pop	r20
     88e:	3f 91       	pop	r19
     890:	2f 91       	pop	r18
     892:	0f 90       	pop	r0
     894:	0b be       	out	0x3b, r0	; 59
     896:	0f 90       	pop	r0
     898:	0f be       	out	0x3f, r0	; 63
     89a:	0f 90       	pop	r0
     89c:	1f 90       	pop	r1
     89e:	18 95       	reti

000008a0 <TWIwaitUntilReady>:


void TWIwaitUntilReady(){
	while (!(TWCR & (1 << TWINT)));
     8a0:	ec eb       	ldi	r30, 0xBC	; 188
     8a2:	f0 e0       	ldi	r31, 0x00	; 0
     8a4:	80 81       	ld	r24, Z
     8a6:	88 23       	and	r24, r24
     8a8:	ec f7       	brge	.-6      	; 0x8a4 <TWIwaitUntilReady+0x4>
}
     8aa:	08 95       	ret

000008ac <checkCode>:


void checkCode(uint8_t code){
     8ac:	cf 93       	push	r28
     8ae:	df 93       	push	r29
     8b0:	cd b7       	in	r28, 0x3d	; 61
     8b2:	de b7       	in	r29, 0x3e	; 62
     8b4:	cf 5f       	subi	r28, 0xFF	; 255
     8b6:	d1 09       	sbc	r29, r1
     8b8:	0f b6       	in	r0, 0x3f	; 63
     8ba:	f8 94       	cli
     8bc:	de bf       	out	0x3e, r29	; 62
     8be:	0f be       	out	0x3f, r0	; 63
     8c0:	cd bf       	out	0x3d, r28	; 61
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     8c2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
	while (!(TWCR & (1 << TWINT)));
}


void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
     8c6:	98 7f       	andi	r25, 0xF8	; 248
     8c8:	89 17       	cp	r24, r25
     8ca:	81 f0       	breq	.+32     	; 0x8ec <checkCode+0x40>
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
     8cc:	8b e8       	ldi	r24, 0x8B	; 139
     8ce:	92 e0       	ldi	r25, 0x02	; 2
     8d0:	0f d1       	rcall	.+542    	; 0xaf0 <writeString>
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     8d2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     8d6:	88 7f       	andi	r24, 0xF8	; 248
     8d8:	40 e1       	ldi	r20, 0x10	; 16
     8da:	be 01       	movw	r22, r28
     8dc:	6f 5f       	subi	r22, 0xFF	; 255
     8de:	7f 4f       	sbci	r23, 0xFF	; 255
     8e0:	90 e0       	ldi	r25, 0x00	; 0

void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
		writeString( itoa( TWIGetStatus(), buffer, 16) );
     8e2:	87 d5       	rcall	.+2830   	; 0x13f2 <__itoa_ncheck>
		writeString("\n\n\r");
     8e4:	05 d1       	rcall	.+522    	; 0xaf0 <writeString>
     8e6:	86 eb       	ldi	r24, 0xB6	; 182
     8e8:	92 e0       	ldi	r25, 0x02	; 2
     8ea:	02 d1       	rcall	.+516    	; 0xaf0 <writeString>
	}
}
     8ec:	c1 50       	subi	r28, 0x01	; 1
     8ee:	df 4f       	sbci	r29, 0xFF	; 255
     8f0:	0f b6       	in	r0, 0x3f	; 63
     8f2:	f8 94       	cli
     8f4:	de bf       	out	0x3e, r29	; 62
     8f6:	0f be       	out	0x3f, r0	; 63
     8f8:	cd bf       	out	0x3d, r28	; 61
     8fa:	df 91       	pop	r29
     8fc:	cf 91       	pop	r28
     8fe:	08 95       	ret

00000900 <writeToSlave>:


void writeToSlave(uint8_t address, uint8_t dataByte[]){
     900:	af 92       	push	r10
     902:	bf 92       	push	r11
     904:	cf 92       	push	r12
     906:	df 92       	push	r13
     908:	ff 92       	push	r15
     90a:	0f 93       	push	r16
     90c:	1f 93       	push	r17
     90e:	cf 93       	push	r28
     910:	df 93       	push	r29
     912:	c8 2f       	mov	r28, r24
     914:	8b 01       	movw	r16, r22
	
	TWISendStart();
     916:	0f 2e       	mov	r0, r31
     918:	fc eb       	ldi	r31, 0xBC	; 188
     91a:	cf 2e       	mov	r12, r31
     91c:	d1 2c       	mov	r13, r1
     91e:	f0 2d       	mov	r31, r0
     920:	85 ea       	ldi	r24, 0xA5	; 165
     922:	f6 01       	movw	r30, r12
     924:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     926:	bc df       	rcall	.-136    	; 0x8a0 <TWIwaitUntilReady>
	checkCode(0x08);
     928:	88 e0       	ldi	r24, 0x08	; 8
     92a:	c0 df       	rcall	.-128    	; 0x8ac <checkCode>
	
	TWIWrite((address << 1));
     92c:	cc 0f       	add	r28, r28
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     92e:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     932:	85 e8       	ldi	r24, 0x85	; 133
     934:	f6 01       	movw	r30, r12
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
     936:	80 83       	st	Z, r24
	checkCode(0x18);
     938:	b3 df       	rcall	.-154    	; 0x8a0 <TWIwaitUntilReady>
     93a:	88 e1       	ldi	r24, 0x18	; 24
     93c:	b7 df       	rcall	.-146    	; 0x8ac <checkCode>
     93e:	e8 01       	movw	r28, r16
     940:	0c 5e       	subi	r16, 0xEC	; 236
     942:	1f 4f       	sbci	r17, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     944:	0f 2e       	mov	r0, r31
     946:	fb eb       	ldi	r31, 0xBB	; 187
     948:	af 2e       	mov	r10, r31
     94a:	b1 2c       	mov	r11, r1
     94c:	f0 2d       	mov	r31, r0
	TWISendTransmit();
     94e:	0f 2e       	mov	r0, r31
     950:	f5 e8       	ldi	r31, 0x85	; 133
     952:	ff 2e       	mov	r15, r31
     954:	f0 2d       	mov	r31, r0
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
     956:	89 91       	ld	r24, Y+
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     958:	f5 01       	movw	r30, r10
	TWISendTransmit();
     95a:	80 83       	st	Z, r24
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
     95c:	f6 01       	movw	r30, r12
     95e:	f0 82       	st	Z, r15
		checkCode(0x28);
     960:	9f df       	rcall	.-194    	; 0x8a0 <TWIwaitUntilReady>
     962:	88 e2       	ldi	r24, 0x28	; 40
     964:	a3 df       	rcall	.-186    	; 0x8ac <checkCode>
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
     966:	c0 17       	cp	r28, r16
     968:	d1 07       	cpc	r29, r17
     96a:	a9 f7       	brne	.-22     	; 0x956 <writeToSlave+0x56>
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
		checkCode(0x28);
	}
	
	TWISendStop();
     96c:	85 e9       	ldi	r24, 0x95	; 149
     96e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
}
     972:	df 91       	pop	r29
     974:	cf 91       	pop	r28
     976:	1f 91       	pop	r17
     978:	0f 91       	pop	r16
     97a:	ff 90       	pop	r15
     97c:	df 90       	pop	r13
     97e:	cf 90       	pop	r12
     980:	bf 90       	pop	r11
     982:	af 90       	pop	r10
     984:	08 95       	ret

00000986 <rp6DataConstructor>:
	arduinoData.totalDistance = (receiveDataTWI[9] << 8) + receiveDataTWI[10];
}


void rp6DataConstructor(){
	clearSendData();
     986:	17 df       	rcall	.-466    	; 0x7b6 <clearSendData>
	
	sendDataTWI[0] = 1;
     988:	81 e0       	ldi	r24, 0x01	; 1
     98a:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <sendDataTWI>
	if(rp6Data.driveSpeed > 100){rp6Data.driveSpeed = 100;}
     98e:	80 91 00 04 	lds	r24, 0x0400	; 0x800400 <rp6Data>
     992:	90 91 01 04 	lds	r25, 0x0401	; 0x800401 <rp6Data+0x1>
     996:	85 36       	cpi	r24, 0x65	; 101
     998:	91 05       	cpc	r25, r1
     99a:	30 f0       	brcs	.+12     	; 0x9a8 <rp6DataConstructor+0x22>
     99c:	84 e6       	ldi	r24, 0x64	; 100
     99e:	90 e0       	ldi	r25, 0x00	; 0
     9a0:	90 93 01 04 	sts	0x0401, r25	; 0x800401 <rp6Data+0x1>
     9a4:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <rp6Data>
	sendDataTWI[1] = rp6Data.driveSpeed;
     9a8:	ec ee       	ldi	r30, 0xEC	; 236
     9aa:	f3 e0       	ldi	r31, 0x03	; 3
     9ac:	a0 e0       	ldi	r26, 0x00	; 0
     9ae:	b4 e0       	ldi	r27, 0x04	; 4
     9b0:	8c 91       	ld	r24, X
     9b2:	81 83       	std	Z+1, r24	; 0x01
	sendDataTWI[2] = rp6Data.driveDirection + 1;
     9b4:	12 96       	adiw	r26, 0x02	; 2
     9b6:	8c 91       	ld	r24, X
     9b8:	12 97       	sbiw	r26, 0x02	; 2
     9ba:	8f 5f       	subi	r24, 0xFF	; 255
     9bc:	82 83       	std	Z+2, r24	; 0x02
	sendDataTWI[3] = rp6Data.turnDirection + 1;
     9be:	13 96       	adiw	r26, 0x03	; 3
     9c0:	8c 91       	ld	r24, X
     9c2:	13 97       	sbiw	r26, 0x03	; 3
     9c4:	8f 5f       	subi	r24, 0xFF	; 255
     9c6:	83 83       	std	Z+3, r24	; 0x03
	
	sendDataTWI[4] = (rp6Data.accelerationRate >> 8);
     9c8:	14 96       	adiw	r26, 0x04	; 4
     9ca:	8c 91       	ld	r24, X
     9cc:	14 97       	sbiw	r26, 0x04	; 4
     9ce:	15 96       	adiw	r26, 0x05	; 5
     9d0:	9c 91       	ld	r25, X
     9d2:	15 97       	sbiw	r26, 0x05	; 5
     9d4:	94 83       	std	Z+4, r25	; 0x04
	sendDataTWI[5] = rp6Data.accelerationRate;
     9d6:	85 83       	std	Z+5, r24	; 0x05
	
	sendDataTWI[6] = (rp6Data.turnRate >> 8);
     9d8:	16 96       	adiw	r26, 0x06	; 6
     9da:	8c 91       	ld	r24, X
     9dc:	16 97       	sbiw	r26, 0x06	; 6
     9de:	17 96       	adiw	r26, 0x07	; 7
     9e0:	9c 91       	ld	r25, X
     9e2:	17 97       	sbiw	r26, 0x07	; 7
     9e4:	96 83       	std	Z+6, r25	; 0x06
	sendDataTWI[7] = rp6Data.turnRate;
     9e6:	87 83       	std	Z+7, r24	; 0x07
	
	sendDataTWI[8] = (rp6Data.driveSpeedThreshold >> 8);
     9e8:	18 96       	adiw	r26, 0x08	; 8
     9ea:	8c 91       	ld	r24, X
     9ec:	18 97       	sbiw	r26, 0x08	; 8
     9ee:	19 96       	adiw	r26, 0x09	; 9
     9f0:	9c 91       	ld	r25, X
     9f2:	19 97       	sbiw	r26, 0x09	; 9
     9f4:	90 87       	std	Z+8, r25	; 0x08
	sendDataTWI[9] = rp6Data.driveSpeedThreshold;
     9f6:	81 87       	std	Z+9, r24	; 0x09
	
	sendDataTWI[10] = (rp6Data.updateSpeed >> 8);
     9f8:	1a 96       	adiw	r26, 0x0a	; 10
     9fa:	8c 91       	ld	r24, X
     9fc:	1a 97       	sbiw	r26, 0x0a	; 10
     9fe:	1b 96       	adiw	r26, 0x0b	; 11
     a00:	9c 91       	ld	r25, X
     a02:	1b 97       	sbiw	r26, 0x0b	; 11
     a04:	92 87       	std	Z+10, r25	; 0x0a
	sendDataTWI[11] = rp6Data.updateSpeed;
     a06:	83 87       	std	Z+11, r24	; 0x0b
	
	sendDataTWI[12] = rp6Data.enableBeeper;
     a08:	1e 96       	adiw	r26, 0x0e	; 14
     a0a:	8c 91       	ld	r24, X
     a0c:	1e 97       	sbiw	r26, 0x0e	; 14
     a0e:	84 87       	std	Z+12, r24	; 0x0c
	
	sendDataTWI[13] = (rp6Data.compassAngle >> 8);
     a10:	1f 96       	adiw	r26, 0x0f	; 15
     a12:	8c 91       	ld	r24, X
     a14:	1f 97       	sbiw	r26, 0x0f	; 15
     a16:	50 96       	adiw	r26, 0x10	; 16
     a18:	9c 91       	ld	r25, X
     a1a:	95 87       	std	Z+13, r25	; 0x0d
	sendDataTWI[14] = rp6Data.compassAngle;
     a1c:	86 87       	std	Z+14, r24	; 0x0e
	
	for(int i = 15; i < DATASIZE; i++){
		sendDataTWI[i] = 0;
     a1e:	17 86       	std	Z+15, r1	; 0x0f
     a20:	10 8a       	std	Z+16, r1	; 0x10
     a22:	11 8a       	std	Z+17, r1	; 0x11
     a24:	12 8a       	std	Z+18, r1	; 0x12
     a26:	13 8a       	std	Z+19, r1	; 0x13
	}
	
	writeToSlave(RP6_ADDRESS, sendDataTWI);
     a28:	bf 01       	movw	r22, r30
     a2a:	83 e0       	ldi	r24, 0x03	; 3
     a2c:	69 cf       	rjmp	.-302    	; 0x900 <writeToSlave>
     a2e:	08 95       	ret

00000a30 <readFromSlave>:
	TWISendStop();
	
}


void readFromSlave(uint8_t address){
     a30:	0f 93       	push	r16
     a32:	1f 93       	push	r17
     a34:	cf 93       	push	r28
     a36:	c8 2f       	mov	r28, r24
	
	TWISendStart();
     a38:	0c eb       	ldi	r16, 0xBC	; 188
     a3a:	10 e0       	ldi	r17, 0x00	; 0
     a3c:	85 ea       	ldi	r24, 0xA5	; 165
     a3e:	f8 01       	movw	r30, r16
     a40:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     a42:	2e df       	rcall	.-420    	; 0x8a0 <TWIwaitUntilReady>
	checkCode(0x08);
     a44:	88 e0       	ldi	r24, 0x08	; 8
     a46:	32 df       	rcall	.-412    	; 0x8ac <checkCode>
	
	TWIWrite( (address << 1) + 1 );
     a48:	cc 0f       	add	r28, r28
     a4a:	cf 5f       	subi	r28, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     a4c:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     a50:	85 e8       	ldi	r24, 0x85	; 133
     a52:	f8 01       	movw	r30, r16
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite( (address << 1) + 1 );
	TWIwaitUntilReady();
     a54:	80 83       	st	Z, r24
     a56:	24 df       	rcall	.-440    	; 0x8a0 <TWIwaitUntilReady>
	
}
     a58:	cf 91       	pop	r28
     a5a:	1f 91       	pop	r17
     a5c:	0f 91       	pop	r16
     a5e:	08 95       	ret

00000a60 <__vector_15>:
		break;
	}
}


ISR(TIMER2_OVF_vect){
     a60:	1f 92       	push	r1
     a62:	0f 92       	push	r0
     a64:	0f b6       	in	r0, 0x3f	; 63
     a66:	0f 92       	push	r0
     a68:	11 24       	eor	r1, r1
     a6a:	0b b6       	in	r0, 0x3b	; 59
     a6c:	0f 92       	push	r0
     a6e:	2f 93       	push	r18
     a70:	3f 93       	push	r19
     a72:	4f 93       	push	r20
     a74:	5f 93       	push	r21
     a76:	6f 93       	push	r22
     a78:	7f 93       	push	r23
     a7a:	8f 93       	push	r24
     a7c:	9f 93       	push	r25
     a7e:	af 93       	push	r26
     a80:	bf 93       	push	r27
     a82:	ef 93       	push	r30
     a84:	ff 93       	push	r31
	static int counter = 0;
	
	if(counter == 6){
     a86:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <__data_end>
     a8a:	90 91 bb 02 	lds	r25, 0x02BB	; 0x8002bb <__data_end+0x1>
     a8e:	86 30       	cpi	r24, 0x06	; 6
     a90:	91 05       	cpc	r25, r1
     a92:	11 f4       	brne	.+4      	; 0xa98 <__vector_15+0x38>
		rp6DataConstructor();
     a94:	78 df       	rcall	.-272    	; 0x986 <rp6DataConstructor>
     a96:	08 c0       	rjmp	.+16     	; 0xaa8 <__vector_15+0x48>
		}else if(counter >= 12){
     a98:	0c 97       	sbiw	r24, 0x0c	; 12
     a9a:	34 f0       	brlt	.+12     	; 0xaa8 <__vector_15+0x48>
		readFromSlave(RP6_ADDRESS);
     a9c:	83 e0       	ldi	r24, 0x03	; 3
     a9e:	c8 df       	rcall	.-112    	; 0xa30 <readFromSlave>
		counter = 0;
     aa0:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <__data_end+0x1>
     aa4:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <__data_end>
	}
	
	counter++;
     aa8:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <__data_end>
     aac:	90 91 bb 02 	lds	r25, 0x02BB	; 0x8002bb <__data_end+0x1>
     ab0:	01 96       	adiw	r24, 0x01	; 1
     ab2:	90 93 bb 02 	sts	0x02BB, r25	; 0x8002bb <__data_end+0x1>
     ab6:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <__data_end>
}
     aba:	ff 91       	pop	r31
     abc:	ef 91       	pop	r30
     abe:	bf 91       	pop	r27
     ac0:	af 91       	pop	r26
     ac2:	9f 91       	pop	r25
     ac4:	8f 91       	pop	r24
     ac6:	7f 91       	pop	r23
     ac8:	6f 91       	pop	r22
     aca:	5f 91       	pop	r21
     acc:	4f 91       	pop	r20
     ace:	3f 91       	pop	r19
     ad0:	2f 91       	pop	r18
     ad2:	0f 90       	pop	r0
     ad4:	0b be       	out	0x3b, r0	; 59
     ad6:	0f 90       	pop	r0
     ad8:	0f be       	out	0x3f, r0	; 63
     ada:	0f 90       	pop	r0
     adc:	1f 90       	pop	r1
     ade:	18 95       	reti

00000ae0 <writeChar>:
#include "matthijs_testFunctions.h"
#include <avr/io.h>
#include <stdlib.h>

void writeChar(char x) { //Sends char x over serial communication
	while(~UCSR0A & (1 << UDRE0)); //Wait until UDRE0 is set
     ae0:	e0 ec       	ldi	r30, 0xC0	; 192
     ae2:	f0 e0       	ldi	r31, 0x00	; 0
     ae4:	90 81       	ld	r25, Z
     ae6:	95 ff       	sbrs	r25, 5
     ae8:	fd cf       	rjmp	.-6      	; 0xae4 <writeChar+0x4>
	UDR0 = x;
     aea:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     aee:	08 95       	ret

00000af0 <writeString>:
}

void writeString(char st[]) { //Sends char array over serial communication. Dependent on writeChar()
     af0:	0f 93       	push	r16
     af2:	1f 93       	push	r17
     af4:	cf 93       	push	r28
     af6:	fc 01       	movw	r30, r24
	for(uint8_t i = 0 ; st[i] != 0 ; i++) {
     af8:	80 81       	ld	r24, Z
     afa:	88 23       	and	r24, r24
     afc:	51 f0       	breq	.+20     	; 0xb12 <writeString+0x22>
     afe:	8f 01       	movw	r16, r30
     b00:	c0 e0       	ldi	r28, 0x00	; 0
		writeChar( st[i] );
     b02:	ee df       	rcall	.-36     	; 0xae0 <writeChar>
	while(~UCSR0A & (1 << UDRE0)); //Wait until UDRE0 is set
	UDR0 = x;
}

void writeString(char st[]) { //Sends char array over serial communication. Dependent on writeChar()
	for(uint8_t i = 0 ; st[i] != 0 ; i++) {
     b04:	cf 5f       	subi	r28, 0xFF	; 255
     b06:	f8 01       	movw	r30, r16
     b08:	ec 0f       	add	r30, r28
     b0a:	f1 1d       	adc	r31, r1
     b0c:	80 81       	ld	r24, Z
     b0e:	81 11       	cpse	r24, r1
     b10:	f8 cf       	rjmp	.-16     	; 0xb02 <writeString+0x12>
		writeChar( st[i] );
	}
}
     b12:	cf 91       	pop	r28
     b14:	1f 91       	pop	r17
     b16:	0f 91       	pop	r16
     b18:	08 95       	ret

00000b1a <writeInt>:

void writeInt(int i) { //Sends integer i over serial communication. Dependent on writeString()
     b1a:	cf 93       	push	r28
     b1c:	df 93       	push	r29
     b1e:	cd b7       	in	r28, 0x3d	; 61
     b20:	de b7       	in	r29, 0x3e	; 62
     b22:	28 97       	sbiw	r28, 0x08	; 8
     b24:	0f b6       	in	r0, 0x3f	; 63
     b26:	f8 94       	cli
     b28:	de bf       	out	0x3e, r29	; 62
     b2a:	0f be       	out	0x3f, r0	; 63
     b2c:	cd bf       	out	0x3d, r28	; 61
     b2e:	4a e0       	ldi	r20, 0x0A	; 10
     b30:	be 01       	movw	r22, r28
     b32:	6f 5f       	subi	r22, 0xFF	; 255
     b34:	7f 4f       	sbci	r23, 0xFF	; 255
     b36:	5d d4       	rcall	.+2234   	; 0x13f2 <__itoa_ncheck>
	char buffer[8];
	itoa(i,buffer,10); //Converts i to a string
	writeString(buffer);
     b38:	ce 01       	movw	r24, r28
     b3a:	01 96       	adiw	r24, 0x01	; 1
     b3c:	d9 df       	rcall	.-78     	; 0xaf0 <writeString>
}
     b3e:	28 96       	adiw	r28, 0x08	; 8
     b40:	0f b6       	in	r0, 0x3f	; 63
     b42:	f8 94       	cli
     b44:	de bf       	out	0x3e, r29	; 62
     b46:	0f be       	out	0x3f, r0	; 63
     b48:	cd bf       	out	0x3d, r28	; 61
     b4a:	df 91       	pop	r29
     b4c:	cf 91       	pop	r28
     b4e:	08 95       	ret

00000b50 <initTimer>:
#define PORT_REGISTER PORTL
#define PIN_REGISTER PINL

void initTimer(){
	
	TCCR1B |= (1 << CS11); //prescaler 8
     b50:	e1 e8       	ldi	r30, 0x81	; 129
     b52:	f0 e0       	ldi	r31, 0x00	; 0
     b54:	80 81       	ld	r24, Z
     b56:	82 60       	ori	r24, 0x02	; 2
     b58:	80 83       	st	Z, r24
	TCNT1 = 0;
     b5a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     b5e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     b62:	08 95       	ret

00000b64 <ultrasonicSensor>:
}

int ultrasonicSensor() {
     b64:	cf 93       	push	r28
     b66:	df 93       	push	r29
	
	TCNT1 = 0; //Reset value of TCNT1
     b68:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     b6c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
	unsigned long pulseStartTime = 0; //Used to record value of TCNT1 when the pulse starts
	//Values to prevent infinite loops:
	unsigned long numLoops = 0;
	unsigned long maxLoops = 40000;
	
	DDR_REGISTER |= (1 << TRIGGER); //Set TRIGGER pin as output
     b70:	aa e0       	ldi	r26, 0x0A	; 10
     b72:	b1 e0       	ldi	r27, 0x01	; 1
     b74:	8c 91       	ld	r24, X
     b76:	82 60       	ori	r24, 0x02	; 2
     b78:	8c 93       	st	X, r24
	
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low for 2 us to ensure a clean pulse
     b7a:	eb e0       	ldi	r30, 0x0B	; 11
     b7c:	f1 e0       	ldi	r31, 0x01	; 1
     b7e:	80 81       	ld	r24, Z
     b80:	8d 7f       	andi	r24, 0xFD	; 253
     b82:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     b84:	2a e0       	ldi	r18, 0x0A	; 10
     b86:	2a 95       	dec	r18
     b88:	f1 f7       	brne	.-4      	; 0xb86 <ultrasonicSensor+0x22>
     b8a:	00 c0       	rjmp	.+0      	; 0xb8c <ultrasonicSensor+0x28>
	_delay_us(2);
	PORT_REGISTER |= (1 << TRIGGER); //Send pulse for 5 us
     b8c:	80 81       	ld	r24, Z
     b8e:	82 60       	ori	r24, 0x02	; 2
     b90:	80 83       	st	Z, r24
     b92:	8a e1       	ldi	r24, 0x1A	; 26
     b94:	8a 95       	dec	r24
     b96:	f1 f7       	brne	.-4      	; 0xb94 <ultrasonicSensor+0x30>
     b98:	00 c0       	rjmp	.+0      	; 0xb9a <ultrasonicSensor+0x36>
	_delay_us(5);
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low
     b9a:	80 81       	ld	r24, Z
     b9c:	8d 7f       	andi	r24, 0xFD	; 253
     b9e:	80 83       	st	Z, r24
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input
     ba0:	8c 91       	ld	r24, X
     ba2:	8d 7f       	andi	r24, 0xFD	; 253
     ba4:	8c 93       	st	X, r24
	
	TCNT1 = 0; //Reset value of TCNT1
	
	unsigned long pulseStartTime = 0; //Used to record value of TCNT1 when the pulse starts
	//Values to prevent infinite loops:
	unsigned long numLoops = 0;
     ba6:	80 e0       	ldi	r24, 0x00	; 0
     ba8:	90 e0       	ldi	r25, 0x00	; 0
     baa:	dc 01       	movw	r26, r24
	_delay_us(5);
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input

	while (PIN_REGISTER & (1 << ECHO)) { //Wait for any old pulse to end
     bac:	e9 e0       	ldi	r30, 0x09	; 9
     bae:	f1 e0       	ldi	r31, 0x01	; 1
     bb0:	0a c0       	rjmp	.+20     	; 0xbc6 <ultrasonicSensor+0x62>
		if(numLoops++ == maxLoops) {
     bb2:	01 96       	adiw	r24, 0x01	; 1
     bb4:	a1 1d       	adc	r26, r1
     bb6:	b1 1d       	adc	r27, r1
     bb8:	81 34       	cpi	r24, 0x41	; 65
     bba:	2c e9       	ldi	r18, 0x9C	; 156
     bbc:	92 07       	cpc	r25, r18
     bbe:	a1 05       	cpc	r26, r1
     bc0:	b1 05       	cpc	r27, r1
     bc2:	09 f4       	brne	.+2      	; 0xbc6 <ultrasonicSensor+0x62>
     bc4:	45 c0       	rjmp	.+138    	; 0xc50 <ultrasonicSensor+0xec>
	_delay_us(5);
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input

	while (PIN_REGISTER & (1 << ECHO)) { //Wait for any old pulse to end
     bc6:	20 81       	ld	r18, Z
     bc8:	21 fd       	sbrc	r18, 1
     bca:	f3 cf       	rjmp	.-26     	; 0xbb2 <ultrasonicSensor+0x4e>
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	
	while (~PIN_REGISTER & (1 << ECHO)) { //Wait until PING))) returns a pulse
     bcc:	e9 e0       	ldi	r30, 0x09	; 9
     bce:	f1 e0       	ldi	r31, 0x01	; 1
     bd0:	0d c0       	rjmp	.+26     	; 0xbec <ultrasonicSensor+0x88>
		if(numLoops++ == maxLoops) {
     bd2:	ac 01       	movw	r20, r24
     bd4:	bd 01       	movw	r22, r26
     bd6:	4f 5f       	subi	r20, 0xFF	; 255
     bd8:	5f 4f       	sbci	r21, 0xFF	; 255
     bda:	6f 4f       	sbci	r22, 0xFF	; 255
     bdc:	7f 4f       	sbci	r23, 0xFF	; 255
     bde:	80 34       	cpi	r24, 0x40	; 64
     be0:	9c 49       	sbci	r25, 0x9C	; 156
     be2:	a1 05       	cpc	r26, r1
     be4:	b1 05       	cpc	r27, r1
     be6:	b9 f1       	breq	.+110    	; 0xc56 <ultrasonicSensor+0xf2>
     be8:	db 01       	movw	r26, r22
     bea:	ca 01       	movw	r24, r20
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	
	while (~PIN_REGISTER & (1 << ECHO)) { //Wait until PING))) returns a pulse
     bec:	20 81       	ld	r18, Z
     bee:	21 ff       	sbrs	r18, 1
     bf0:	f0 cf       	rjmp	.-32     	; 0xbd2 <ultrasonicSensor+0x6e>
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	
	pulseStartTime = TCNT1; //Set pulseStartTime to current TCNT1 value
     bf2:	c0 91 84 00 	lds	r28, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     bf6:	d0 91 85 00 	lds	r29, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
	
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
     bfa:	e9 e0       	ldi	r30, 0x09	; 9
     bfc:	f1 e0       	ldi	r31, 0x01	; 1
     bfe:	0d c0       	rjmp	.+26     	; 0xc1a <ultrasonicSensor+0xb6>
		if(numLoops++ == maxLoops) {
     c00:	ac 01       	movw	r20, r24
     c02:	bd 01       	movw	r22, r26
     c04:	4f 5f       	subi	r20, 0xFF	; 255
     c06:	5f 4f       	sbci	r21, 0xFF	; 255
     c08:	6f 4f       	sbci	r22, 0xFF	; 255
     c0a:	7f 4f       	sbci	r23, 0xFF	; 255
     c0c:	80 34       	cpi	r24, 0x40	; 64
     c0e:	9c 49       	sbci	r25, 0x9C	; 156
     c10:	a1 05       	cpc	r26, r1
     c12:	b1 05       	cpc	r27, r1
     c14:	19 f1       	breq	.+70     	; 0xc5c <ultrasonicSensor+0xf8>
     c16:	db 01       	movw	r26, r22
     c18:	ca 01       	movw	r24, r20
		}
	}
	
	pulseStartTime = TCNT1; //Set pulseStartTime to current TCNT1 value
	
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
     c1a:	20 81       	ld	r18, Z
     c1c:	21 fd       	sbrc	r18, 1
     c1e:	f0 cf       	rjmp	.-32     	; 0xc00 <ultrasonicSensor+0x9c>
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	return cyclesToMm(TCNT1 - pulseStartTime); //Calculate and return distance in mm
     c20:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     c24:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
}

int cyclesToMm(unsigned long cycles) {
	
	return ((cycles * SPEED_OF_SOUND) / 20000) - CORRECTION;
     c28:	c9 01       	movw	r24, r18
     c2a:	a0 e0       	ldi	r26, 0x00	; 0
     c2c:	b0 e0       	ldi	r27, 0x00	; 0
     c2e:	9c 01       	movw	r18, r24
     c30:	ad 01       	movw	r20, r26
     c32:	2c 1b       	sub	r18, r28
     c34:	3d 0b       	sbc	r19, r29
     c36:	41 09       	sbc	r20, r1
     c38:	51 09       	sbc	r21, r1
     c3a:	a3 eb       	ldi	r26, 0xB3	; 179
     c3c:	b6 e0       	ldi	r27, 0x06	; 6
     c3e:	89 d3       	rcall	.+1810   	; 0x1352 <__muluhisi3>
     c40:	20 e2       	ldi	r18, 0x20	; 32
     c42:	3e e4       	ldi	r19, 0x4E	; 78
     c44:	40 e0       	ldi	r20, 0x00	; 0
     c46:	50 e0       	ldi	r21, 0x00	; 0
     c48:	62 d3       	rcall	.+1732   	; 0x130e <__udivmodsi4>
     c4a:	c9 01       	movw	r24, r18
     c4c:	05 97       	sbiw	r24, 0x05	; 5
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	return cyclesToMm(TCNT1 - pulseStartTime); //Calculate and return distance in mm
     c4e:	08 c0       	rjmp	.+16     	; 0xc60 <ultrasonicSensor+0xfc>
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input

	while (PIN_REGISTER & (1 << ECHO)) { //Wait for any old pulse to end
		if(numLoops++ == maxLoops) {
			return 0;
     c50:	80 e0       	ldi	r24, 0x00	; 0
     c52:	90 e0       	ldi	r25, 0x00	; 0
     c54:	05 c0       	rjmp	.+10     	; 0xc60 <ultrasonicSensor+0xfc>
		}
	}
	
	while (~PIN_REGISTER & (1 << ECHO)) { //Wait until PING))) returns a pulse
		if(numLoops++ == maxLoops) {
			return 0;
     c56:	80 e0       	ldi	r24, 0x00	; 0
     c58:	90 e0       	ldi	r25, 0x00	; 0
     c5a:	02 c0       	rjmp	.+4      	; 0xc60 <ultrasonicSensor+0xfc>
	
	pulseStartTime = TCNT1; //Set pulseStartTime to current TCNT1 value
	
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
		if(numLoops++ == maxLoops) {
			return 0;
     c5c:	80 e0       	ldi	r24, 0x00	; 0
     c5e:	90 e0       	ldi	r25, 0x00	; 0
		}
	}
	return cyclesToMm(TCNT1 - pulseStartTime); //Calculate and return distance in mm
}
     c60:	df 91       	pop	r29
     c62:	cf 91       	pop	r28
     c64:	08 95       	ret

00000c66 <__subsf3>:
     c66:	50 58       	subi	r21, 0x80	; 128

00000c68 <__addsf3>:
     c68:	bb 27       	eor	r27, r27
     c6a:	aa 27       	eor	r26, r26
     c6c:	0e d0       	rcall	.+28     	; 0xc8a <__addsf3x>
     c6e:	e5 c0       	rjmp	.+458    	; 0xe3a <__fp_round>
     c70:	d6 d0       	rcall	.+428    	; 0xe1e <__fp_pscA>
     c72:	30 f0       	brcs	.+12     	; 0xc80 <__addsf3+0x18>
     c74:	db d0       	rcall	.+438    	; 0xe2c <__fp_pscB>
     c76:	20 f0       	brcs	.+8      	; 0xc80 <__addsf3+0x18>
     c78:	31 f4       	brne	.+12     	; 0xc86 <__addsf3+0x1e>
     c7a:	9f 3f       	cpi	r25, 0xFF	; 255
     c7c:	11 f4       	brne	.+4      	; 0xc82 <__addsf3+0x1a>
     c7e:	1e f4       	brtc	.+6      	; 0xc86 <__addsf3+0x1e>
     c80:	cb c0       	rjmp	.+406    	; 0xe18 <__fp_nan>
     c82:	0e f4       	brtc	.+2      	; 0xc86 <__addsf3+0x1e>
     c84:	e0 95       	com	r30
     c86:	e7 fb       	bst	r30, 7
     c88:	c1 c0       	rjmp	.+386    	; 0xe0c <__fp_inf>

00000c8a <__addsf3x>:
     c8a:	e9 2f       	mov	r30, r25
     c8c:	e7 d0       	rcall	.+462    	; 0xe5c <__fp_split3>
     c8e:	80 f3       	brcs	.-32     	; 0xc70 <__addsf3+0x8>
     c90:	ba 17       	cp	r27, r26
     c92:	62 07       	cpc	r22, r18
     c94:	73 07       	cpc	r23, r19
     c96:	84 07       	cpc	r24, r20
     c98:	95 07       	cpc	r25, r21
     c9a:	18 f0       	brcs	.+6      	; 0xca2 <__addsf3x+0x18>
     c9c:	71 f4       	brne	.+28     	; 0xcba <__addsf3x+0x30>
     c9e:	9e f5       	brtc	.+102    	; 0xd06 <__addsf3x+0x7c>
     ca0:	ff c0       	rjmp	.+510    	; 0xea0 <__fp_zero>
     ca2:	0e f4       	brtc	.+2      	; 0xca6 <__addsf3x+0x1c>
     ca4:	e0 95       	com	r30
     ca6:	0b 2e       	mov	r0, r27
     ca8:	ba 2f       	mov	r27, r26
     caa:	a0 2d       	mov	r26, r0
     cac:	0b 01       	movw	r0, r22
     cae:	b9 01       	movw	r22, r18
     cb0:	90 01       	movw	r18, r0
     cb2:	0c 01       	movw	r0, r24
     cb4:	ca 01       	movw	r24, r20
     cb6:	a0 01       	movw	r20, r0
     cb8:	11 24       	eor	r1, r1
     cba:	ff 27       	eor	r31, r31
     cbc:	59 1b       	sub	r21, r25
     cbe:	99 f0       	breq	.+38     	; 0xce6 <__addsf3x+0x5c>
     cc0:	59 3f       	cpi	r21, 0xF9	; 249
     cc2:	50 f4       	brcc	.+20     	; 0xcd8 <__addsf3x+0x4e>
     cc4:	50 3e       	cpi	r21, 0xE0	; 224
     cc6:	68 f1       	brcs	.+90     	; 0xd22 <__addsf3x+0x98>
     cc8:	1a 16       	cp	r1, r26
     cca:	f0 40       	sbci	r31, 0x00	; 0
     ccc:	a2 2f       	mov	r26, r18
     cce:	23 2f       	mov	r18, r19
     cd0:	34 2f       	mov	r19, r20
     cd2:	44 27       	eor	r20, r20
     cd4:	58 5f       	subi	r21, 0xF8	; 248
     cd6:	f3 cf       	rjmp	.-26     	; 0xcbe <__addsf3x+0x34>
     cd8:	46 95       	lsr	r20
     cda:	37 95       	ror	r19
     cdc:	27 95       	ror	r18
     cde:	a7 95       	ror	r26
     ce0:	f0 40       	sbci	r31, 0x00	; 0
     ce2:	53 95       	inc	r21
     ce4:	c9 f7       	brne	.-14     	; 0xcd8 <__addsf3x+0x4e>
     ce6:	7e f4       	brtc	.+30     	; 0xd06 <__addsf3x+0x7c>
     ce8:	1f 16       	cp	r1, r31
     cea:	ba 0b       	sbc	r27, r26
     cec:	62 0b       	sbc	r22, r18
     cee:	73 0b       	sbc	r23, r19
     cf0:	84 0b       	sbc	r24, r20
     cf2:	ba f0       	brmi	.+46     	; 0xd22 <__addsf3x+0x98>
     cf4:	91 50       	subi	r25, 0x01	; 1
     cf6:	a1 f0       	breq	.+40     	; 0xd20 <__addsf3x+0x96>
     cf8:	ff 0f       	add	r31, r31
     cfa:	bb 1f       	adc	r27, r27
     cfc:	66 1f       	adc	r22, r22
     cfe:	77 1f       	adc	r23, r23
     d00:	88 1f       	adc	r24, r24
     d02:	c2 f7       	brpl	.-16     	; 0xcf4 <__addsf3x+0x6a>
     d04:	0e c0       	rjmp	.+28     	; 0xd22 <__addsf3x+0x98>
     d06:	ba 0f       	add	r27, r26
     d08:	62 1f       	adc	r22, r18
     d0a:	73 1f       	adc	r23, r19
     d0c:	84 1f       	adc	r24, r20
     d0e:	48 f4       	brcc	.+18     	; 0xd22 <__addsf3x+0x98>
     d10:	87 95       	ror	r24
     d12:	77 95       	ror	r23
     d14:	67 95       	ror	r22
     d16:	b7 95       	ror	r27
     d18:	f7 95       	ror	r31
     d1a:	9e 3f       	cpi	r25, 0xFE	; 254
     d1c:	08 f0       	brcs	.+2      	; 0xd20 <__addsf3x+0x96>
     d1e:	b3 cf       	rjmp	.-154    	; 0xc86 <__addsf3+0x1e>
     d20:	93 95       	inc	r25
     d22:	88 0f       	add	r24, r24
     d24:	08 f0       	brcs	.+2      	; 0xd28 <__addsf3x+0x9e>
     d26:	99 27       	eor	r25, r25
     d28:	ee 0f       	add	r30, r30
     d2a:	97 95       	ror	r25
     d2c:	87 95       	ror	r24
     d2e:	08 95       	ret

00000d30 <__fixsfsi>:
     d30:	04 d0       	rcall	.+8      	; 0xd3a <__fixunssfsi>
     d32:	68 94       	set
     d34:	b1 11       	cpse	r27, r1
     d36:	b5 c0       	rjmp	.+362    	; 0xea2 <__fp_szero>
     d38:	08 95       	ret

00000d3a <__fixunssfsi>:
     d3a:	98 d0       	rcall	.+304    	; 0xe6c <__fp_splitA>
     d3c:	88 f0       	brcs	.+34     	; 0xd60 <__fixunssfsi+0x26>
     d3e:	9f 57       	subi	r25, 0x7F	; 127
     d40:	90 f0       	brcs	.+36     	; 0xd66 <__fixunssfsi+0x2c>
     d42:	b9 2f       	mov	r27, r25
     d44:	99 27       	eor	r25, r25
     d46:	b7 51       	subi	r27, 0x17	; 23
     d48:	a0 f0       	brcs	.+40     	; 0xd72 <__fixunssfsi+0x38>
     d4a:	d1 f0       	breq	.+52     	; 0xd80 <__fixunssfsi+0x46>
     d4c:	66 0f       	add	r22, r22
     d4e:	77 1f       	adc	r23, r23
     d50:	88 1f       	adc	r24, r24
     d52:	99 1f       	adc	r25, r25
     d54:	1a f0       	brmi	.+6      	; 0xd5c <__fixunssfsi+0x22>
     d56:	ba 95       	dec	r27
     d58:	c9 f7       	brne	.-14     	; 0xd4c <__fixunssfsi+0x12>
     d5a:	12 c0       	rjmp	.+36     	; 0xd80 <__fixunssfsi+0x46>
     d5c:	b1 30       	cpi	r27, 0x01	; 1
     d5e:	81 f0       	breq	.+32     	; 0xd80 <__fixunssfsi+0x46>
     d60:	9f d0       	rcall	.+318    	; 0xea0 <__fp_zero>
     d62:	b1 e0       	ldi	r27, 0x01	; 1
     d64:	08 95       	ret
     d66:	9c c0       	rjmp	.+312    	; 0xea0 <__fp_zero>
     d68:	67 2f       	mov	r22, r23
     d6a:	78 2f       	mov	r23, r24
     d6c:	88 27       	eor	r24, r24
     d6e:	b8 5f       	subi	r27, 0xF8	; 248
     d70:	39 f0       	breq	.+14     	; 0xd80 <__fixunssfsi+0x46>
     d72:	b9 3f       	cpi	r27, 0xF9	; 249
     d74:	cc f3       	brlt	.-14     	; 0xd68 <__fixunssfsi+0x2e>
     d76:	86 95       	lsr	r24
     d78:	77 95       	ror	r23
     d7a:	67 95       	ror	r22
     d7c:	b3 95       	inc	r27
     d7e:	d9 f7       	brne	.-10     	; 0xd76 <__fixunssfsi+0x3c>
     d80:	3e f4       	brtc	.+14     	; 0xd90 <__fixunssfsi+0x56>
     d82:	90 95       	com	r25
     d84:	80 95       	com	r24
     d86:	70 95       	com	r23
     d88:	61 95       	neg	r22
     d8a:	7f 4f       	sbci	r23, 0xFF	; 255
     d8c:	8f 4f       	sbci	r24, 0xFF	; 255
     d8e:	9f 4f       	sbci	r25, 0xFF	; 255
     d90:	08 95       	ret

00000d92 <__floatunsisf>:
     d92:	e8 94       	clt
     d94:	09 c0       	rjmp	.+18     	; 0xda8 <__floatsisf+0x12>

00000d96 <__floatsisf>:
     d96:	97 fb       	bst	r25, 7
     d98:	3e f4       	brtc	.+14     	; 0xda8 <__floatsisf+0x12>
     d9a:	90 95       	com	r25
     d9c:	80 95       	com	r24
     d9e:	70 95       	com	r23
     da0:	61 95       	neg	r22
     da2:	7f 4f       	sbci	r23, 0xFF	; 255
     da4:	8f 4f       	sbci	r24, 0xFF	; 255
     da6:	9f 4f       	sbci	r25, 0xFF	; 255
     da8:	99 23       	and	r25, r25
     daa:	a9 f0       	breq	.+42     	; 0xdd6 <__floatsisf+0x40>
     dac:	f9 2f       	mov	r31, r25
     dae:	96 e9       	ldi	r25, 0x96	; 150
     db0:	bb 27       	eor	r27, r27
     db2:	93 95       	inc	r25
     db4:	f6 95       	lsr	r31
     db6:	87 95       	ror	r24
     db8:	77 95       	ror	r23
     dba:	67 95       	ror	r22
     dbc:	b7 95       	ror	r27
     dbe:	f1 11       	cpse	r31, r1
     dc0:	f8 cf       	rjmp	.-16     	; 0xdb2 <__floatsisf+0x1c>
     dc2:	fa f4       	brpl	.+62     	; 0xe02 <__floatsisf+0x6c>
     dc4:	bb 0f       	add	r27, r27
     dc6:	11 f4       	brne	.+4      	; 0xdcc <__floatsisf+0x36>
     dc8:	60 ff       	sbrs	r22, 0
     dca:	1b c0       	rjmp	.+54     	; 0xe02 <__floatsisf+0x6c>
     dcc:	6f 5f       	subi	r22, 0xFF	; 255
     dce:	7f 4f       	sbci	r23, 0xFF	; 255
     dd0:	8f 4f       	sbci	r24, 0xFF	; 255
     dd2:	9f 4f       	sbci	r25, 0xFF	; 255
     dd4:	16 c0       	rjmp	.+44     	; 0xe02 <__floatsisf+0x6c>
     dd6:	88 23       	and	r24, r24
     dd8:	11 f0       	breq	.+4      	; 0xdde <__floatsisf+0x48>
     dda:	96 e9       	ldi	r25, 0x96	; 150
     ddc:	11 c0       	rjmp	.+34     	; 0xe00 <__floatsisf+0x6a>
     dde:	77 23       	and	r23, r23
     de0:	21 f0       	breq	.+8      	; 0xdea <__floatsisf+0x54>
     de2:	9e e8       	ldi	r25, 0x8E	; 142
     de4:	87 2f       	mov	r24, r23
     de6:	76 2f       	mov	r23, r22
     de8:	05 c0       	rjmp	.+10     	; 0xdf4 <__floatsisf+0x5e>
     dea:	66 23       	and	r22, r22
     dec:	71 f0       	breq	.+28     	; 0xe0a <__floatsisf+0x74>
     dee:	96 e8       	ldi	r25, 0x86	; 134
     df0:	86 2f       	mov	r24, r22
     df2:	70 e0       	ldi	r23, 0x00	; 0
     df4:	60 e0       	ldi	r22, 0x00	; 0
     df6:	2a f0       	brmi	.+10     	; 0xe02 <__floatsisf+0x6c>
     df8:	9a 95       	dec	r25
     dfa:	66 0f       	add	r22, r22
     dfc:	77 1f       	adc	r23, r23
     dfe:	88 1f       	adc	r24, r24
     e00:	da f7       	brpl	.-10     	; 0xdf8 <__floatsisf+0x62>
     e02:	88 0f       	add	r24, r24
     e04:	96 95       	lsr	r25
     e06:	87 95       	ror	r24
     e08:	97 f9       	bld	r25, 7
     e0a:	08 95       	ret

00000e0c <__fp_inf>:
     e0c:	97 f9       	bld	r25, 7
     e0e:	9f 67       	ori	r25, 0x7F	; 127
     e10:	80 e8       	ldi	r24, 0x80	; 128
     e12:	70 e0       	ldi	r23, 0x00	; 0
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	08 95       	ret

00000e18 <__fp_nan>:
     e18:	9f ef       	ldi	r25, 0xFF	; 255
     e1a:	80 ec       	ldi	r24, 0xC0	; 192
     e1c:	08 95       	ret

00000e1e <__fp_pscA>:
     e1e:	00 24       	eor	r0, r0
     e20:	0a 94       	dec	r0
     e22:	16 16       	cp	r1, r22
     e24:	17 06       	cpc	r1, r23
     e26:	18 06       	cpc	r1, r24
     e28:	09 06       	cpc	r0, r25
     e2a:	08 95       	ret

00000e2c <__fp_pscB>:
     e2c:	00 24       	eor	r0, r0
     e2e:	0a 94       	dec	r0
     e30:	12 16       	cp	r1, r18
     e32:	13 06       	cpc	r1, r19
     e34:	14 06       	cpc	r1, r20
     e36:	05 06       	cpc	r0, r21
     e38:	08 95       	ret

00000e3a <__fp_round>:
     e3a:	09 2e       	mov	r0, r25
     e3c:	03 94       	inc	r0
     e3e:	00 0c       	add	r0, r0
     e40:	11 f4       	brne	.+4      	; 0xe46 <__fp_round+0xc>
     e42:	88 23       	and	r24, r24
     e44:	52 f0       	brmi	.+20     	; 0xe5a <__fp_round+0x20>
     e46:	bb 0f       	add	r27, r27
     e48:	40 f4       	brcc	.+16     	; 0xe5a <__fp_round+0x20>
     e4a:	bf 2b       	or	r27, r31
     e4c:	11 f4       	brne	.+4      	; 0xe52 <__fp_round+0x18>
     e4e:	60 ff       	sbrs	r22, 0
     e50:	04 c0       	rjmp	.+8      	; 0xe5a <__fp_round+0x20>
     e52:	6f 5f       	subi	r22, 0xFF	; 255
     e54:	7f 4f       	sbci	r23, 0xFF	; 255
     e56:	8f 4f       	sbci	r24, 0xFF	; 255
     e58:	9f 4f       	sbci	r25, 0xFF	; 255
     e5a:	08 95       	ret

00000e5c <__fp_split3>:
     e5c:	57 fd       	sbrc	r21, 7
     e5e:	90 58       	subi	r25, 0x80	; 128
     e60:	44 0f       	add	r20, r20
     e62:	55 1f       	adc	r21, r21
     e64:	59 f0       	breq	.+22     	; 0xe7c <__fp_splitA+0x10>
     e66:	5f 3f       	cpi	r21, 0xFF	; 255
     e68:	71 f0       	breq	.+28     	; 0xe86 <__fp_splitA+0x1a>
     e6a:	47 95       	ror	r20

00000e6c <__fp_splitA>:
     e6c:	88 0f       	add	r24, r24
     e6e:	97 fb       	bst	r25, 7
     e70:	99 1f       	adc	r25, r25
     e72:	61 f0       	breq	.+24     	; 0xe8c <__fp_splitA+0x20>
     e74:	9f 3f       	cpi	r25, 0xFF	; 255
     e76:	79 f0       	breq	.+30     	; 0xe96 <__fp_splitA+0x2a>
     e78:	87 95       	ror	r24
     e7a:	08 95       	ret
     e7c:	12 16       	cp	r1, r18
     e7e:	13 06       	cpc	r1, r19
     e80:	14 06       	cpc	r1, r20
     e82:	55 1f       	adc	r21, r21
     e84:	f2 cf       	rjmp	.-28     	; 0xe6a <__fp_split3+0xe>
     e86:	46 95       	lsr	r20
     e88:	f1 df       	rcall	.-30     	; 0xe6c <__fp_splitA>
     e8a:	08 c0       	rjmp	.+16     	; 0xe9c <__fp_splitA+0x30>
     e8c:	16 16       	cp	r1, r22
     e8e:	17 06       	cpc	r1, r23
     e90:	18 06       	cpc	r1, r24
     e92:	99 1f       	adc	r25, r25
     e94:	f1 cf       	rjmp	.-30     	; 0xe78 <__fp_splitA+0xc>
     e96:	86 95       	lsr	r24
     e98:	71 05       	cpc	r23, r1
     e9a:	61 05       	cpc	r22, r1
     e9c:	08 94       	sec
     e9e:	08 95       	ret

00000ea0 <__fp_zero>:
     ea0:	e8 94       	clt

00000ea2 <__fp_szero>:
     ea2:	bb 27       	eor	r27, r27
     ea4:	66 27       	eor	r22, r22
     ea6:	77 27       	eor	r23, r23
     ea8:	cb 01       	movw	r24, r22
     eaa:	97 f9       	bld	r25, 7
     eac:	08 95       	ret

00000eae <pow>:
     eae:	fa 01       	movw	r30, r20
     eb0:	ee 0f       	add	r30, r30
     eb2:	ff 1f       	adc	r31, r31
     eb4:	30 96       	adiw	r30, 0x00	; 0
     eb6:	21 05       	cpc	r18, r1
     eb8:	31 05       	cpc	r19, r1
     eba:	99 f1       	breq	.+102    	; 0xf22 <pow+0x74>
     ebc:	61 15       	cp	r22, r1
     ebe:	71 05       	cpc	r23, r1
     ec0:	61 f4       	brne	.+24     	; 0xeda <pow+0x2c>
     ec2:	80 38       	cpi	r24, 0x80	; 128
     ec4:	bf e3       	ldi	r27, 0x3F	; 63
     ec6:	9b 07       	cpc	r25, r27
     ec8:	49 f1       	breq	.+82     	; 0xf1c <pow+0x6e>
     eca:	68 94       	set
     ecc:	90 38       	cpi	r25, 0x80	; 128
     ece:	81 05       	cpc	r24, r1
     ed0:	61 f0       	breq	.+24     	; 0xeea <pow+0x3c>
     ed2:	80 38       	cpi	r24, 0x80	; 128
     ed4:	bf ef       	ldi	r27, 0xFF	; 255
     ed6:	9b 07       	cpc	r25, r27
     ed8:	41 f0       	breq	.+16     	; 0xeea <pow+0x3c>
     eda:	99 23       	and	r25, r25
     edc:	42 f5       	brpl	.+80     	; 0xf2e <pow+0x80>
     ede:	ff 3f       	cpi	r31, 0xFF	; 255
     ee0:	e1 05       	cpc	r30, r1
     ee2:	31 05       	cpc	r19, r1
     ee4:	21 05       	cpc	r18, r1
     ee6:	11 f1       	breq	.+68     	; 0xf2c <pow+0x7e>
     ee8:	e8 94       	clt
     eea:	08 94       	sec
     eec:	e7 95       	ror	r30
     eee:	d9 01       	movw	r26, r18
     ef0:	aa 23       	and	r26, r26
     ef2:	29 f4       	brne	.+10     	; 0xefe <pow+0x50>
     ef4:	ab 2f       	mov	r26, r27
     ef6:	be 2f       	mov	r27, r30
     ef8:	f8 5f       	subi	r31, 0xF8	; 248
     efa:	d0 f3       	brcs	.-12     	; 0xef0 <pow+0x42>
     efc:	10 c0       	rjmp	.+32     	; 0xf1e <pow+0x70>
     efe:	ff 5f       	subi	r31, 0xFF	; 255
     f00:	70 f4       	brcc	.+28     	; 0xf1e <pow+0x70>
     f02:	a6 95       	lsr	r26
     f04:	e0 f7       	brcc	.-8      	; 0xefe <pow+0x50>
     f06:	f7 39       	cpi	r31, 0x97	; 151
     f08:	50 f0       	brcs	.+20     	; 0xf1e <pow+0x70>
     f0a:	19 f0       	breq	.+6      	; 0xf12 <pow+0x64>
     f0c:	ff 3a       	cpi	r31, 0xAF	; 175
     f0e:	38 f4       	brcc	.+14     	; 0xf1e <pow+0x70>
     f10:	9f 77       	andi	r25, 0x7F	; 127
     f12:	9f 93       	push	r25
     f14:	0c d0       	rcall	.+24     	; 0xf2e <pow+0x80>
     f16:	0f 90       	pop	r0
     f18:	07 fc       	sbrc	r0, 7
     f1a:	90 58       	subi	r25, 0x80	; 128
     f1c:	08 95       	ret
     f1e:	3e f0       	brts	.+14     	; 0xf2e <pow+0x80>
     f20:	7b cf       	rjmp	.-266    	; 0xe18 <__fp_nan>
     f22:	60 e0       	ldi	r22, 0x00	; 0
     f24:	70 e0       	ldi	r23, 0x00	; 0
     f26:	80 e8       	ldi	r24, 0x80	; 128
     f28:	9f e3       	ldi	r25, 0x3F	; 63
     f2a:	08 95       	ret
     f2c:	4f e7       	ldi	r20, 0x7F	; 127
     f2e:	9f 77       	andi	r25, 0x7F	; 127
     f30:	5f 93       	push	r21
     f32:	4f 93       	push	r20
     f34:	3f 93       	push	r19
     f36:	2f 93       	push	r18
     f38:	9e d0       	rcall	.+316    	; 0x1076 <log>
     f3a:	2f 91       	pop	r18
     f3c:	3f 91       	pop	r19
     f3e:	4f 91       	pop	r20
     f40:	5f 91       	pop	r21
     f42:	0c d1       	rcall	.+536    	; 0x115c <__mulsf3>
     f44:	05 c0       	rjmp	.+10     	; 0xf50 <exp>
     f46:	19 f4       	brne	.+6      	; 0xf4e <pow+0xa0>
     f48:	0e f0       	brts	.+2      	; 0xf4c <pow+0x9e>
     f4a:	60 cf       	rjmp	.-320    	; 0xe0c <__fp_inf>
     f4c:	a9 cf       	rjmp	.-174    	; 0xea0 <__fp_zero>
     f4e:	64 cf       	rjmp	.-312    	; 0xe18 <__fp_nan>

00000f50 <exp>:
     f50:	8d df       	rcall	.-230    	; 0xe6c <__fp_splitA>
     f52:	c8 f3       	brcs	.-14     	; 0xf46 <pow+0x98>
     f54:	96 38       	cpi	r25, 0x86	; 134
     f56:	c0 f7       	brcc	.-16     	; 0xf48 <pow+0x9a>
     f58:	07 f8       	bld	r0, 7
     f5a:	0f 92       	push	r0
     f5c:	e8 94       	clt
     f5e:	2b e3       	ldi	r18, 0x3B	; 59
     f60:	3a ea       	ldi	r19, 0xAA	; 170
     f62:	48 eb       	ldi	r20, 0xB8	; 184
     f64:	5f e7       	ldi	r21, 0x7F	; 127
     f66:	08 d1       	rcall	.+528    	; 0x1178 <__mulsf3_pse>
     f68:	0f 92       	push	r0
     f6a:	0f 92       	push	r0
     f6c:	0f 92       	push	r0
     f6e:	4d b7       	in	r20, 0x3d	; 61
     f70:	5e b7       	in	r21, 0x3e	; 62
     f72:	0f 92       	push	r0
     f74:	c0 d0       	rcall	.+384    	; 0x10f6 <modf>
     f76:	e4 ee       	ldi	r30, 0xE4	; 228
     f78:	f0 e0       	ldi	r31, 0x00	; 0
     f7a:	16 d0       	rcall	.+44     	; 0xfa8 <__fp_powser>
     f7c:	4f 91       	pop	r20
     f7e:	5f 91       	pop	r21
     f80:	ef 91       	pop	r30
     f82:	ff 91       	pop	r31
     f84:	e5 95       	asr	r30
     f86:	ee 1f       	adc	r30, r30
     f88:	ff 1f       	adc	r31, r31
     f8a:	49 f0       	breq	.+18     	; 0xf9e <exp+0x4e>
     f8c:	fe 57       	subi	r31, 0x7E	; 126
     f8e:	e0 68       	ori	r30, 0x80	; 128
     f90:	44 27       	eor	r20, r20
     f92:	ee 0f       	add	r30, r30
     f94:	44 1f       	adc	r20, r20
     f96:	fa 95       	dec	r31
     f98:	e1 f7       	brne	.-8      	; 0xf92 <exp+0x42>
     f9a:	41 95       	neg	r20
     f9c:	55 0b       	sbc	r21, r21
     f9e:	32 d0       	rcall	.+100    	; 0x1004 <ldexp>
     fa0:	0f 90       	pop	r0
     fa2:	07 fe       	sbrs	r0, 7
     fa4:	26 c0       	rjmp	.+76     	; 0xff2 <inverse>
     fa6:	08 95       	ret

00000fa8 <__fp_powser>:
     fa8:	df 93       	push	r29
     faa:	cf 93       	push	r28
     fac:	1f 93       	push	r17
     fae:	0f 93       	push	r16
     fb0:	ff 92       	push	r15
     fb2:	ef 92       	push	r14
     fb4:	df 92       	push	r13
     fb6:	7b 01       	movw	r14, r22
     fb8:	8c 01       	movw	r16, r24
     fba:	68 94       	set
     fbc:	05 c0       	rjmp	.+10     	; 0xfc8 <__fp_powser+0x20>
     fbe:	da 2e       	mov	r13, r26
     fc0:	ef 01       	movw	r28, r30
     fc2:	d8 d0       	rcall	.+432    	; 0x1174 <__mulsf3x>
     fc4:	fe 01       	movw	r30, r28
     fc6:	e8 94       	clt
     fc8:	a5 91       	lpm	r26, Z+
     fca:	25 91       	lpm	r18, Z+
     fcc:	35 91       	lpm	r19, Z+
     fce:	45 91       	lpm	r20, Z+
     fd0:	55 91       	lpm	r21, Z+
     fd2:	ae f3       	brts	.-22     	; 0xfbe <__fp_powser+0x16>
     fd4:	ef 01       	movw	r28, r30
     fd6:	59 de       	rcall	.-846    	; 0xc8a <__addsf3x>
     fd8:	fe 01       	movw	r30, r28
     fda:	97 01       	movw	r18, r14
     fdc:	a8 01       	movw	r20, r16
     fde:	da 94       	dec	r13
     fe0:	79 f7       	brne	.-34     	; 0xfc0 <__fp_powser+0x18>
     fe2:	df 90       	pop	r13
     fe4:	ef 90       	pop	r14
     fe6:	ff 90       	pop	r15
     fe8:	0f 91       	pop	r16
     fea:	1f 91       	pop	r17
     fec:	cf 91       	pop	r28
     fee:	df 91       	pop	r29
     ff0:	08 95       	ret

00000ff2 <inverse>:
     ff2:	9b 01       	movw	r18, r22
     ff4:	ac 01       	movw	r20, r24
     ff6:	60 e0       	ldi	r22, 0x00	; 0
     ff8:	70 e0       	ldi	r23, 0x00	; 0
     ffa:	80 e8       	ldi	r24, 0x80	; 128
     ffc:	9f e3       	ldi	r25, 0x3F	; 63
     ffe:	11 c1       	rjmp	.+546    	; 0x1222 <__divsf3>
    1000:	05 cf       	rjmp	.-502    	; 0xe0c <__fp_inf>
    1002:	77 c1       	rjmp	.+750    	; 0x12f2 <__fp_mpack>

00001004 <ldexp>:
    1004:	33 df       	rcall	.-410    	; 0xe6c <__fp_splitA>
    1006:	e8 f3       	brcs	.-6      	; 0x1002 <inverse+0x10>
    1008:	99 23       	and	r25, r25
    100a:	d9 f3       	breq	.-10     	; 0x1002 <inverse+0x10>
    100c:	94 0f       	add	r25, r20
    100e:	51 1d       	adc	r21, r1
    1010:	bb f3       	brvs	.-18     	; 0x1000 <inverse+0xe>
    1012:	91 50       	subi	r25, 0x01	; 1
    1014:	50 40       	sbci	r21, 0x00	; 0
    1016:	94 f0       	brlt	.+36     	; 0x103c <ldexp+0x38>
    1018:	59 f0       	breq	.+22     	; 0x1030 <ldexp+0x2c>
    101a:	88 23       	and	r24, r24
    101c:	32 f0       	brmi	.+12     	; 0x102a <ldexp+0x26>
    101e:	66 0f       	add	r22, r22
    1020:	77 1f       	adc	r23, r23
    1022:	88 1f       	adc	r24, r24
    1024:	91 50       	subi	r25, 0x01	; 1
    1026:	50 40       	sbci	r21, 0x00	; 0
    1028:	c1 f7       	brne	.-16     	; 0x101a <ldexp+0x16>
    102a:	9e 3f       	cpi	r25, 0xFE	; 254
    102c:	51 05       	cpc	r21, r1
    102e:	44 f7       	brge	.-48     	; 0x1000 <inverse+0xe>
    1030:	88 0f       	add	r24, r24
    1032:	91 1d       	adc	r25, r1
    1034:	96 95       	lsr	r25
    1036:	87 95       	ror	r24
    1038:	97 f9       	bld	r25, 7
    103a:	08 95       	ret
    103c:	5f 3f       	cpi	r21, 0xFF	; 255
    103e:	ac f0       	brlt	.+42     	; 0x106a <ldexp+0x66>
    1040:	98 3e       	cpi	r25, 0xE8	; 232
    1042:	9c f0       	brlt	.+38     	; 0x106a <ldexp+0x66>
    1044:	bb 27       	eor	r27, r27
    1046:	86 95       	lsr	r24
    1048:	77 95       	ror	r23
    104a:	67 95       	ror	r22
    104c:	b7 95       	ror	r27
    104e:	08 f4       	brcc	.+2      	; 0x1052 <ldexp+0x4e>
    1050:	b1 60       	ori	r27, 0x01	; 1
    1052:	93 95       	inc	r25
    1054:	c1 f7       	brne	.-16     	; 0x1046 <ldexp+0x42>
    1056:	bb 0f       	add	r27, r27
    1058:	58 f7       	brcc	.-42     	; 0x1030 <ldexp+0x2c>
    105a:	11 f4       	brne	.+4      	; 0x1060 <ldexp+0x5c>
    105c:	60 ff       	sbrs	r22, 0
    105e:	e8 cf       	rjmp	.-48     	; 0x1030 <ldexp+0x2c>
    1060:	6f 5f       	subi	r22, 0xFF	; 255
    1062:	7f 4f       	sbci	r23, 0xFF	; 255
    1064:	8f 4f       	sbci	r24, 0xFF	; 255
    1066:	9f 4f       	sbci	r25, 0xFF	; 255
    1068:	e3 cf       	rjmp	.-58     	; 0x1030 <ldexp+0x2c>
    106a:	1b cf       	rjmp	.-458    	; 0xea2 <__fp_szero>
    106c:	0e f0       	brts	.+2      	; 0x1070 <ldexp+0x6c>
    106e:	41 c1       	rjmp	.+642    	; 0x12f2 <__fp_mpack>
    1070:	d3 ce       	rjmp	.-602    	; 0xe18 <__fp_nan>
    1072:	68 94       	set
    1074:	cb ce       	rjmp	.-618    	; 0xe0c <__fp_inf>

00001076 <log>:
    1076:	fa de       	rcall	.-524    	; 0xe6c <__fp_splitA>
    1078:	c8 f3       	brcs	.-14     	; 0x106c <ldexp+0x68>
    107a:	99 23       	and	r25, r25
    107c:	d1 f3       	breq	.-12     	; 0x1072 <ldexp+0x6e>
    107e:	c6 f3       	brts	.-16     	; 0x1070 <ldexp+0x6c>
    1080:	df 93       	push	r29
    1082:	cf 93       	push	r28
    1084:	1f 93       	push	r17
    1086:	0f 93       	push	r16
    1088:	ff 92       	push	r15
    108a:	c9 2f       	mov	r28, r25
    108c:	dd 27       	eor	r29, r29
    108e:	88 23       	and	r24, r24
    1090:	2a f0       	brmi	.+10     	; 0x109c <log+0x26>
    1092:	21 97       	sbiw	r28, 0x01	; 1
    1094:	66 0f       	add	r22, r22
    1096:	77 1f       	adc	r23, r23
    1098:	88 1f       	adc	r24, r24
    109a:	da f7       	brpl	.-10     	; 0x1092 <log+0x1c>
    109c:	20 e0       	ldi	r18, 0x00	; 0
    109e:	30 e0       	ldi	r19, 0x00	; 0
    10a0:	40 e8       	ldi	r20, 0x80	; 128
    10a2:	5f eb       	ldi	r21, 0xBF	; 191
    10a4:	9f e3       	ldi	r25, 0x3F	; 63
    10a6:	88 39       	cpi	r24, 0x98	; 152
    10a8:	20 f0       	brcs	.+8      	; 0x10b2 <log+0x3c>
    10aa:	80 3e       	cpi	r24, 0xE0	; 224
    10ac:	30 f0       	brcs	.+12     	; 0x10ba <log+0x44>
    10ae:	21 96       	adiw	r28, 0x01	; 1
    10b0:	8f 77       	andi	r24, 0x7F	; 127
    10b2:	da dd       	rcall	.-1100   	; 0xc68 <__addsf3>
    10b4:	ec e0       	ldi	r30, 0x0C	; 12
    10b6:	f1 e0       	ldi	r31, 0x01	; 1
    10b8:	03 c0       	rjmp	.+6      	; 0x10c0 <log+0x4a>
    10ba:	d6 dd       	rcall	.-1108   	; 0xc68 <__addsf3>
    10bc:	e9 e3       	ldi	r30, 0x39	; 57
    10be:	f1 e0       	ldi	r31, 0x01	; 1
    10c0:	73 df       	rcall	.-282    	; 0xfa8 <__fp_powser>
    10c2:	8b 01       	movw	r16, r22
    10c4:	be 01       	movw	r22, r28
    10c6:	ec 01       	movw	r28, r24
    10c8:	fb 2e       	mov	r15, r27
    10ca:	6f 57       	subi	r22, 0x7F	; 127
    10cc:	71 09       	sbc	r23, r1
    10ce:	75 95       	asr	r23
    10d0:	77 1f       	adc	r23, r23
    10d2:	88 0b       	sbc	r24, r24
    10d4:	99 0b       	sbc	r25, r25
    10d6:	5f de       	rcall	.-834    	; 0xd96 <__floatsisf>
    10d8:	28 e1       	ldi	r18, 0x18	; 24
    10da:	32 e7       	ldi	r19, 0x72	; 114
    10dc:	41 e3       	ldi	r20, 0x31	; 49
    10de:	5f e3       	ldi	r21, 0x3F	; 63
    10e0:	49 d0       	rcall	.+146    	; 0x1174 <__mulsf3x>
    10e2:	af 2d       	mov	r26, r15
    10e4:	98 01       	movw	r18, r16
    10e6:	ae 01       	movw	r20, r28
    10e8:	ff 90       	pop	r15
    10ea:	0f 91       	pop	r16
    10ec:	1f 91       	pop	r17
    10ee:	cf 91       	pop	r28
    10f0:	df 91       	pop	r29
    10f2:	cb dd       	rcall	.-1130   	; 0xc8a <__addsf3x>
    10f4:	a2 ce       	rjmp	.-700    	; 0xe3a <__fp_round>

000010f6 <modf>:
    10f6:	fa 01       	movw	r30, r20
    10f8:	dc 01       	movw	r26, r24
    10fa:	aa 0f       	add	r26, r26
    10fc:	bb 1f       	adc	r27, r27
    10fe:	9b 01       	movw	r18, r22
    1100:	ac 01       	movw	r20, r24
    1102:	bf 57       	subi	r27, 0x7F	; 127
    1104:	28 f4       	brcc	.+10     	; 0x1110 <modf+0x1a>
    1106:	22 27       	eor	r18, r18
    1108:	33 27       	eor	r19, r19
    110a:	44 27       	eor	r20, r20
    110c:	50 78       	andi	r21, 0x80	; 128
    110e:	1f c0       	rjmp	.+62     	; 0x114e <modf+0x58>
    1110:	b7 51       	subi	r27, 0x17	; 23
    1112:	88 f4       	brcc	.+34     	; 0x1136 <modf+0x40>
    1114:	ab 2f       	mov	r26, r27
    1116:	00 24       	eor	r0, r0
    1118:	46 95       	lsr	r20
    111a:	37 95       	ror	r19
    111c:	27 95       	ror	r18
    111e:	01 1c       	adc	r0, r1
    1120:	a3 95       	inc	r26
    1122:	d2 f3       	brmi	.-12     	; 0x1118 <modf+0x22>
    1124:	00 20       	and	r0, r0
    1126:	69 f0       	breq	.+26     	; 0x1142 <modf+0x4c>
    1128:	22 0f       	add	r18, r18
    112a:	33 1f       	adc	r19, r19
    112c:	44 1f       	adc	r20, r20
    112e:	b3 95       	inc	r27
    1130:	da f3       	brmi	.-10     	; 0x1128 <modf+0x32>
    1132:	0d d0       	rcall	.+26     	; 0x114e <modf+0x58>
    1134:	98 cd       	rjmp	.-1232   	; 0xc66 <__subsf3>
    1136:	61 30       	cpi	r22, 0x01	; 1
    1138:	71 05       	cpc	r23, r1
    113a:	a0 e8       	ldi	r26, 0x80	; 128
    113c:	8a 07       	cpc	r24, r26
    113e:	b9 46       	sbci	r27, 0x69	; 105
    1140:	30 f4       	brcc	.+12     	; 0x114e <modf+0x58>
    1142:	9b 01       	movw	r18, r22
    1144:	ac 01       	movw	r20, r24
    1146:	66 27       	eor	r22, r22
    1148:	77 27       	eor	r23, r23
    114a:	88 27       	eor	r24, r24
    114c:	90 78       	andi	r25, 0x80	; 128
    114e:	30 96       	adiw	r30, 0x00	; 0
    1150:	21 f0       	breq	.+8      	; 0x115a <modf+0x64>
    1152:	20 83       	st	Z, r18
    1154:	31 83       	std	Z+1, r19	; 0x01
    1156:	42 83       	std	Z+2, r20	; 0x02
    1158:	53 83       	std	Z+3, r21	; 0x03
    115a:	08 95       	ret

0000115c <__mulsf3>:
    115c:	0b d0       	rcall	.+22     	; 0x1174 <__mulsf3x>
    115e:	6d ce       	rjmp	.-806    	; 0xe3a <__fp_round>
    1160:	5e de       	rcall	.-836    	; 0xe1e <__fp_pscA>
    1162:	28 f0       	brcs	.+10     	; 0x116e <__mulsf3+0x12>
    1164:	63 de       	rcall	.-826    	; 0xe2c <__fp_pscB>
    1166:	18 f0       	brcs	.+6      	; 0x116e <__mulsf3+0x12>
    1168:	95 23       	and	r25, r21
    116a:	09 f0       	breq	.+2      	; 0x116e <__mulsf3+0x12>
    116c:	4f ce       	rjmp	.-866    	; 0xe0c <__fp_inf>
    116e:	54 ce       	rjmp	.-856    	; 0xe18 <__fp_nan>
    1170:	11 24       	eor	r1, r1
    1172:	97 ce       	rjmp	.-722    	; 0xea2 <__fp_szero>

00001174 <__mulsf3x>:
    1174:	73 de       	rcall	.-794    	; 0xe5c <__fp_split3>
    1176:	a0 f3       	brcs	.-24     	; 0x1160 <__mulsf3+0x4>

00001178 <__mulsf3_pse>:
    1178:	95 9f       	mul	r25, r21
    117a:	d1 f3       	breq	.-12     	; 0x1170 <__mulsf3+0x14>
    117c:	95 0f       	add	r25, r21
    117e:	50 e0       	ldi	r21, 0x00	; 0
    1180:	55 1f       	adc	r21, r21
    1182:	62 9f       	mul	r22, r18
    1184:	f0 01       	movw	r30, r0
    1186:	72 9f       	mul	r23, r18
    1188:	bb 27       	eor	r27, r27
    118a:	f0 0d       	add	r31, r0
    118c:	b1 1d       	adc	r27, r1
    118e:	63 9f       	mul	r22, r19
    1190:	aa 27       	eor	r26, r26
    1192:	f0 0d       	add	r31, r0
    1194:	b1 1d       	adc	r27, r1
    1196:	aa 1f       	adc	r26, r26
    1198:	64 9f       	mul	r22, r20
    119a:	66 27       	eor	r22, r22
    119c:	b0 0d       	add	r27, r0
    119e:	a1 1d       	adc	r26, r1
    11a0:	66 1f       	adc	r22, r22
    11a2:	82 9f       	mul	r24, r18
    11a4:	22 27       	eor	r18, r18
    11a6:	b0 0d       	add	r27, r0
    11a8:	a1 1d       	adc	r26, r1
    11aa:	62 1f       	adc	r22, r18
    11ac:	73 9f       	mul	r23, r19
    11ae:	b0 0d       	add	r27, r0
    11b0:	a1 1d       	adc	r26, r1
    11b2:	62 1f       	adc	r22, r18
    11b4:	83 9f       	mul	r24, r19
    11b6:	a0 0d       	add	r26, r0
    11b8:	61 1d       	adc	r22, r1
    11ba:	22 1f       	adc	r18, r18
    11bc:	74 9f       	mul	r23, r20
    11be:	33 27       	eor	r19, r19
    11c0:	a0 0d       	add	r26, r0
    11c2:	61 1d       	adc	r22, r1
    11c4:	23 1f       	adc	r18, r19
    11c6:	84 9f       	mul	r24, r20
    11c8:	60 0d       	add	r22, r0
    11ca:	21 1d       	adc	r18, r1
    11cc:	82 2f       	mov	r24, r18
    11ce:	76 2f       	mov	r23, r22
    11d0:	6a 2f       	mov	r22, r26
    11d2:	11 24       	eor	r1, r1
    11d4:	9f 57       	subi	r25, 0x7F	; 127
    11d6:	50 40       	sbci	r21, 0x00	; 0
    11d8:	8a f0       	brmi	.+34     	; 0x11fc <__mulsf3_pse+0x84>
    11da:	e1 f0       	breq	.+56     	; 0x1214 <__mulsf3_pse+0x9c>
    11dc:	88 23       	and	r24, r24
    11de:	4a f0       	brmi	.+18     	; 0x11f2 <__mulsf3_pse+0x7a>
    11e0:	ee 0f       	add	r30, r30
    11e2:	ff 1f       	adc	r31, r31
    11e4:	bb 1f       	adc	r27, r27
    11e6:	66 1f       	adc	r22, r22
    11e8:	77 1f       	adc	r23, r23
    11ea:	88 1f       	adc	r24, r24
    11ec:	91 50       	subi	r25, 0x01	; 1
    11ee:	50 40       	sbci	r21, 0x00	; 0
    11f0:	a9 f7       	brne	.-22     	; 0x11dc <__mulsf3_pse+0x64>
    11f2:	9e 3f       	cpi	r25, 0xFE	; 254
    11f4:	51 05       	cpc	r21, r1
    11f6:	70 f0       	brcs	.+28     	; 0x1214 <__mulsf3_pse+0x9c>
    11f8:	09 ce       	rjmp	.-1006   	; 0xe0c <__fp_inf>
    11fa:	53 ce       	rjmp	.-858    	; 0xea2 <__fp_szero>
    11fc:	5f 3f       	cpi	r21, 0xFF	; 255
    11fe:	ec f3       	brlt	.-6      	; 0x11fa <__mulsf3_pse+0x82>
    1200:	98 3e       	cpi	r25, 0xE8	; 232
    1202:	dc f3       	brlt	.-10     	; 0x11fa <__mulsf3_pse+0x82>
    1204:	86 95       	lsr	r24
    1206:	77 95       	ror	r23
    1208:	67 95       	ror	r22
    120a:	b7 95       	ror	r27
    120c:	f7 95       	ror	r31
    120e:	e7 95       	ror	r30
    1210:	9f 5f       	subi	r25, 0xFF	; 255
    1212:	c1 f7       	brne	.-16     	; 0x1204 <__mulsf3_pse+0x8c>
    1214:	fe 2b       	or	r31, r30
    1216:	88 0f       	add	r24, r24
    1218:	91 1d       	adc	r25, r1
    121a:	96 95       	lsr	r25
    121c:	87 95       	ror	r24
    121e:	97 f9       	bld	r25, 7
    1220:	08 95       	ret

00001222 <__divsf3>:
    1222:	0c d0       	rcall	.+24     	; 0x123c <__divsf3x>
    1224:	0a ce       	rjmp	.-1004   	; 0xe3a <__fp_round>
    1226:	02 de       	rcall	.-1020   	; 0xe2c <__fp_pscB>
    1228:	40 f0       	brcs	.+16     	; 0x123a <__divsf3+0x18>
    122a:	f9 dd       	rcall	.-1038   	; 0xe1e <__fp_pscA>
    122c:	30 f0       	brcs	.+12     	; 0x123a <__divsf3+0x18>
    122e:	21 f4       	brne	.+8      	; 0x1238 <__divsf3+0x16>
    1230:	5f 3f       	cpi	r21, 0xFF	; 255
    1232:	19 f0       	breq	.+6      	; 0x123a <__divsf3+0x18>
    1234:	eb cd       	rjmp	.-1066   	; 0xe0c <__fp_inf>
    1236:	51 11       	cpse	r21, r1
    1238:	34 ce       	rjmp	.-920    	; 0xea2 <__fp_szero>
    123a:	ee cd       	rjmp	.-1060   	; 0xe18 <__fp_nan>

0000123c <__divsf3x>:
    123c:	0f de       	rcall	.-994    	; 0xe5c <__fp_split3>
    123e:	98 f3       	brcs	.-26     	; 0x1226 <__divsf3+0x4>

00001240 <__divsf3_pse>:
    1240:	99 23       	and	r25, r25
    1242:	c9 f3       	breq	.-14     	; 0x1236 <__divsf3+0x14>
    1244:	55 23       	and	r21, r21
    1246:	b1 f3       	breq	.-20     	; 0x1234 <__divsf3+0x12>
    1248:	95 1b       	sub	r25, r21
    124a:	55 0b       	sbc	r21, r21
    124c:	bb 27       	eor	r27, r27
    124e:	aa 27       	eor	r26, r26
    1250:	62 17       	cp	r22, r18
    1252:	73 07       	cpc	r23, r19
    1254:	84 07       	cpc	r24, r20
    1256:	38 f0       	brcs	.+14     	; 0x1266 <__divsf3_pse+0x26>
    1258:	9f 5f       	subi	r25, 0xFF	; 255
    125a:	5f 4f       	sbci	r21, 0xFF	; 255
    125c:	22 0f       	add	r18, r18
    125e:	33 1f       	adc	r19, r19
    1260:	44 1f       	adc	r20, r20
    1262:	aa 1f       	adc	r26, r26
    1264:	a9 f3       	breq	.-22     	; 0x1250 <__divsf3_pse+0x10>
    1266:	33 d0       	rcall	.+102    	; 0x12ce <__divsf3_pse+0x8e>
    1268:	0e 2e       	mov	r0, r30
    126a:	3a f0       	brmi	.+14     	; 0x127a <__divsf3_pse+0x3a>
    126c:	e0 e8       	ldi	r30, 0x80	; 128
    126e:	30 d0       	rcall	.+96     	; 0x12d0 <__divsf3_pse+0x90>
    1270:	91 50       	subi	r25, 0x01	; 1
    1272:	50 40       	sbci	r21, 0x00	; 0
    1274:	e6 95       	lsr	r30
    1276:	00 1c       	adc	r0, r0
    1278:	ca f7       	brpl	.-14     	; 0x126c <__divsf3_pse+0x2c>
    127a:	29 d0       	rcall	.+82     	; 0x12ce <__divsf3_pse+0x8e>
    127c:	fe 2f       	mov	r31, r30
    127e:	27 d0       	rcall	.+78     	; 0x12ce <__divsf3_pse+0x8e>
    1280:	66 0f       	add	r22, r22
    1282:	77 1f       	adc	r23, r23
    1284:	88 1f       	adc	r24, r24
    1286:	bb 1f       	adc	r27, r27
    1288:	26 17       	cp	r18, r22
    128a:	37 07       	cpc	r19, r23
    128c:	48 07       	cpc	r20, r24
    128e:	ab 07       	cpc	r26, r27
    1290:	b0 e8       	ldi	r27, 0x80	; 128
    1292:	09 f0       	breq	.+2      	; 0x1296 <__divsf3_pse+0x56>
    1294:	bb 0b       	sbc	r27, r27
    1296:	80 2d       	mov	r24, r0
    1298:	bf 01       	movw	r22, r30
    129a:	ff 27       	eor	r31, r31
    129c:	93 58       	subi	r25, 0x83	; 131
    129e:	5f 4f       	sbci	r21, 0xFF	; 255
    12a0:	2a f0       	brmi	.+10     	; 0x12ac <__divsf3_pse+0x6c>
    12a2:	9e 3f       	cpi	r25, 0xFE	; 254
    12a4:	51 05       	cpc	r21, r1
    12a6:	68 f0       	brcs	.+26     	; 0x12c2 <__divsf3_pse+0x82>
    12a8:	b1 cd       	rjmp	.-1182   	; 0xe0c <__fp_inf>
    12aa:	fb cd       	rjmp	.-1034   	; 0xea2 <__fp_szero>
    12ac:	5f 3f       	cpi	r21, 0xFF	; 255
    12ae:	ec f3       	brlt	.-6      	; 0x12aa <__divsf3_pse+0x6a>
    12b0:	98 3e       	cpi	r25, 0xE8	; 232
    12b2:	dc f3       	brlt	.-10     	; 0x12aa <__divsf3_pse+0x6a>
    12b4:	86 95       	lsr	r24
    12b6:	77 95       	ror	r23
    12b8:	67 95       	ror	r22
    12ba:	b7 95       	ror	r27
    12bc:	f7 95       	ror	r31
    12be:	9f 5f       	subi	r25, 0xFF	; 255
    12c0:	c9 f7       	brne	.-14     	; 0x12b4 <__divsf3_pse+0x74>
    12c2:	88 0f       	add	r24, r24
    12c4:	91 1d       	adc	r25, r1
    12c6:	96 95       	lsr	r25
    12c8:	87 95       	ror	r24
    12ca:	97 f9       	bld	r25, 7
    12cc:	08 95       	ret
    12ce:	e1 e0       	ldi	r30, 0x01	; 1
    12d0:	66 0f       	add	r22, r22
    12d2:	77 1f       	adc	r23, r23
    12d4:	88 1f       	adc	r24, r24
    12d6:	bb 1f       	adc	r27, r27
    12d8:	62 17       	cp	r22, r18
    12da:	73 07       	cpc	r23, r19
    12dc:	84 07       	cpc	r24, r20
    12de:	ba 07       	cpc	r27, r26
    12e0:	20 f0       	brcs	.+8      	; 0x12ea <__divsf3_pse+0xaa>
    12e2:	62 1b       	sub	r22, r18
    12e4:	73 0b       	sbc	r23, r19
    12e6:	84 0b       	sbc	r24, r20
    12e8:	ba 0b       	sbc	r27, r26
    12ea:	ee 1f       	adc	r30, r30
    12ec:	88 f7       	brcc	.-30     	; 0x12d0 <__divsf3_pse+0x90>
    12ee:	e0 95       	com	r30
    12f0:	08 95       	ret

000012f2 <__fp_mpack>:
    12f2:	9f 3f       	cpi	r25, 0xFF	; 255
    12f4:	31 f0       	breq	.+12     	; 0x1302 <__fp_mpack_finite+0xc>

000012f6 <__fp_mpack_finite>:
    12f6:	91 50       	subi	r25, 0x01	; 1
    12f8:	20 f4       	brcc	.+8      	; 0x1302 <__fp_mpack_finite+0xc>
    12fa:	87 95       	ror	r24
    12fc:	77 95       	ror	r23
    12fe:	67 95       	ror	r22
    1300:	b7 95       	ror	r27
    1302:	88 0f       	add	r24, r24
    1304:	91 1d       	adc	r25, r1
    1306:	96 95       	lsr	r25
    1308:	87 95       	ror	r24
    130a:	97 f9       	bld	r25, 7
    130c:	08 95       	ret

0000130e <__udivmodsi4>:
    130e:	a1 e2       	ldi	r26, 0x21	; 33
    1310:	1a 2e       	mov	r1, r26
    1312:	aa 1b       	sub	r26, r26
    1314:	bb 1b       	sub	r27, r27
    1316:	fd 01       	movw	r30, r26
    1318:	0d c0       	rjmp	.+26     	; 0x1334 <__udivmodsi4_ep>

0000131a <__udivmodsi4_loop>:
    131a:	aa 1f       	adc	r26, r26
    131c:	bb 1f       	adc	r27, r27
    131e:	ee 1f       	adc	r30, r30
    1320:	ff 1f       	adc	r31, r31
    1322:	a2 17       	cp	r26, r18
    1324:	b3 07       	cpc	r27, r19
    1326:	e4 07       	cpc	r30, r20
    1328:	f5 07       	cpc	r31, r21
    132a:	20 f0       	brcs	.+8      	; 0x1334 <__udivmodsi4_ep>
    132c:	a2 1b       	sub	r26, r18
    132e:	b3 0b       	sbc	r27, r19
    1330:	e4 0b       	sbc	r30, r20
    1332:	f5 0b       	sbc	r31, r21

00001334 <__udivmodsi4_ep>:
    1334:	66 1f       	adc	r22, r22
    1336:	77 1f       	adc	r23, r23
    1338:	88 1f       	adc	r24, r24
    133a:	99 1f       	adc	r25, r25
    133c:	1a 94       	dec	r1
    133e:	69 f7       	brne	.-38     	; 0x131a <__udivmodsi4_loop>
    1340:	60 95       	com	r22
    1342:	70 95       	com	r23
    1344:	80 95       	com	r24
    1346:	90 95       	com	r25
    1348:	9b 01       	movw	r18, r22
    134a:	ac 01       	movw	r20, r24
    134c:	bd 01       	movw	r22, r26
    134e:	cf 01       	movw	r24, r30
    1350:	08 95       	ret

00001352 <__muluhisi3>:
    1352:	40 d0       	rcall	.+128    	; 0x13d4 <__umulhisi3>
    1354:	a5 9f       	mul	r26, r21
    1356:	90 0d       	add	r25, r0
    1358:	b4 9f       	mul	r27, r20
    135a:	90 0d       	add	r25, r0
    135c:	a4 9f       	mul	r26, r20
    135e:	80 0d       	add	r24, r0
    1360:	91 1d       	adc	r25, r1
    1362:	11 24       	eor	r1, r1
    1364:	08 95       	ret

00001366 <__ashldi3>:
    1366:	0f 93       	push	r16
    1368:	08 30       	cpi	r16, 0x08	; 8
    136a:	90 f0       	brcs	.+36     	; 0x1390 <__ashldi3+0x2a>
    136c:	98 2f       	mov	r25, r24
    136e:	87 2f       	mov	r24, r23
    1370:	76 2f       	mov	r23, r22
    1372:	65 2f       	mov	r22, r21
    1374:	54 2f       	mov	r21, r20
    1376:	43 2f       	mov	r20, r19
    1378:	32 2f       	mov	r19, r18
    137a:	22 27       	eor	r18, r18
    137c:	08 50       	subi	r16, 0x08	; 8
    137e:	f4 cf       	rjmp	.-24     	; 0x1368 <__ashldi3+0x2>
    1380:	22 0f       	add	r18, r18
    1382:	33 1f       	adc	r19, r19
    1384:	44 1f       	adc	r20, r20
    1386:	55 1f       	adc	r21, r21
    1388:	66 1f       	adc	r22, r22
    138a:	77 1f       	adc	r23, r23
    138c:	88 1f       	adc	r24, r24
    138e:	99 1f       	adc	r25, r25
    1390:	0a 95       	dec	r16
    1392:	b2 f7       	brpl	.-20     	; 0x1380 <__ashldi3+0x1a>
    1394:	0f 91       	pop	r16
    1396:	08 95       	ret

00001398 <__adddi3>:
    1398:	2a 0d       	add	r18, r10
    139a:	3b 1d       	adc	r19, r11
    139c:	4c 1d       	adc	r20, r12
    139e:	5d 1d       	adc	r21, r13
    13a0:	6e 1d       	adc	r22, r14
    13a2:	7f 1d       	adc	r23, r15
    13a4:	80 1f       	adc	r24, r16
    13a6:	91 1f       	adc	r25, r17
    13a8:	08 95       	ret

000013aa <__adddi3_s8>:
    13aa:	00 24       	eor	r0, r0
    13ac:	a7 fd       	sbrc	r26, 7
    13ae:	00 94       	com	r0
    13b0:	2a 0f       	add	r18, r26
    13b2:	30 1d       	adc	r19, r0
    13b4:	40 1d       	adc	r20, r0
    13b6:	50 1d       	adc	r21, r0
    13b8:	60 1d       	adc	r22, r0
    13ba:	70 1d       	adc	r23, r0
    13bc:	80 1d       	adc	r24, r0
    13be:	90 1d       	adc	r25, r0
    13c0:	08 95       	ret

000013c2 <__cmpdi2>:
    13c2:	2a 15       	cp	r18, r10
    13c4:	3b 05       	cpc	r19, r11
    13c6:	4c 05       	cpc	r20, r12
    13c8:	5d 05       	cpc	r21, r13
    13ca:	6e 05       	cpc	r22, r14
    13cc:	7f 05       	cpc	r23, r15
    13ce:	80 07       	cpc	r24, r16
    13d0:	91 07       	cpc	r25, r17
    13d2:	08 95       	ret

000013d4 <__umulhisi3>:
    13d4:	a2 9f       	mul	r26, r18
    13d6:	b0 01       	movw	r22, r0
    13d8:	b3 9f       	mul	r27, r19
    13da:	c0 01       	movw	r24, r0
    13dc:	a3 9f       	mul	r26, r19
    13de:	70 0d       	add	r23, r0
    13e0:	81 1d       	adc	r24, r1
    13e2:	11 24       	eor	r1, r1
    13e4:	91 1d       	adc	r25, r1
    13e6:	b2 9f       	mul	r27, r18
    13e8:	70 0d       	add	r23, r0
    13ea:	81 1d       	adc	r24, r1
    13ec:	11 24       	eor	r1, r1
    13ee:	91 1d       	adc	r25, r1
    13f0:	08 95       	ret

000013f2 <__itoa_ncheck>:
    13f2:	bb 27       	eor	r27, r27
    13f4:	4a 30       	cpi	r20, 0x0A	; 10
    13f6:	31 f4       	brne	.+12     	; 0x1404 <__itoa_ncheck+0x12>
    13f8:	99 23       	and	r25, r25
    13fa:	22 f4       	brpl	.+8      	; 0x1404 <__itoa_ncheck+0x12>
    13fc:	bd e2       	ldi	r27, 0x2D	; 45
    13fe:	90 95       	com	r25
    1400:	81 95       	neg	r24
    1402:	9f 4f       	sbci	r25, 0xFF	; 255
    1404:	01 c0       	rjmp	.+2      	; 0x1408 <__utoa_common>

00001406 <__utoa_ncheck>:
    1406:	bb 27       	eor	r27, r27

00001408 <__utoa_common>:
    1408:	fb 01       	movw	r30, r22
    140a:	55 27       	eor	r21, r21
    140c:	aa 27       	eor	r26, r26
    140e:	88 0f       	add	r24, r24
    1410:	99 1f       	adc	r25, r25
    1412:	aa 1f       	adc	r26, r26
    1414:	a4 17       	cp	r26, r20
    1416:	10 f0       	brcs	.+4      	; 0x141c <__utoa_common+0x14>
    1418:	a4 1b       	sub	r26, r20
    141a:	83 95       	inc	r24
    141c:	50 51       	subi	r21, 0x10	; 16
    141e:	b9 f7       	brne	.-18     	; 0x140e <__utoa_common+0x6>
    1420:	a0 5d       	subi	r26, 0xD0	; 208
    1422:	aa 33       	cpi	r26, 0x3A	; 58
    1424:	08 f0       	brcs	.+2      	; 0x1428 <__utoa_common+0x20>
    1426:	a9 5d       	subi	r26, 0xD9	; 217
    1428:	a1 93       	st	Z+, r26
    142a:	00 97       	sbiw	r24, 0x00	; 0
    142c:	79 f7       	brne	.-34     	; 0x140c <__utoa_common+0x4>
    142e:	b1 11       	cpse	r27, r1
    1430:	b1 93       	st	Z+, r27
    1432:	11 92       	st	Z+, r1
    1434:	cb 01       	movw	r24, r22
    1436:	00 c0       	rjmp	.+0      	; 0x1438 <strrev>

00001438 <strrev>:
    1438:	dc 01       	movw	r26, r24
    143a:	fc 01       	movw	r30, r24
    143c:	67 2f       	mov	r22, r23
    143e:	71 91       	ld	r23, Z+
    1440:	77 23       	and	r23, r23
    1442:	e1 f7       	brne	.-8      	; 0x143c <strrev+0x4>
    1444:	32 97       	sbiw	r30, 0x02	; 2
    1446:	04 c0       	rjmp	.+8      	; 0x1450 <strrev+0x18>
    1448:	7c 91       	ld	r23, X
    144a:	6d 93       	st	X+, r22
    144c:	70 83       	st	Z, r23
    144e:	62 91       	ld	r22, -Z
    1450:	ae 17       	cp	r26, r30
    1452:	bf 07       	cpc	r27, r31
    1454:	c8 f3       	brcs	.-14     	; 0x1448 <strrev+0x10>
    1456:	08 95       	ret

00001458 <_exit>:
    1458:	f8 94       	cli

0000145a <__stop_program>:
    145a:	ff cf       	rjmp	.-2      	; 0x145a <__stop_program>
