
Arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000028  00800200  00000bae  00000c42  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000bae  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000111  00800228  00800228  00000c6a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000c6a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000c9c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000098  00000000  00000000  00000cdc  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000136a  00000000  00000000  00000d74  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000eb5  00000000  00000000  000020de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000798  00000000  00000000  00002f93  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000200  00000000  00000000  0000372c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007c0  00000000  00000000  0000392c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000006ef  00000000  00000000  000040ec  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000090  00000000  00000000  000047db  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
   2:	00 00       	nop
   4:	cd c0       	rjmp	.+410    	; 0x1a0 <__bad_interrupt>
   6:	00 00       	nop
   8:	cb c0       	rjmp	.+406    	; 0x1a0 <__bad_interrupt>
   a:	00 00       	nop
   c:	c9 c0       	rjmp	.+402    	; 0x1a0 <__bad_interrupt>
   e:	00 00       	nop
  10:	c7 c0       	rjmp	.+398    	; 0x1a0 <__bad_interrupt>
  12:	00 00       	nop
  14:	c5 c0       	rjmp	.+394    	; 0x1a0 <__bad_interrupt>
  16:	00 00       	nop
  18:	c3 c0       	rjmp	.+390    	; 0x1a0 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	c1 c0       	rjmp	.+386    	; 0x1a0 <__bad_interrupt>
  1e:	00 00       	nop
  20:	bf c0       	rjmp	.+382    	; 0x1a0 <__bad_interrupt>
  22:	00 00       	nop
  24:	bd c0       	rjmp	.+378    	; 0x1a0 <__bad_interrupt>
  26:	00 00       	nop
  28:	bb c0       	rjmp	.+374    	; 0x1a0 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	b9 c0       	rjmp	.+370    	; 0x1a0 <__bad_interrupt>
  2e:	00 00       	nop
  30:	b7 c0       	rjmp	.+366    	; 0x1a0 <__bad_interrupt>
  32:	00 00       	nop
  34:	b5 c0       	rjmp	.+362    	; 0x1a0 <__bad_interrupt>
  36:	00 00       	nop
  38:	b3 c0       	rjmp	.+358    	; 0x1a0 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	b1 c0       	rjmp	.+354    	; 0x1a0 <__bad_interrupt>
  3e:	00 00       	nop
  40:	af c0       	rjmp	.+350    	; 0x1a0 <__bad_interrupt>
  42:	00 00       	nop
  44:	ad c0       	rjmp	.+346    	; 0x1a0 <__bad_interrupt>
  46:	00 00       	nop
  48:	ab c0       	rjmp	.+342    	; 0x1a0 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	a9 c0       	rjmp	.+338    	; 0x1a0 <__bad_interrupt>
  4e:	00 00       	nop
  50:	a7 c0       	rjmp	.+334    	; 0x1a0 <__bad_interrupt>
  52:	00 00       	nop
  54:	a5 c0       	rjmp	.+330    	; 0x1a0 <__bad_interrupt>
  56:	00 00       	nop
  58:	a3 c0       	rjmp	.+326    	; 0x1a0 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	a1 c0       	rjmp	.+322    	; 0x1a0 <__bad_interrupt>
  5e:	00 00       	nop
  60:	9f c0       	rjmp	.+318    	; 0x1a0 <__bad_interrupt>
  62:	00 00       	nop
  64:	a7 c0       	rjmp	.+334    	; 0x1b4 <__vector_25>
  66:	00 00       	nop
  68:	9b c0       	rjmp	.+310    	; 0x1a0 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	99 c0       	rjmp	.+306    	; 0x1a0 <__bad_interrupt>
  6e:	00 00       	nop
  70:	97 c0       	rjmp	.+302    	; 0x1a0 <__bad_interrupt>
  72:	00 00       	nop
  74:	95 c0       	rjmp	.+298    	; 0x1a0 <__bad_interrupt>
  76:	00 00       	nop
  78:	93 c0       	rjmp	.+294    	; 0x1a0 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	91 c0       	rjmp	.+290    	; 0x1a0 <__bad_interrupt>
  7e:	00 00       	nop
  80:	8f c0       	rjmp	.+286    	; 0x1a0 <__bad_interrupt>
  82:	00 00       	nop
  84:	8d c0       	rjmp	.+282    	; 0x1a0 <__bad_interrupt>
  86:	00 00       	nop
  88:	8b c0       	rjmp	.+278    	; 0x1a0 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	89 c0       	rjmp	.+274    	; 0x1a0 <__bad_interrupt>
  8e:	00 00       	nop
  90:	87 c0       	rjmp	.+270    	; 0x1a0 <__bad_interrupt>
  92:	00 00       	nop
  94:	85 c0       	rjmp	.+266    	; 0x1a0 <__bad_interrupt>
  96:	00 00       	nop
  98:	83 c0       	rjmp	.+262    	; 0x1a0 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	81 c0       	rjmp	.+258    	; 0x1a0 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	7f c0       	rjmp	.+254    	; 0x1a0 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	7d c0       	rjmp	.+250    	; 0x1a0 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	7b c0       	rjmp	.+246    	; 0x1a0 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	79 c0       	rjmp	.+242    	; 0x1a0 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	77 c0       	rjmp	.+238    	; 0x1a0 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	75 c0       	rjmp	.+234    	; 0x1a0 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	73 c0       	rjmp	.+230    	; 0x1a0 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	71 c0       	rjmp	.+226    	; 0x1a0 <__bad_interrupt>
  be:	00 00       	nop
  c0:	6f c0       	rjmp	.+222    	; 0x1a0 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	6d c0       	rjmp	.+218    	; 0x1a0 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	6b c0       	rjmp	.+214    	; 0x1a0 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	69 c0       	rjmp	.+210    	; 0x1a0 <__bad_interrupt>
  ce:	00 00       	nop
  d0:	67 c0       	rjmp	.+206    	; 0x1a0 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	65 c0       	rjmp	.+202    	; 0x1a0 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	63 c0       	rjmp	.+198    	; 0x1a0 <__bad_interrupt>
  da:	00 00       	nop
  dc:	61 c0       	rjmp	.+194    	; 0x1a0 <__bad_interrupt>
  de:	00 00       	nop
  e0:	5f c0       	rjmp	.+190    	; 0x1a0 <__bad_interrupt>
  e2:	00 00       	nop
  e4:	07 63       	ori	r16, 0x37	; 55
  e6:	42 36       	cpi	r20, 0x62	; 98
  e8:	b7 9b       	sbis	0x16, 7	; 22
  ea:	d8 a7       	std	Y+40, r29	; 0x28
  ec:	1a 39       	cpi	r17, 0x9A	; 154
  ee:	68 56       	subi	r22, 0x68	; 104
  f0:	18 ae       	std	Y+56, r1	; 0x38
  f2:	ba ab       	std	Y+50, r27	; 0x32
  f4:	55 8c       	ldd	r5, Z+29	; 0x1d
  f6:	1d 3c       	cpi	r17, 0xCD	; 205
  f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
  fa:	57 63       	ori	r21, 0x37	; 55
  fc:	bd 6d       	ori	r27, 0xDD	; 221
  fe:	ed fd       	.word	0xfded	; ????
 100:	75 3e       	cpi	r23, 0xE5	; 229
 102:	f6 17       	cp	r31, r22
 104:	72 31       	cpi	r23, 0x12	; 18
 106:	bf 00       	.word	0x00bf	; ????
 108:	00 00       	nop
 10a:	80 3f       	cpi	r24, 0xF0	; 240
 10c:	08 00       	.word	0x0008	; ????
 10e:	00 00       	nop
 110:	be 92       	st	-X, r11
 112:	24 49       	sbci	r18, 0x94	; 148
 114:	12 3e       	cpi	r17, 0xE2	; 226
 116:	ab aa       	std	Y+51, r10	; 0x33
 118:	aa 2a       	or	r10, r26
 11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
 11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
 11e:	4c 3e       	cpi	r20, 0xEC	; 236
 120:	00 00       	nop
 122:	00 80       	ld	r0, Z
 124:	be ab       	std	Y+54, r27	; 0x36
 126:	aa aa       	std	Y+50, r10	; 0x32
 128:	aa 3e       	cpi	r26, 0xEA	; 234
 12a:	00 00       	nop
 12c:	00 00       	nop
 12e:	bf 00       	.word	0x00bf	; ????
 130:	00 00       	nop
 132:	80 3f       	cpi	r24, 0xF0	; 240
 134:	00 00       	nop
 136:	00 00       	nop
 138:	00 08       	sbc	r0, r0
 13a:	41 78       	andi	r20, 0x81	; 129
 13c:	d3 bb       	out	0x13, r29	; 19
 13e:	43 87       	std	Z+11, r20	; 0x0b
 140:	d1 13       	cpse	r29, r17
 142:	3d 19       	sub	r19, r13
 144:	0e 3c       	cpi	r16, 0xCE	; 206
 146:	c3 bd       	out	0x23, r28	; 35
 148:	42 82       	std	Z+2, r4	; 0x02
 14a:	ad 2b       	or	r26, r29
 14c:	3e 68       	ori	r19, 0x8E	; 142
 14e:	ec 82       	std	Y+4, r14	; 0x04
 150:	76 be       	out	0x36, r7	; 54
 152:	d9 8f       	std	Y+25, r29	; 0x19
 154:	e1 a9       	ldd	r30, Z+49	; 0x31
 156:	3e 4c       	sbci	r19, 0xCE	; 206
 158:	80 ef       	ldi	r24, 0xF0	; 240
 15a:	ff be       	out	0x3f, r15	; 63
 15c:	01 c4       	rjmp	.+2050   	; 0x960 <modf+0x34>
 15e:	ff 7f       	andi	r31, 0xFF	; 255
 160:	3f 00       	.word	0x003f	; ????
 162:	00 00       	nop
	...

00000166 <__ctors_end>:
 166:	11 24       	eor	r1, r1
 168:	1f be       	out	0x3f, r1	; 63
 16a:	cf ef       	ldi	r28, 0xFF	; 255
 16c:	d1 e2       	ldi	r29, 0x21	; 33
 16e:	de bf       	out	0x3e, r29	; 62
 170:	cd bf       	out	0x3d, r28	; 61

00000172 <__do_copy_data>:
 172:	12 e0       	ldi	r17, 0x02	; 2
 174:	a0 e0       	ldi	r26, 0x00	; 0
 176:	b2 e0       	ldi	r27, 0x02	; 2
 178:	ee ea       	ldi	r30, 0xAE	; 174
 17a:	fb e0       	ldi	r31, 0x0B	; 11
 17c:	00 e0       	ldi	r16, 0x00	; 0
 17e:	0b bf       	out	0x3b, r16	; 59
 180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x14>
 182:	07 90       	elpm	r0, Z+
 184:	0d 92       	st	X+, r0
 186:	a8 32       	cpi	r26, 0x28	; 40
 188:	b1 07       	cpc	r27, r17
 18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0x10>

0000018c <__do_clear_bss>:
 18c:	23 e0       	ldi	r18, 0x03	; 3
 18e:	a8 e2       	ldi	r26, 0x28	; 40
 190:	b2 e0       	ldi	r27, 0x02	; 2
 192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
 194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
 196:	a9 33       	cpi	r26, 0x39	; 57
 198:	b2 07       	cpc	r27, r18
 19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
 19c:	0b d1       	rcall	.+534    	; 0x3b4 <main>
 19e:	05 c5       	rjmp	.+2570   	; 0xbaa <_exit>

000001a0 <__bad_interrupt>:
 1a0:	2f cf       	rjmp	.-418    	; 0x0 <__vectors>

000001a2 <init_master>:
	TWDR=b;
	TWCR=(1<<TWINT)|(1<<TWEN);
	while(!(TWCR & (1<<TWINT)));
  //  op[2] = TWSR;

	TWCR=(1<<TWINT)|(1<<TWSTO)|(1<<TWEN);
 1a2:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7e00b9>
 1a6:	88 e4       	ldi	r24, 0x48	; 72
 1a8:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7e00b8>
 1ac:	84 e0       	ldi	r24, 0x04	; 4
 1ae:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7e00bc>
 1b2:	08 95       	ret

000001b4 <__vector_25>:
	uint16_t	motorEncoderLVal;		//Segment count of the left motor encoder		(Updated by interrupt)
	uint16_t	motorEncoderRVal;		//Same for right encoder ---^
} rp6Data;


ISR(USART_INTERRUPT_VECTOR) {
 1b4:	1f 92       	push	r1
 1b6:	0f 92       	push	r0
 1b8:	0f b6       	in	r0, 0x3f	; 63
 1ba:	0f 92       	push	r0
 1bc:	11 24       	eor	r1, r1
 1be:	0b b6       	in	r0, 0x3b	; 59
 1c0:	0f 92       	push	r0
 1c2:	df 92       	push	r13
 1c4:	ef 92       	push	r14
 1c6:	ff 92       	push	r15
 1c8:	0f 93       	push	r16
 1ca:	1f 93       	push	r17
 1cc:	2f 93       	push	r18
 1ce:	3f 93       	push	r19
 1d0:	4f 93       	push	r20
 1d2:	5f 93       	push	r21
 1d4:	6f 93       	push	r22
 1d6:	7f 93       	push	r23
 1d8:	8f 93       	push	r24
 1da:	9f 93       	push	r25
 1dc:	af 93       	push	r26
 1de:	bf 93       	push	r27
 1e0:	cf 93       	push	r28
 1e2:	df 93       	push	r29
 1e4:	ef 93       	push	r30
 1e6:	ff 93       	push	r31
	static char buffer[BUFFER_SIZE];											//Character buffer to store numerals
	static int bufferPos = -1;													//Represents which buffer positions are currently in use to store numerals
	static char received = 0;													//Stores the last character received through USART
	static char command = 0;													//Stores a character that represents a command. Default value is null
	
	received = UDR0;
 1e8:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
	
	if ('0' <= received && received <= '9') {									//If received contains a a numeral
 1ec:	90 ed       	ldi	r25, 0xD0	; 208
 1ee:	98 0f       	add	r25, r24
 1f0:	9a 30       	cpi	r25, 0x0A	; 10
 1f2:	c0 f4       	brcc	.+48     	; 0x224 <__vector_25+0x70>
		
		if (command == 't') {													//If command 't' is currently set
 1f4:	90 91 27 03 	lds	r25, 0x0327	; 0x800327 <command.1935>
 1f8:	94 37       	cpi	r25, 0x74	; 116
 1fa:	09 f0       	breq	.+2      	; 0x1fe <__vector_25+0x4a>
 1fc:	c1 c0       	rjmp	.+386    	; 0x380 <__vector_25+0x1cc>
			if (bufferPos < BUFFER_SIZE)										//Check to prevent overflow of the buffer
 1fe:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
 202:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
 206:	2f 3f       	cpi	r18, 0xFF	; 255
 208:	31 05       	cpc	r19, r1
 20a:	0c f0       	brlt	.+2      	; 0x20e <__vector_25+0x5a>
 20c:	b9 c0       	rjmp	.+370    	; 0x380 <__vector_25+0x1cc>
				buffer[++bufferPos] = received;									//Add numeral to buffer
 20e:	2f 5f       	subi	r18, 0xFF	; 255
 210:	3f 4f       	sbci	r19, 0xFF	; 255
 212:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <__data_start+0x1>
 216:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <__data_start>
 21a:	f9 01       	movw	r30, r18
 21c:	e8 5d       	subi	r30, 0xD8	; 216
 21e:	fd 4f       	sbci	r31, 0xFD	; 253
 220:	80 83       	st	Z, r24
 222:	ae c0       	rjmp	.+348    	; 0x380 <__vector_25+0x1cc>
		}
			
	} else if ('a' <= received && received <= 'z') {							//If received contains a (lower case) letter
 224:	9f e9       	ldi	r25, 0x9F	; 159
 226:	98 0f       	add	r25, r24
 228:	9a 31       	cpi	r25, 0x1A	; 26
 22a:	80 f4       	brcc	.+32     	; 0x24c <__vector_25+0x98>
		
		switch(received) {														//Each valid command is represented by a case
 22c:	85 37       	cpi	r24, 0x75	; 117
 22e:	40 f4       	brcc	.+16     	; 0x240 <__vector_25+0x8c>
 230:	83 37       	cpi	r24, 0x73	; 115
 232:	48 f4       	brcc	.+18     	; 0x246 <__vector_25+0x92>
 234:	81 36       	cpi	r24, 0x61	; 97
 236:	39 f0       	breq	.+14     	; 0x246 <__vector_25+0x92>
 238:	84 36       	cpi	r24, 0x64	; 100
 23a:	09 f0       	breq	.+2      	; 0x23e <__vector_25+0x8a>
 23c:	a1 c0       	rjmp	.+322    	; 0x380 <__vector_25+0x1cc>
 23e:	03 c0       	rjmp	.+6      	; 0x246 <__vector_25+0x92>
 240:	87 37       	cpi	r24, 0x77	; 119
 242:	09 f0       	breq	.+2      	; 0x246 <__vector_25+0x92>
 244:	9d c0       	rjmp	.+314    	; 0x380 <__vector_25+0x1cc>
			case 'w':
			case 'a':
			case 's':
			case 'd':
			case 't':
			command = received;
 246:	80 93 27 03 	sts	0x0327, r24	; 0x800327 <command.1935>
 24a:	9a c0       	rjmp	.+308    	; 0x380 <__vector_25+0x1cc>
		}
	} else if (received == '\r') {												//If received contains a carriage return
 24c:	8d 30       	cpi	r24, 0x0D	; 13
 24e:	09 f0       	breq	.+2      	; 0x252 <__vector_25+0x9e>
 250:	97 c0       	rjmp	.+302    	; 0x380 <__vector_25+0x1cc>
		
		uint16_t intValue = 0;													//Value to be passed over I2C with the command. Default value is 0.
		
		if (command == 't') {													//If the command is 't', the buffer is converted to an integer and stored in intValue
 252:	80 91 27 03 	lds	r24, 0x0327	; 0x800327 <command.1935>
 256:	84 37       	cpi	r24, 0x74	; 116
 258:	b1 f5       	brne	.+108    	; 0x2c6 <__vector_25+0x112>
			uint8_t charToInt;
		
			for (uint8_t i = 0; i <= bufferPos; i++) {
 25a:	00 91 00 02 	lds	r16, 0x0200	; 0x800200 <__data_start>
 25e:	10 91 01 02 	lds	r17, 0x0201	; 0x800201 <__data_start+0x1>
 262:	11 23       	and	r17, r17
 264:	0c f4       	brge	.+2      	; 0x268 <__vector_25+0xb4>
 266:	71 c0       	rjmp	.+226    	; 0x34a <__vector_25+0x196>
 268:	c0 e0       	ldi	r28, 0x00	; 0
 26a:	d0 e0       	ldi	r29, 0x00	; 0
 26c:	d1 2c       	mov	r13, r1
 26e:	e1 2c       	mov	r14, r1
 270:	f1 2c       	mov	r15, r1
				charToInt = (int) (buffer[i] - '0');
				intValue += charToInt * ((int)(pow(10, bufferPos - i) + 0.5));	//The 0.5 is necessary to properly convert the return value of pow() into an integer
 272:	b8 01       	movw	r22, r16
 274:	6c 1b       	sub	r22, r28
 276:	7d 0b       	sbc	r23, r29
 278:	07 2e       	mov	r0, r23
 27a:	00 0c       	add	r0, r0
 27c:	88 0b       	sbc	r24, r24
 27e:	99 0b       	sbc	r25, r25
 280:	a5 d1       	rcall	.+842    	; 0x5cc <__floatsisf>
 282:	9b 01       	movw	r18, r22
 284:	ac 01       	movw	r20, r24
 286:	60 e0       	ldi	r22, 0x00	; 0
 288:	70 e0       	ldi	r23, 0x00	; 0
 28a:	80 e2       	ldi	r24, 0x20	; 32
 28c:	91 e4       	ldi	r25, 0x41	; 65
 28e:	2a d2       	rcall	.+1108   	; 0x6e4 <pow>
		
		if (command == 't') {													//If the command is 't', the buffer is converted to an integer and stored in intValue
			uint8_t charToInt;
		
			for (uint8_t i = 0; i <= bufferPos; i++) {
				charToInt = (int) (buffer[i] - '0');
 290:	c8 5d       	subi	r28, 0xD8	; 216
 292:	dd 4f       	sbci	r29, 0xFD	; 253
				intValue += charToInt * ((int)(pow(10, bufferPos - i) + 0.5));	//The 0.5 is necessary to properly convert the return value of pow() into an integer
 294:	c8 81       	ld	r28, Y
 296:	c0 53       	subi	r28, 0x30	; 48
 298:	d0 e0       	ldi	r29, 0x00	; 0
 29a:	20 e0       	ldi	r18, 0x00	; 0
 29c:	30 e0       	ldi	r19, 0x00	; 0
 29e:	40 e0       	ldi	r20, 0x00	; 0
 2a0:	5f e3       	ldi	r21, 0x3F	; 63
 2a2:	fd d0       	rcall	.+506    	; 0x49e <__addsf3>
 2a4:	60 d1       	rcall	.+704    	; 0x566 <__fixsfsi>
 2a6:	c6 9f       	mul	r28, r22
 2a8:	90 01       	movw	r18, r0
 2aa:	c7 9f       	mul	r28, r23
 2ac:	30 0d       	add	r19, r0
 2ae:	d6 9f       	mul	r29, r22
 2b0:	30 0d       	add	r19, r0
 2b2:	11 24       	eor	r1, r1
 2b4:	e2 0e       	add	r14, r18
 2b6:	f3 1e       	adc	r15, r19
		uint16_t intValue = 0;													//Value to be passed over I2C with the command. Default value is 0.
		
		if (command == 't') {													//If the command is 't', the buffer is converted to an integer and stored in intValue
			uint8_t charToInt;
		
			for (uint8_t i = 0; i <= bufferPos; i++) {
 2b8:	d3 94       	inc	r13
 2ba:	cd 2d       	mov	r28, r13
 2bc:	d0 e0       	ldi	r29, 0x00	; 0
 2be:	0c 17       	cp	r16, r28
 2c0:	1d 07       	cpc	r17, r29
 2c2:	bc f6       	brge	.-82     	; 0x272 <__vector_25+0xbe>
 2c4:	3d c0       	rjmp	.+122    	; 0x340 <__vector_25+0x18c>
				charToInt = (int) (buffer[i] - '0');
				intValue += charToInt * ((int)(pow(10, bufferPos - i) + 0.5));	//The 0.5 is necessary to properly convert the return value of pow() into an integer
			}
			
		}
		if (command) {															//Only if a command is set is data transmitted
 2c6:	88 23       	and	r24, r24
 2c8:	09 f4       	brne	.+2      	; 0x2cc <__vector_25+0x118>
 2ca:	5a c0       	rjmp	.+180    	; 0x380 <__vector_25+0x1cc>
			
			switch (command) {
 2cc:	83 37       	cpi	r24, 0x73	; 115
 2ce:	01 f1       	breq	.+64     	; 0x310 <__vector_25+0x15c>
 2d0:	28 f4       	brcc	.+10     	; 0x2dc <__vector_25+0x128>
 2d2:	81 36       	cpi	r24, 0x61	; 97
 2d4:	91 f0       	breq	.+36     	; 0x2fa <__vector_25+0x146>
 2d6:	84 36       	cpi	r24, 0x64	; 100
 2d8:	31 f1       	breq	.+76     	; 0x326 <__vector_25+0x172>
 2da:	3b c0       	rjmp	.+118    	; 0x352 <__vector_25+0x19e>
 2dc:	84 37       	cpi	r24, 0x74	; 116
 2de:	71 f1       	breq	.+92     	; 0x33c <__vector_25+0x188>
 2e0:	87 37       	cpi	r24, 0x77	; 119
 2e2:	b9 f5       	brne	.+110    	; 0x352 <__vector_25+0x19e>
				
				case 'w':
				if (rp6Data.driveDirection == 1) {
 2e4:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <rp6Data+0x1>
 2e8:	81 30       	cpi	r24, 0x01	; 1
 2ea:	19 f4       	brne	.+6      	; 0x2f2 <__vector_25+0x13e>
					rp6Data.driveDirection = 0;
 2ec:	10 92 29 03 	sts	0x0329, r1	; 0x800329 <rp6Data+0x1>
 2f0:	30 c0       	rjmp	.+96     	; 0x352 <__vector_25+0x19e>
				} else {
					rp6Data.driveDirection = 1;
 2f2:	81 e0       	ldi	r24, 0x01	; 1
 2f4:	80 93 29 03 	sts	0x0329, r24	; 0x800329 <rp6Data+0x1>
 2f8:	2c c0       	rjmp	.+88     	; 0x352 <__vector_25+0x19e>
				}
				break;
				
				case 'a':
				if (rp6Data.turnDirection == -1) {
 2fa:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <rp6Data+0x2>
 2fe:	8f 3f       	cpi	r24, 0xFF	; 255
 300:	19 f4       	brne	.+6      	; 0x308 <__vector_25+0x154>
					rp6Data.turnDirection = 0;
 302:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <rp6Data+0x2>
 306:	25 c0       	rjmp	.+74     	; 0x352 <__vector_25+0x19e>
					} else {
					rp6Data.turnDirection = -1;
 308:	8f ef       	ldi	r24, 0xFF	; 255
 30a:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <rp6Data+0x2>
 30e:	21 c0       	rjmp	.+66     	; 0x352 <__vector_25+0x19e>
				}
				break;
				
				case 's':
				if (rp6Data.driveDirection == -1) {
 310:	80 91 29 03 	lds	r24, 0x0329	; 0x800329 <rp6Data+0x1>
 314:	8f 3f       	cpi	r24, 0xFF	; 255
 316:	19 f4       	brne	.+6      	; 0x31e <__vector_25+0x16a>
					rp6Data.driveDirection = 0;
 318:	10 92 29 03 	sts	0x0329, r1	; 0x800329 <rp6Data+0x1>
 31c:	1a c0       	rjmp	.+52     	; 0x352 <__vector_25+0x19e>
				} else {
					rp6Data.driveDirection = -1;
 31e:	8f ef       	ldi	r24, 0xFF	; 255
 320:	80 93 29 03 	sts	0x0329, r24	; 0x800329 <rp6Data+0x1>
 324:	16 c0       	rjmp	.+44     	; 0x352 <__vector_25+0x19e>
				}
				break;
				
				case 'd':
				if (rp6Data.turnDirection == 1) {
 326:	80 91 2a 03 	lds	r24, 0x032A	; 0x80032a <rp6Data+0x2>
 32a:	81 30       	cpi	r24, 0x01	; 1
 32c:	19 f4       	brne	.+6      	; 0x334 <__vector_25+0x180>
					rp6Data.turnDirection = 0;
 32e:	10 92 2a 03 	sts	0x032A, r1	; 0x80032a <rp6Data+0x2>
 332:	0f c0       	rjmp	.+30     	; 0x352 <__vector_25+0x19e>
					} else {
					rp6Data.turnDirection = 1;
 334:	81 e0       	ldi	r24, 0x01	; 1
 336:	80 93 2a 03 	sts	0x032A, r24	; 0x80032a <rp6Data+0x2>
 33a:	0b c0       	rjmp	.+22     	; 0x352 <__vector_25+0x19e>
			case 't':
			command = received;
		}
	} else if (received == '\r') {												//If received contains a carriage return
		
		uint16_t intValue = 0;													//Value to be passed over I2C with the command. Default value is 0.
 33c:	e1 2c       	mov	r14, r1
 33e:	f1 2c       	mov	r15, r1
					rp6Data.turnDirection = 1;
				}
				break;
				
				case 't':
				if (intValue <= 100) {
 340:	85 e6       	ldi	r24, 0x65	; 101
 342:	e8 16       	cp	r14, r24
 344:	f1 04       	cpc	r15, r1
 346:	28 f4       	brcc	.+10     	; 0x352 <__vector_25+0x19e>
 348:	02 c0       	rjmp	.+4      	; 0x34e <__vector_25+0x19a>
		uint16_t intValue = 0;													//Value to be passed over I2C with the command. Default value is 0.
		
		if (command == 't') {													//If the command is 't', the buffer is converted to an integer and stored in intValue
			uint8_t charToInt;
		
			for (uint8_t i = 0; i <= bufferPos; i++) {
 34a:	e1 2c       	mov	r14, r1
 34c:	f1 2c       	mov	r15, r1
				}
				break;
				
				case 't':
				if (intValue <= 100) {
					rp6Data.driveSpeed = intValue;
 34e:	e0 92 28 03 	sts	0x0328, r14	; 0x800328 <rp6Data>
				}
				break;
			}
		
			command = 0;														//Reset command
 352:	10 92 27 03 	sts	0x0327, r1	; 0x800327 <command.1935>
			bufferPos = -1;													//Reset buffer position
 356:	8f ef       	ldi	r24, 0xFF	; 255
 358:	9f ef       	ldi	r25, 0xFF	; 255
 35a:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__data_start+0x1>
 35e:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
			
			globalVariablesTransmitUSART(rp6Data.driveDirection, rp6Data.turnDirection, rp6Data.driveSpeed);
 362:	e8 e2       	ldi	r30, 0x28	; 40
 364:	f3 e0       	ldi	r31, 0x03	; 3
 366:	40 81       	ld	r20, Z
 368:	04 2e       	mov	r0, r20
 36a:	00 0c       	add	r0, r0
 36c:	55 0b       	sbc	r21, r21
 36e:	62 81       	ldd	r22, Z+2	; 0x02
 370:	06 2e       	mov	r0, r22
 372:	00 0c       	add	r0, r0
 374:	77 0b       	sbc	r23, r23
 376:	81 81       	ldd	r24, Z+1	; 0x01
 378:	08 2e       	mov	r0, r24
 37a:	00 0c       	add	r0, r0
 37c:	99 0b       	sbc	r25, r25
 37e:	6c d0       	rcall	.+216    	; 0x458 <globalVariablesTransmitUSART>
		}
	}
}
 380:	ff 91       	pop	r31
 382:	ef 91       	pop	r30
 384:	df 91       	pop	r29
 386:	cf 91       	pop	r28
 388:	bf 91       	pop	r27
 38a:	af 91       	pop	r26
 38c:	9f 91       	pop	r25
 38e:	8f 91       	pop	r24
 390:	7f 91       	pop	r23
 392:	6f 91       	pop	r22
 394:	5f 91       	pop	r21
 396:	4f 91       	pop	r20
 398:	3f 91       	pop	r19
 39a:	2f 91       	pop	r18
 39c:	1f 91       	pop	r17
 39e:	0f 91       	pop	r16
 3a0:	ff 90       	pop	r15
 3a2:	ef 90       	pop	r14
 3a4:	df 90       	pop	r13
 3a6:	0f 90       	pop	r0
 3a8:	0b be       	out	0x3b, r0	; 59
 3aa:	0f 90       	pop	r0
 3ac:	0f be       	out	0x3f, r0	; 63
 3ae:	0f 90       	pop	r0
 3b0:	1f 90       	pop	r1
 3b2:	18 95       	reti

000003b4 <main>:

int main(void)
{	
	//USART initialization
	UCSR0A = 0x00;								
 3b4:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7e00c0>
	UCSR0B |= (1 << RXCIE0 | 1 << RXEN0);		//Enable USART receiver, receiver interrupt
 3b8:	e1 ec       	ldi	r30, 0xC1	; 193
 3ba:	f0 e0       	ldi	r31, 0x00	; 0
 3bc:	80 81       	ld	r24, Z
 3be:	80 69       	ori	r24, 0x90	; 144
 3c0:	80 83       	st	Z, r24
	UCSR0B |= 1 << TXEN0;						/*Transmitter enabled for testing*/
 3c2:	80 81       	ld	r24, Z
 3c4:	88 60       	ori	r24, 0x08	; 8
 3c6:	80 83       	st	Z, r24
	UCSR0C |= (1 << UCSZ01 | 1 << UCSZ00);		//Asynchronous USART, Parity none, 1 Stop bit, 8-bit character size
 3c8:	e2 ec       	ldi	r30, 0xC2	; 194
 3ca:	f0 e0       	ldi	r31, 0x00	; 0
 3cc:	80 81       	ld	r24, Z
 3ce:	86 60       	ori	r24, 0x06	; 6
 3d0:	80 83       	st	Z, r24
	UBRR0H = 00;
 3d2:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7e00c5>
	UBRR0L = 103;								//Baudrate 9600
 3d6:	87 e6       	ldi	r24, 0x67	; 103
 3d8:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7e00c4>
	
	sei();										//Enable interrupt routines
 3dc:	78 94       	sei
	init_master();
 3de:	e1 de       	rcall	.-574    	; 0x1a2 <init_master>
	PORTD |= 0b00000011; //Pullup SDA and SCL
 3e0:	8b b1       	in	r24, 0x0b	; 11
 3e2:	83 60       	ori	r24, 0x03	; 3
 3e4:	8b b9       	out	0x0b, r24	; 11
 3e6:	ff cf       	rjmp	.-2      	; 0x3e6 <main+0x32>

000003e8 <writeChar>:
 3e8:	e0 ec       	ldi	r30, 0xC0	; 192
 3ea:	f0 e0       	ldi	r31, 0x00	; 0
 3ec:	90 81       	ld	r25, Z
 3ee:	95 ff       	sbrs	r25, 5
 3f0:	fd cf       	rjmp	.-6      	; 0x3ec <writeChar+0x4>
 3f2:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7e00c6>
 3f6:	08 95       	ret

000003f8 <writeString>:
 3f8:	0f 93       	push	r16
 3fa:	1f 93       	push	r17
 3fc:	cf 93       	push	r28
 3fe:	fc 01       	movw	r30, r24
 400:	80 81       	ld	r24, Z
 402:	88 23       	and	r24, r24
 404:	51 f0       	breq	.+20     	; 0x41a <__LOCK_REGION_LENGTH__+0x1a>
 406:	8f 01       	movw	r16, r30
 408:	c0 e0       	ldi	r28, 0x00	; 0
 40a:	ee df       	rcall	.-36     	; 0x3e8 <writeChar>
 40c:	cf 5f       	subi	r28, 0xFF	; 255
 40e:	f8 01       	movw	r30, r16
 410:	ec 0f       	add	r30, r28
 412:	f1 1d       	adc	r31, r1
 414:	80 81       	ld	r24, Z
 416:	81 11       	cpse	r24, r1
 418:	f8 cf       	rjmp	.-16     	; 0x40a <__LOCK_REGION_LENGTH__+0xa>
 41a:	cf 91       	pop	r28
 41c:	1f 91       	pop	r17
 41e:	0f 91       	pop	r16
 420:	08 95       	ret

00000422 <writeInt>:
 422:	cf 93       	push	r28
 424:	df 93       	push	r29
 426:	cd b7       	in	r28, 0x3d	; 61
 428:	de b7       	in	r29, 0x3e	; 62
 42a:	28 97       	sbiw	r28, 0x08	; 8
 42c:	0f b6       	in	r0, 0x3f	; 63
 42e:	f8 94       	cli
 430:	de bf       	out	0x3e, r29	; 62
 432:	0f be       	out	0x3f, r0	; 63
 434:	cd bf       	out	0x3d, r28	; 61
 436:	4a e0       	ldi	r20, 0x0A	; 10
 438:	be 01       	movw	r22, r28
 43a:	6f 5f       	subi	r22, 0xFF	; 255
 43c:	7f 4f       	sbci	r23, 0xFF	; 255
 43e:	82 d3       	rcall	.+1796   	; 0xb44 <__itoa_ncheck>
 440:	ce 01       	movw	r24, r28
 442:	01 96       	adiw	r24, 0x01	; 1
 444:	d9 df       	rcall	.-78     	; 0x3f8 <writeString>
 446:	28 96       	adiw	r28, 0x08	; 8
 448:	0f b6       	in	r0, 0x3f	; 63
 44a:	f8 94       	cli
 44c:	de bf       	out	0x3e, r29	; 62
 44e:	0f be       	out	0x3f, r0	; 63
 450:	cd bf       	out	0x3d, r28	; 61
 452:	df 91       	pop	r29
 454:	cf 91       	pop	r28
 456:	08 95       	ret

00000458 <globalVariablesTransmitUSART>:
 458:	ef 92       	push	r14
 45a:	ff 92       	push	r15
 45c:	0f 93       	push	r16
 45e:	1f 93       	push	r17
 460:	cf 93       	push	r28
 462:	df 93       	push	r29
 464:	7c 01       	movw	r14, r24
 466:	8b 01       	movw	r16, r22
 468:	ea 01       	movw	r28, r20
 46a:	85 e0       	ldi	r24, 0x05	; 5
 46c:	92 e0       	ldi	r25, 0x02	; 2
 46e:	c4 df       	rcall	.-120    	; 0x3f8 <writeString>
 470:	c7 01       	movw	r24, r14
 472:	d7 df       	rcall	.-82     	; 0x422 <writeInt>
 474:	81 e1       	ldi	r24, 0x11	; 17
 476:	92 e0       	ldi	r25, 0x02	; 2
 478:	bf df       	rcall	.-130    	; 0x3f8 <writeString>
 47a:	c8 01       	movw	r24, r16
 47c:	d2 df       	rcall	.-92     	; 0x422 <writeInt>
 47e:	8a e1       	ldi	r24, 0x1A	; 26
 480:	92 e0       	ldi	r25, 0x02	; 2
 482:	ba df       	rcall	.-140    	; 0x3f8 <writeString>
 484:	ce 01       	movw	r24, r28
 486:	cd df       	rcall	.-102    	; 0x422 <writeInt>
 488:	82 e0       	ldi	r24, 0x02	; 2
 48a:	92 e0       	ldi	r25, 0x02	; 2
 48c:	b5 df       	rcall	.-150    	; 0x3f8 <writeString>
 48e:	df 91       	pop	r29
 490:	cf 91       	pop	r28
 492:	1f 91       	pop	r17
 494:	0f 91       	pop	r16
 496:	ff 90       	pop	r15
 498:	ef 90       	pop	r14
 49a:	08 95       	ret

0000049c <__subsf3>:
 49c:	50 58       	subi	r21, 0x80	; 128

0000049e <__addsf3>:
 49e:	bb 27       	eor	r27, r27
 4a0:	aa 27       	eor	r26, r26
 4a2:	0e d0       	rcall	.+28     	; 0x4c0 <__addsf3x>
 4a4:	e5 c0       	rjmp	.+458    	; 0x670 <__fp_round>
 4a6:	d6 d0       	rcall	.+428    	; 0x654 <__fp_pscA>
 4a8:	30 f0       	brcs	.+12     	; 0x4b6 <__addsf3+0x18>
 4aa:	db d0       	rcall	.+438    	; 0x662 <__fp_pscB>
 4ac:	20 f0       	brcs	.+8      	; 0x4b6 <__addsf3+0x18>
 4ae:	31 f4       	brne	.+12     	; 0x4bc <__addsf3+0x1e>
 4b0:	9f 3f       	cpi	r25, 0xFF	; 255
 4b2:	11 f4       	brne	.+4      	; 0x4b8 <__addsf3+0x1a>
 4b4:	1e f4       	brtc	.+6      	; 0x4bc <__addsf3+0x1e>
 4b6:	cb c0       	rjmp	.+406    	; 0x64e <__fp_nan>
 4b8:	0e f4       	brtc	.+2      	; 0x4bc <__addsf3+0x1e>
 4ba:	e0 95       	com	r30
 4bc:	e7 fb       	bst	r30, 7
 4be:	c1 c0       	rjmp	.+386    	; 0x642 <__fp_inf>

000004c0 <__addsf3x>:
 4c0:	e9 2f       	mov	r30, r25
 4c2:	e7 d0       	rcall	.+462    	; 0x692 <__fp_split3>
 4c4:	80 f3       	brcs	.-32     	; 0x4a6 <__addsf3+0x8>
 4c6:	ba 17       	cp	r27, r26
 4c8:	62 07       	cpc	r22, r18
 4ca:	73 07       	cpc	r23, r19
 4cc:	84 07       	cpc	r24, r20
 4ce:	95 07       	cpc	r25, r21
 4d0:	18 f0       	brcs	.+6      	; 0x4d8 <__addsf3x+0x18>
 4d2:	71 f4       	brne	.+28     	; 0x4f0 <__addsf3x+0x30>
 4d4:	9e f5       	brtc	.+102    	; 0x53c <__addsf3x+0x7c>
 4d6:	ff c0       	rjmp	.+510    	; 0x6d6 <__fp_zero>
 4d8:	0e f4       	brtc	.+2      	; 0x4dc <__addsf3x+0x1c>
 4da:	e0 95       	com	r30
 4dc:	0b 2e       	mov	r0, r27
 4de:	ba 2f       	mov	r27, r26
 4e0:	a0 2d       	mov	r26, r0
 4e2:	0b 01       	movw	r0, r22
 4e4:	b9 01       	movw	r22, r18
 4e6:	90 01       	movw	r18, r0
 4e8:	0c 01       	movw	r0, r24
 4ea:	ca 01       	movw	r24, r20
 4ec:	a0 01       	movw	r20, r0
 4ee:	11 24       	eor	r1, r1
 4f0:	ff 27       	eor	r31, r31
 4f2:	59 1b       	sub	r21, r25
 4f4:	99 f0       	breq	.+38     	; 0x51c <__addsf3x+0x5c>
 4f6:	59 3f       	cpi	r21, 0xF9	; 249
 4f8:	50 f4       	brcc	.+20     	; 0x50e <__addsf3x+0x4e>
 4fa:	50 3e       	cpi	r21, 0xE0	; 224
 4fc:	68 f1       	brcs	.+90     	; 0x558 <__addsf3x+0x98>
 4fe:	1a 16       	cp	r1, r26
 500:	f0 40       	sbci	r31, 0x00	; 0
 502:	a2 2f       	mov	r26, r18
 504:	23 2f       	mov	r18, r19
 506:	34 2f       	mov	r19, r20
 508:	44 27       	eor	r20, r20
 50a:	58 5f       	subi	r21, 0xF8	; 248
 50c:	f3 cf       	rjmp	.-26     	; 0x4f4 <__addsf3x+0x34>
 50e:	46 95       	lsr	r20
 510:	37 95       	ror	r19
 512:	27 95       	ror	r18
 514:	a7 95       	ror	r26
 516:	f0 40       	sbci	r31, 0x00	; 0
 518:	53 95       	inc	r21
 51a:	c9 f7       	brne	.-14     	; 0x50e <__addsf3x+0x4e>
 51c:	7e f4       	brtc	.+30     	; 0x53c <__addsf3x+0x7c>
 51e:	1f 16       	cp	r1, r31
 520:	ba 0b       	sbc	r27, r26
 522:	62 0b       	sbc	r22, r18
 524:	73 0b       	sbc	r23, r19
 526:	84 0b       	sbc	r24, r20
 528:	ba f0       	brmi	.+46     	; 0x558 <__addsf3x+0x98>
 52a:	91 50       	subi	r25, 0x01	; 1
 52c:	a1 f0       	breq	.+40     	; 0x556 <__addsf3x+0x96>
 52e:	ff 0f       	add	r31, r31
 530:	bb 1f       	adc	r27, r27
 532:	66 1f       	adc	r22, r22
 534:	77 1f       	adc	r23, r23
 536:	88 1f       	adc	r24, r24
 538:	c2 f7       	brpl	.-16     	; 0x52a <__addsf3x+0x6a>
 53a:	0e c0       	rjmp	.+28     	; 0x558 <__addsf3x+0x98>
 53c:	ba 0f       	add	r27, r26
 53e:	62 1f       	adc	r22, r18
 540:	73 1f       	adc	r23, r19
 542:	84 1f       	adc	r24, r20
 544:	48 f4       	brcc	.+18     	; 0x558 <__addsf3x+0x98>
 546:	87 95       	ror	r24
 548:	77 95       	ror	r23
 54a:	67 95       	ror	r22
 54c:	b7 95       	ror	r27
 54e:	f7 95       	ror	r31
 550:	9e 3f       	cpi	r25, 0xFE	; 254
 552:	08 f0       	brcs	.+2      	; 0x556 <__addsf3x+0x96>
 554:	b3 cf       	rjmp	.-154    	; 0x4bc <__addsf3+0x1e>
 556:	93 95       	inc	r25
 558:	88 0f       	add	r24, r24
 55a:	08 f0       	brcs	.+2      	; 0x55e <__addsf3x+0x9e>
 55c:	99 27       	eor	r25, r25
 55e:	ee 0f       	add	r30, r30
 560:	97 95       	ror	r25
 562:	87 95       	ror	r24
 564:	08 95       	ret

00000566 <__fixsfsi>:
 566:	04 d0       	rcall	.+8      	; 0x570 <__fixunssfsi>
 568:	68 94       	set
 56a:	b1 11       	cpse	r27, r1
 56c:	b5 c0       	rjmp	.+362    	; 0x6d8 <__fp_szero>
 56e:	08 95       	ret

00000570 <__fixunssfsi>:
 570:	98 d0       	rcall	.+304    	; 0x6a2 <__fp_splitA>
 572:	88 f0       	brcs	.+34     	; 0x596 <__fixunssfsi+0x26>
 574:	9f 57       	subi	r25, 0x7F	; 127
 576:	90 f0       	brcs	.+36     	; 0x59c <__fixunssfsi+0x2c>
 578:	b9 2f       	mov	r27, r25
 57a:	99 27       	eor	r25, r25
 57c:	b7 51       	subi	r27, 0x17	; 23
 57e:	a0 f0       	brcs	.+40     	; 0x5a8 <__fixunssfsi+0x38>
 580:	d1 f0       	breq	.+52     	; 0x5b6 <__fixunssfsi+0x46>
 582:	66 0f       	add	r22, r22
 584:	77 1f       	adc	r23, r23
 586:	88 1f       	adc	r24, r24
 588:	99 1f       	adc	r25, r25
 58a:	1a f0       	brmi	.+6      	; 0x592 <__fixunssfsi+0x22>
 58c:	ba 95       	dec	r27
 58e:	c9 f7       	brne	.-14     	; 0x582 <__fixunssfsi+0x12>
 590:	12 c0       	rjmp	.+36     	; 0x5b6 <__fixunssfsi+0x46>
 592:	b1 30       	cpi	r27, 0x01	; 1
 594:	81 f0       	breq	.+32     	; 0x5b6 <__fixunssfsi+0x46>
 596:	9f d0       	rcall	.+318    	; 0x6d6 <__fp_zero>
 598:	b1 e0       	ldi	r27, 0x01	; 1
 59a:	08 95       	ret
 59c:	9c c0       	rjmp	.+312    	; 0x6d6 <__fp_zero>
 59e:	67 2f       	mov	r22, r23
 5a0:	78 2f       	mov	r23, r24
 5a2:	88 27       	eor	r24, r24
 5a4:	b8 5f       	subi	r27, 0xF8	; 248
 5a6:	39 f0       	breq	.+14     	; 0x5b6 <__fixunssfsi+0x46>
 5a8:	b9 3f       	cpi	r27, 0xF9	; 249
 5aa:	cc f3       	brlt	.-14     	; 0x59e <__fixunssfsi+0x2e>
 5ac:	86 95       	lsr	r24
 5ae:	77 95       	ror	r23
 5b0:	67 95       	ror	r22
 5b2:	b3 95       	inc	r27
 5b4:	d9 f7       	brne	.-10     	; 0x5ac <__fixunssfsi+0x3c>
 5b6:	3e f4       	brtc	.+14     	; 0x5c6 <__fixunssfsi+0x56>
 5b8:	90 95       	com	r25
 5ba:	80 95       	com	r24
 5bc:	70 95       	com	r23
 5be:	61 95       	neg	r22
 5c0:	7f 4f       	sbci	r23, 0xFF	; 255
 5c2:	8f 4f       	sbci	r24, 0xFF	; 255
 5c4:	9f 4f       	sbci	r25, 0xFF	; 255
 5c6:	08 95       	ret

000005c8 <__floatunsisf>:
 5c8:	e8 94       	clt
 5ca:	09 c0       	rjmp	.+18     	; 0x5de <__floatsisf+0x12>

000005cc <__floatsisf>:
 5cc:	97 fb       	bst	r25, 7
 5ce:	3e f4       	brtc	.+14     	; 0x5de <__floatsisf+0x12>
 5d0:	90 95       	com	r25
 5d2:	80 95       	com	r24
 5d4:	70 95       	com	r23
 5d6:	61 95       	neg	r22
 5d8:	7f 4f       	sbci	r23, 0xFF	; 255
 5da:	8f 4f       	sbci	r24, 0xFF	; 255
 5dc:	9f 4f       	sbci	r25, 0xFF	; 255
 5de:	99 23       	and	r25, r25
 5e0:	a9 f0       	breq	.+42     	; 0x60c <__floatsisf+0x40>
 5e2:	f9 2f       	mov	r31, r25
 5e4:	96 e9       	ldi	r25, 0x96	; 150
 5e6:	bb 27       	eor	r27, r27
 5e8:	93 95       	inc	r25
 5ea:	f6 95       	lsr	r31
 5ec:	87 95       	ror	r24
 5ee:	77 95       	ror	r23
 5f0:	67 95       	ror	r22
 5f2:	b7 95       	ror	r27
 5f4:	f1 11       	cpse	r31, r1
 5f6:	f8 cf       	rjmp	.-16     	; 0x5e8 <__floatsisf+0x1c>
 5f8:	fa f4       	brpl	.+62     	; 0x638 <__floatsisf+0x6c>
 5fa:	bb 0f       	add	r27, r27
 5fc:	11 f4       	brne	.+4      	; 0x602 <__floatsisf+0x36>
 5fe:	60 ff       	sbrs	r22, 0
 600:	1b c0       	rjmp	.+54     	; 0x638 <__floatsisf+0x6c>
 602:	6f 5f       	subi	r22, 0xFF	; 255
 604:	7f 4f       	sbci	r23, 0xFF	; 255
 606:	8f 4f       	sbci	r24, 0xFF	; 255
 608:	9f 4f       	sbci	r25, 0xFF	; 255
 60a:	16 c0       	rjmp	.+44     	; 0x638 <__floatsisf+0x6c>
 60c:	88 23       	and	r24, r24
 60e:	11 f0       	breq	.+4      	; 0x614 <__floatsisf+0x48>
 610:	96 e9       	ldi	r25, 0x96	; 150
 612:	11 c0       	rjmp	.+34     	; 0x636 <__floatsisf+0x6a>
 614:	77 23       	and	r23, r23
 616:	21 f0       	breq	.+8      	; 0x620 <__floatsisf+0x54>
 618:	9e e8       	ldi	r25, 0x8E	; 142
 61a:	87 2f       	mov	r24, r23
 61c:	76 2f       	mov	r23, r22
 61e:	05 c0       	rjmp	.+10     	; 0x62a <__floatsisf+0x5e>
 620:	66 23       	and	r22, r22
 622:	71 f0       	breq	.+28     	; 0x640 <__floatsisf+0x74>
 624:	96 e8       	ldi	r25, 0x86	; 134
 626:	86 2f       	mov	r24, r22
 628:	70 e0       	ldi	r23, 0x00	; 0
 62a:	60 e0       	ldi	r22, 0x00	; 0
 62c:	2a f0       	brmi	.+10     	; 0x638 <__floatsisf+0x6c>
 62e:	9a 95       	dec	r25
 630:	66 0f       	add	r22, r22
 632:	77 1f       	adc	r23, r23
 634:	88 1f       	adc	r24, r24
 636:	da f7       	brpl	.-10     	; 0x62e <__floatsisf+0x62>
 638:	88 0f       	add	r24, r24
 63a:	96 95       	lsr	r25
 63c:	87 95       	ror	r24
 63e:	97 f9       	bld	r25, 7
 640:	08 95       	ret

00000642 <__fp_inf>:
 642:	97 f9       	bld	r25, 7
 644:	9f 67       	ori	r25, 0x7F	; 127
 646:	80 e8       	ldi	r24, 0x80	; 128
 648:	70 e0       	ldi	r23, 0x00	; 0
 64a:	60 e0       	ldi	r22, 0x00	; 0
 64c:	08 95       	ret

0000064e <__fp_nan>:
 64e:	9f ef       	ldi	r25, 0xFF	; 255
 650:	80 ec       	ldi	r24, 0xC0	; 192
 652:	08 95       	ret

00000654 <__fp_pscA>:
 654:	00 24       	eor	r0, r0
 656:	0a 94       	dec	r0
 658:	16 16       	cp	r1, r22
 65a:	17 06       	cpc	r1, r23
 65c:	18 06       	cpc	r1, r24
 65e:	09 06       	cpc	r0, r25
 660:	08 95       	ret

00000662 <__fp_pscB>:
 662:	00 24       	eor	r0, r0
 664:	0a 94       	dec	r0
 666:	12 16       	cp	r1, r18
 668:	13 06       	cpc	r1, r19
 66a:	14 06       	cpc	r1, r20
 66c:	05 06       	cpc	r0, r21
 66e:	08 95       	ret

00000670 <__fp_round>:
 670:	09 2e       	mov	r0, r25
 672:	03 94       	inc	r0
 674:	00 0c       	add	r0, r0
 676:	11 f4       	brne	.+4      	; 0x67c <__fp_round+0xc>
 678:	88 23       	and	r24, r24
 67a:	52 f0       	brmi	.+20     	; 0x690 <__fp_round+0x20>
 67c:	bb 0f       	add	r27, r27
 67e:	40 f4       	brcc	.+16     	; 0x690 <__fp_round+0x20>
 680:	bf 2b       	or	r27, r31
 682:	11 f4       	brne	.+4      	; 0x688 <__fp_round+0x18>
 684:	60 ff       	sbrs	r22, 0
 686:	04 c0       	rjmp	.+8      	; 0x690 <__fp_round+0x20>
 688:	6f 5f       	subi	r22, 0xFF	; 255
 68a:	7f 4f       	sbci	r23, 0xFF	; 255
 68c:	8f 4f       	sbci	r24, 0xFF	; 255
 68e:	9f 4f       	sbci	r25, 0xFF	; 255
 690:	08 95       	ret

00000692 <__fp_split3>:
 692:	57 fd       	sbrc	r21, 7
 694:	90 58       	subi	r25, 0x80	; 128
 696:	44 0f       	add	r20, r20
 698:	55 1f       	adc	r21, r21
 69a:	59 f0       	breq	.+22     	; 0x6b2 <__fp_splitA+0x10>
 69c:	5f 3f       	cpi	r21, 0xFF	; 255
 69e:	71 f0       	breq	.+28     	; 0x6bc <__fp_splitA+0x1a>
 6a0:	47 95       	ror	r20

000006a2 <__fp_splitA>:
 6a2:	88 0f       	add	r24, r24
 6a4:	97 fb       	bst	r25, 7
 6a6:	99 1f       	adc	r25, r25
 6a8:	61 f0       	breq	.+24     	; 0x6c2 <__fp_splitA+0x20>
 6aa:	9f 3f       	cpi	r25, 0xFF	; 255
 6ac:	79 f0       	breq	.+30     	; 0x6cc <__fp_splitA+0x2a>
 6ae:	87 95       	ror	r24
 6b0:	08 95       	ret
 6b2:	12 16       	cp	r1, r18
 6b4:	13 06       	cpc	r1, r19
 6b6:	14 06       	cpc	r1, r20
 6b8:	55 1f       	adc	r21, r21
 6ba:	f2 cf       	rjmp	.-28     	; 0x6a0 <__fp_split3+0xe>
 6bc:	46 95       	lsr	r20
 6be:	f1 df       	rcall	.-30     	; 0x6a2 <__fp_splitA>
 6c0:	08 c0       	rjmp	.+16     	; 0x6d2 <__fp_splitA+0x30>
 6c2:	16 16       	cp	r1, r22
 6c4:	17 06       	cpc	r1, r23
 6c6:	18 06       	cpc	r1, r24
 6c8:	99 1f       	adc	r25, r25
 6ca:	f1 cf       	rjmp	.-30     	; 0x6ae <__fp_splitA+0xc>
 6cc:	86 95       	lsr	r24
 6ce:	71 05       	cpc	r23, r1
 6d0:	61 05       	cpc	r22, r1
 6d2:	08 94       	sec
 6d4:	08 95       	ret

000006d6 <__fp_zero>:
 6d6:	e8 94       	clt

000006d8 <__fp_szero>:
 6d8:	bb 27       	eor	r27, r27
 6da:	66 27       	eor	r22, r22
 6dc:	77 27       	eor	r23, r23
 6de:	cb 01       	movw	r24, r22
 6e0:	97 f9       	bld	r25, 7
 6e2:	08 95       	ret

000006e4 <pow>:
 6e4:	fa 01       	movw	r30, r20
 6e6:	ee 0f       	add	r30, r30
 6e8:	ff 1f       	adc	r31, r31
 6ea:	30 96       	adiw	r30, 0x00	; 0
 6ec:	21 05       	cpc	r18, r1
 6ee:	31 05       	cpc	r19, r1
 6f0:	99 f1       	breq	.+102    	; 0x758 <pow+0x74>
 6f2:	61 15       	cp	r22, r1
 6f4:	71 05       	cpc	r23, r1
 6f6:	61 f4       	brne	.+24     	; 0x710 <pow+0x2c>
 6f8:	80 38       	cpi	r24, 0x80	; 128
 6fa:	bf e3       	ldi	r27, 0x3F	; 63
 6fc:	9b 07       	cpc	r25, r27
 6fe:	49 f1       	breq	.+82     	; 0x752 <pow+0x6e>
 700:	68 94       	set
 702:	90 38       	cpi	r25, 0x80	; 128
 704:	81 05       	cpc	r24, r1
 706:	61 f0       	breq	.+24     	; 0x720 <pow+0x3c>
 708:	80 38       	cpi	r24, 0x80	; 128
 70a:	bf ef       	ldi	r27, 0xFF	; 255
 70c:	9b 07       	cpc	r25, r27
 70e:	41 f0       	breq	.+16     	; 0x720 <pow+0x3c>
 710:	99 23       	and	r25, r25
 712:	42 f5       	brpl	.+80     	; 0x764 <pow+0x80>
 714:	ff 3f       	cpi	r31, 0xFF	; 255
 716:	e1 05       	cpc	r30, r1
 718:	31 05       	cpc	r19, r1
 71a:	21 05       	cpc	r18, r1
 71c:	11 f1       	breq	.+68     	; 0x762 <pow+0x7e>
 71e:	e8 94       	clt
 720:	08 94       	sec
 722:	e7 95       	ror	r30
 724:	d9 01       	movw	r26, r18
 726:	aa 23       	and	r26, r26
 728:	29 f4       	brne	.+10     	; 0x734 <pow+0x50>
 72a:	ab 2f       	mov	r26, r27
 72c:	be 2f       	mov	r27, r30
 72e:	f8 5f       	subi	r31, 0xF8	; 248
 730:	d0 f3       	brcs	.-12     	; 0x726 <pow+0x42>
 732:	10 c0       	rjmp	.+32     	; 0x754 <pow+0x70>
 734:	ff 5f       	subi	r31, 0xFF	; 255
 736:	70 f4       	brcc	.+28     	; 0x754 <pow+0x70>
 738:	a6 95       	lsr	r26
 73a:	e0 f7       	brcc	.-8      	; 0x734 <pow+0x50>
 73c:	f7 39       	cpi	r31, 0x97	; 151
 73e:	50 f0       	brcs	.+20     	; 0x754 <pow+0x70>
 740:	19 f0       	breq	.+6      	; 0x748 <pow+0x64>
 742:	ff 3a       	cpi	r31, 0xAF	; 175
 744:	38 f4       	brcc	.+14     	; 0x754 <pow+0x70>
 746:	9f 77       	andi	r25, 0x7F	; 127
 748:	9f 93       	push	r25
 74a:	0c d0       	rcall	.+24     	; 0x764 <pow+0x80>
 74c:	0f 90       	pop	r0
 74e:	07 fc       	sbrc	r0, 7
 750:	90 58       	subi	r25, 0x80	; 128
 752:	08 95       	ret
 754:	3e f0       	brts	.+14     	; 0x764 <pow+0x80>
 756:	7b cf       	rjmp	.-266    	; 0x64e <__fp_nan>
 758:	60 e0       	ldi	r22, 0x00	; 0
 75a:	70 e0       	ldi	r23, 0x00	; 0
 75c:	80 e8       	ldi	r24, 0x80	; 128
 75e:	9f e3       	ldi	r25, 0x3F	; 63
 760:	08 95       	ret
 762:	4f e7       	ldi	r20, 0x7F	; 127
 764:	9f 77       	andi	r25, 0x7F	; 127
 766:	5f 93       	push	r21
 768:	4f 93       	push	r20
 76a:	3f 93       	push	r19
 76c:	2f 93       	push	r18
 76e:	9e d0       	rcall	.+316    	; 0x8ac <log>
 770:	2f 91       	pop	r18
 772:	3f 91       	pop	r19
 774:	4f 91       	pop	r20
 776:	5f 91       	pop	r21
 778:	0c d1       	rcall	.+536    	; 0x992 <__mulsf3>
 77a:	05 c0       	rjmp	.+10     	; 0x786 <exp>
 77c:	19 f4       	brne	.+6      	; 0x784 <pow+0xa0>
 77e:	0e f0       	brts	.+2      	; 0x782 <pow+0x9e>
 780:	60 cf       	rjmp	.-320    	; 0x642 <__fp_inf>
 782:	a9 cf       	rjmp	.-174    	; 0x6d6 <__fp_zero>
 784:	64 cf       	rjmp	.-312    	; 0x64e <__fp_nan>

00000786 <exp>:
 786:	8d df       	rcall	.-230    	; 0x6a2 <__fp_splitA>
 788:	c8 f3       	brcs	.-14     	; 0x77c <pow+0x98>
 78a:	96 38       	cpi	r25, 0x86	; 134
 78c:	c0 f7       	brcc	.-16     	; 0x77e <pow+0x9a>
 78e:	07 f8       	bld	r0, 7
 790:	0f 92       	push	r0
 792:	e8 94       	clt
 794:	2b e3       	ldi	r18, 0x3B	; 59
 796:	3a ea       	ldi	r19, 0xAA	; 170
 798:	48 eb       	ldi	r20, 0xB8	; 184
 79a:	5f e7       	ldi	r21, 0x7F	; 127
 79c:	08 d1       	rcall	.+528    	; 0x9ae <__mulsf3_pse>
 79e:	0f 92       	push	r0
 7a0:	0f 92       	push	r0
 7a2:	0f 92       	push	r0
 7a4:	4d b7       	in	r20, 0x3d	; 61
 7a6:	5e b7       	in	r21, 0x3e	; 62
 7a8:	0f 92       	push	r0
 7aa:	c0 d0       	rcall	.+384    	; 0x92c <modf>
 7ac:	e4 ee       	ldi	r30, 0xE4	; 228
 7ae:	f0 e0       	ldi	r31, 0x00	; 0
 7b0:	16 d0       	rcall	.+44     	; 0x7de <__fp_powser>
 7b2:	4f 91       	pop	r20
 7b4:	5f 91       	pop	r21
 7b6:	ef 91       	pop	r30
 7b8:	ff 91       	pop	r31
 7ba:	e5 95       	asr	r30
 7bc:	ee 1f       	adc	r30, r30
 7be:	ff 1f       	adc	r31, r31
 7c0:	49 f0       	breq	.+18     	; 0x7d4 <exp+0x4e>
 7c2:	fe 57       	subi	r31, 0x7E	; 126
 7c4:	e0 68       	ori	r30, 0x80	; 128
 7c6:	44 27       	eor	r20, r20
 7c8:	ee 0f       	add	r30, r30
 7ca:	44 1f       	adc	r20, r20
 7cc:	fa 95       	dec	r31
 7ce:	e1 f7       	brne	.-8      	; 0x7c8 <exp+0x42>
 7d0:	41 95       	neg	r20
 7d2:	55 0b       	sbc	r21, r21
 7d4:	32 d0       	rcall	.+100    	; 0x83a <ldexp>
 7d6:	0f 90       	pop	r0
 7d8:	07 fe       	sbrs	r0, 7
 7da:	26 c0       	rjmp	.+76     	; 0x828 <inverse>
 7dc:	08 95       	ret

000007de <__fp_powser>:
 7de:	df 93       	push	r29
 7e0:	cf 93       	push	r28
 7e2:	1f 93       	push	r17
 7e4:	0f 93       	push	r16
 7e6:	ff 92       	push	r15
 7e8:	ef 92       	push	r14
 7ea:	df 92       	push	r13
 7ec:	7b 01       	movw	r14, r22
 7ee:	8c 01       	movw	r16, r24
 7f0:	68 94       	set
 7f2:	05 c0       	rjmp	.+10     	; 0x7fe <__fp_powser+0x20>
 7f4:	da 2e       	mov	r13, r26
 7f6:	ef 01       	movw	r28, r30
 7f8:	d8 d0       	rcall	.+432    	; 0x9aa <__mulsf3x>
 7fa:	fe 01       	movw	r30, r28
 7fc:	e8 94       	clt
 7fe:	a5 91       	lpm	r26, Z+
 800:	25 91       	lpm	r18, Z+
 802:	35 91       	lpm	r19, Z+
 804:	45 91       	lpm	r20, Z+
 806:	55 91       	lpm	r21, Z+
 808:	ae f3       	brts	.-22     	; 0x7f4 <__fp_powser+0x16>
 80a:	ef 01       	movw	r28, r30
 80c:	59 de       	rcall	.-846    	; 0x4c0 <__addsf3x>
 80e:	fe 01       	movw	r30, r28
 810:	97 01       	movw	r18, r14
 812:	a8 01       	movw	r20, r16
 814:	da 94       	dec	r13
 816:	79 f7       	brne	.-34     	; 0x7f6 <__fp_powser+0x18>
 818:	df 90       	pop	r13
 81a:	ef 90       	pop	r14
 81c:	ff 90       	pop	r15
 81e:	0f 91       	pop	r16
 820:	1f 91       	pop	r17
 822:	cf 91       	pop	r28
 824:	df 91       	pop	r29
 826:	08 95       	ret

00000828 <inverse>:
 828:	9b 01       	movw	r18, r22
 82a:	ac 01       	movw	r20, r24
 82c:	60 e0       	ldi	r22, 0x00	; 0
 82e:	70 e0       	ldi	r23, 0x00	; 0
 830:	80 e8       	ldi	r24, 0x80	; 128
 832:	9f e3       	ldi	r25, 0x3F	; 63
 834:	11 c1       	rjmp	.+546    	; 0xa58 <__divsf3>
 836:	05 cf       	rjmp	.-502    	; 0x642 <__fp_inf>
 838:	77 c1       	rjmp	.+750    	; 0xb28 <__fp_mpack>

0000083a <ldexp>:
 83a:	33 df       	rcall	.-410    	; 0x6a2 <__fp_splitA>
 83c:	e8 f3       	brcs	.-6      	; 0x838 <inverse+0x10>
 83e:	99 23       	and	r25, r25
 840:	d9 f3       	breq	.-10     	; 0x838 <inverse+0x10>
 842:	94 0f       	add	r25, r20
 844:	51 1d       	adc	r21, r1
 846:	bb f3       	brvs	.-18     	; 0x836 <inverse+0xe>
 848:	91 50       	subi	r25, 0x01	; 1
 84a:	50 40       	sbci	r21, 0x00	; 0
 84c:	94 f0       	brlt	.+36     	; 0x872 <ldexp+0x38>
 84e:	59 f0       	breq	.+22     	; 0x866 <ldexp+0x2c>
 850:	88 23       	and	r24, r24
 852:	32 f0       	brmi	.+12     	; 0x860 <ldexp+0x26>
 854:	66 0f       	add	r22, r22
 856:	77 1f       	adc	r23, r23
 858:	88 1f       	adc	r24, r24
 85a:	91 50       	subi	r25, 0x01	; 1
 85c:	50 40       	sbci	r21, 0x00	; 0
 85e:	c1 f7       	brne	.-16     	; 0x850 <ldexp+0x16>
 860:	9e 3f       	cpi	r25, 0xFE	; 254
 862:	51 05       	cpc	r21, r1
 864:	44 f7       	brge	.-48     	; 0x836 <inverse+0xe>
 866:	88 0f       	add	r24, r24
 868:	91 1d       	adc	r25, r1
 86a:	96 95       	lsr	r25
 86c:	87 95       	ror	r24
 86e:	97 f9       	bld	r25, 7
 870:	08 95       	ret
 872:	5f 3f       	cpi	r21, 0xFF	; 255
 874:	ac f0       	brlt	.+42     	; 0x8a0 <ldexp+0x66>
 876:	98 3e       	cpi	r25, 0xE8	; 232
 878:	9c f0       	brlt	.+38     	; 0x8a0 <ldexp+0x66>
 87a:	bb 27       	eor	r27, r27
 87c:	86 95       	lsr	r24
 87e:	77 95       	ror	r23
 880:	67 95       	ror	r22
 882:	b7 95       	ror	r27
 884:	08 f4       	brcc	.+2      	; 0x888 <ldexp+0x4e>
 886:	b1 60       	ori	r27, 0x01	; 1
 888:	93 95       	inc	r25
 88a:	c1 f7       	brne	.-16     	; 0x87c <ldexp+0x42>
 88c:	bb 0f       	add	r27, r27
 88e:	58 f7       	brcc	.-42     	; 0x866 <ldexp+0x2c>
 890:	11 f4       	brne	.+4      	; 0x896 <ldexp+0x5c>
 892:	60 ff       	sbrs	r22, 0
 894:	e8 cf       	rjmp	.-48     	; 0x866 <ldexp+0x2c>
 896:	6f 5f       	subi	r22, 0xFF	; 255
 898:	7f 4f       	sbci	r23, 0xFF	; 255
 89a:	8f 4f       	sbci	r24, 0xFF	; 255
 89c:	9f 4f       	sbci	r25, 0xFF	; 255
 89e:	e3 cf       	rjmp	.-58     	; 0x866 <ldexp+0x2c>
 8a0:	1b cf       	rjmp	.-458    	; 0x6d8 <__fp_szero>
 8a2:	0e f0       	brts	.+2      	; 0x8a6 <ldexp+0x6c>
 8a4:	41 c1       	rjmp	.+642    	; 0xb28 <__fp_mpack>
 8a6:	d3 ce       	rjmp	.-602    	; 0x64e <__fp_nan>
 8a8:	68 94       	set
 8aa:	cb ce       	rjmp	.-618    	; 0x642 <__fp_inf>

000008ac <log>:
 8ac:	fa de       	rcall	.-524    	; 0x6a2 <__fp_splitA>
 8ae:	c8 f3       	brcs	.-14     	; 0x8a2 <ldexp+0x68>
 8b0:	99 23       	and	r25, r25
 8b2:	d1 f3       	breq	.-12     	; 0x8a8 <ldexp+0x6e>
 8b4:	c6 f3       	brts	.-16     	; 0x8a6 <ldexp+0x6c>
 8b6:	df 93       	push	r29
 8b8:	cf 93       	push	r28
 8ba:	1f 93       	push	r17
 8bc:	0f 93       	push	r16
 8be:	ff 92       	push	r15
 8c0:	c9 2f       	mov	r28, r25
 8c2:	dd 27       	eor	r29, r29
 8c4:	88 23       	and	r24, r24
 8c6:	2a f0       	brmi	.+10     	; 0x8d2 <log+0x26>
 8c8:	21 97       	sbiw	r28, 0x01	; 1
 8ca:	66 0f       	add	r22, r22
 8cc:	77 1f       	adc	r23, r23
 8ce:	88 1f       	adc	r24, r24
 8d0:	da f7       	brpl	.-10     	; 0x8c8 <log+0x1c>
 8d2:	20 e0       	ldi	r18, 0x00	; 0
 8d4:	30 e0       	ldi	r19, 0x00	; 0
 8d6:	40 e8       	ldi	r20, 0x80	; 128
 8d8:	5f eb       	ldi	r21, 0xBF	; 191
 8da:	9f e3       	ldi	r25, 0x3F	; 63
 8dc:	88 39       	cpi	r24, 0x98	; 152
 8de:	20 f0       	brcs	.+8      	; 0x8e8 <log+0x3c>
 8e0:	80 3e       	cpi	r24, 0xE0	; 224
 8e2:	30 f0       	brcs	.+12     	; 0x8f0 <log+0x44>
 8e4:	21 96       	adiw	r28, 0x01	; 1
 8e6:	8f 77       	andi	r24, 0x7F	; 127
 8e8:	da dd       	rcall	.-1100   	; 0x49e <__addsf3>
 8ea:	ec e0       	ldi	r30, 0x0C	; 12
 8ec:	f1 e0       	ldi	r31, 0x01	; 1
 8ee:	03 c0       	rjmp	.+6      	; 0x8f6 <log+0x4a>
 8f0:	d6 dd       	rcall	.-1108   	; 0x49e <__addsf3>
 8f2:	e9 e3       	ldi	r30, 0x39	; 57
 8f4:	f1 e0       	ldi	r31, 0x01	; 1
 8f6:	73 df       	rcall	.-282    	; 0x7de <__fp_powser>
 8f8:	8b 01       	movw	r16, r22
 8fa:	be 01       	movw	r22, r28
 8fc:	ec 01       	movw	r28, r24
 8fe:	fb 2e       	mov	r15, r27
 900:	6f 57       	subi	r22, 0x7F	; 127
 902:	71 09       	sbc	r23, r1
 904:	75 95       	asr	r23
 906:	77 1f       	adc	r23, r23
 908:	88 0b       	sbc	r24, r24
 90a:	99 0b       	sbc	r25, r25
 90c:	5f de       	rcall	.-834    	; 0x5cc <__floatsisf>
 90e:	28 e1       	ldi	r18, 0x18	; 24
 910:	32 e7       	ldi	r19, 0x72	; 114
 912:	41 e3       	ldi	r20, 0x31	; 49
 914:	5f e3       	ldi	r21, 0x3F	; 63
 916:	49 d0       	rcall	.+146    	; 0x9aa <__mulsf3x>
 918:	af 2d       	mov	r26, r15
 91a:	98 01       	movw	r18, r16
 91c:	ae 01       	movw	r20, r28
 91e:	ff 90       	pop	r15
 920:	0f 91       	pop	r16
 922:	1f 91       	pop	r17
 924:	cf 91       	pop	r28
 926:	df 91       	pop	r29
 928:	cb dd       	rcall	.-1130   	; 0x4c0 <__addsf3x>
 92a:	a2 ce       	rjmp	.-700    	; 0x670 <__fp_round>

0000092c <modf>:
 92c:	fa 01       	movw	r30, r20
 92e:	dc 01       	movw	r26, r24
 930:	aa 0f       	add	r26, r26
 932:	bb 1f       	adc	r27, r27
 934:	9b 01       	movw	r18, r22
 936:	ac 01       	movw	r20, r24
 938:	bf 57       	subi	r27, 0x7F	; 127
 93a:	28 f4       	brcc	.+10     	; 0x946 <modf+0x1a>
 93c:	22 27       	eor	r18, r18
 93e:	33 27       	eor	r19, r19
 940:	44 27       	eor	r20, r20
 942:	50 78       	andi	r21, 0x80	; 128
 944:	1f c0       	rjmp	.+62     	; 0x984 <modf+0x58>
 946:	b7 51       	subi	r27, 0x17	; 23
 948:	88 f4       	brcc	.+34     	; 0x96c <modf+0x40>
 94a:	ab 2f       	mov	r26, r27
 94c:	00 24       	eor	r0, r0
 94e:	46 95       	lsr	r20
 950:	37 95       	ror	r19
 952:	27 95       	ror	r18
 954:	01 1c       	adc	r0, r1
 956:	a3 95       	inc	r26
 958:	d2 f3       	brmi	.-12     	; 0x94e <modf+0x22>
 95a:	00 20       	and	r0, r0
 95c:	69 f0       	breq	.+26     	; 0x978 <modf+0x4c>
 95e:	22 0f       	add	r18, r18
 960:	33 1f       	adc	r19, r19
 962:	44 1f       	adc	r20, r20
 964:	b3 95       	inc	r27
 966:	da f3       	brmi	.-10     	; 0x95e <modf+0x32>
 968:	0d d0       	rcall	.+26     	; 0x984 <modf+0x58>
 96a:	98 cd       	rjmp	.-1232   	; 0x49c <__subsf3>
 96c:	61 30       	cpi	r22, 0x01	; 1
 96e:	71 05       	cpc	r23, r1
 970:	a0 e8       	ldi	r26, 0x80	; 128
 972:	8a 07       	cpc	r24, r26
 974:	b9 46       	sbci	r27, 0x69	; 105
 976:	30 f4       	brcc	.+12     	; 0x984 <modf+0x58>
 978:	9b 01       	movw	r18, r22
 97a:	ac 01       	movw	r20, r24
 97c:	66 27       	eor	r22, r22
 97e:	77 27       	eor	r23, r23
 980:	88 27       	eor	r24, r24
 982:	90 78       	andi	r25, 0x80	; 128
 984:	30 96       	adiw	r30, 0x00	; 0
 986:	21 f0       	breq	.+8      	; 0x990 <modf+0x64>
 988:	20 83       	st	Z, r18
 98a:	31 83       	std	Z+1, r19	; 0x01
 98c:	42 83       	std	Z+2, r20	; 0x02
 98e:	53 83       	std	Z+3, r21	; 0x03
 990:	08 95       	ret

00000992 <__mulsf3>:
 992:	0b d0       	rcall	.+22     	; 0x9aa <__mulsf3x>
 994:	6d ce       	rjmp	.-806    	; 0x670 <__fp_round>
 996:	5e de       	rcall	.-836    	; 0x654 <__fp_pscA>
 998:	28 f0       	brcs	.+10     	; 0x9a4 <__mulsf3+0x12>
 99a:	63 de       	rcall	.-826    	; 0x662 <__fp_pscB>
 99c:	18 f0       	brcs	.+6      	; 0x9a4 <__mulsf3+0x12>
 99e:	95 23       	and	r25, r21
 9a0:	09 f0       	breq	.+2      	; 0x9a4 <__mulsf3+0x12>
 9a2:	4f ce       	rjmp	.-866    	; 0x642 <__fp_inf>
 9a4:	54 ce       	rjmp	.-856    	; 0x64e <__fp_nan>
 9a6:	11 24       	eor	r1, r1
 9a8:	97 ce       	rjmp	.-722    	; 0x6d8 <__fp_szero>

000009aa <__mulsf3x>:
 9aa:	73 de       	rcall	.-794    	; 0x692 <__fp_split3>
 9ac:	a0 f3       	brcs	.-24     	; 0x996 <__mulsf3+0x4>

000009ae <__mulsf3_pse>:
 9ae:	95 9f       	mul	r25, r21
 9b0:	d1 f3       	breq	.-12     	; 0x9a6 <__mulsf3+0x14>
 9b2:	95 0f       	add	r25, r21
 9b4:	50 e0       	ldi	r21, 0x00	; 0
 9b6:	55 1f       	adc	r21, r21
 9b8:	62 9f       	mul	r22, r18
 9ba:	f0 01       	movw	r30, r0
 9bc:	72 9f       	mul	r23, r18
 9be:	bb 27       	eor	r27, r27
 9c0:	f0 0d       	add	r31, r0
 9c2:	b1 1d       	adc	r27, r1
 9c4:	63 9f       	mul	r22, r19
 9c6:	aa 27       	eor	r26, r26
 9c8:	f0 0d       	add	r31, r0
 9ca:	b1 1d       	adc	r27, r1
 9cc:	aa 1f       	adc	r26, r26
 9ce:	64 9f       	mul	r22, r20
 9d0:	66 27       	eor	r22, r22
 9d2:	b0 0d       	add	r27, r0
 9d4:	a1 1d       	adc	r26, r1
 9d6:	66 1f       	adc	r22, r22
 9d8:	82 9f       	mul	r24, r18
 9da:	22 27       	eor	r18, r18
 9dc:	b0 0d       	add	r27, r0
 9de:	a1 1d       	adc	r26, r1
 9e0:	62 1f       	adc	r22, r18
 9e2:	73 9f       	mul	r23, r19
 9e4:	b0 0d       	add	r27, r0
 9e6:	a1 1d       	adc	r26, r1
 9e8:	62 1f       	adc	r22, r18
 9ea:	83 9f       	mul	r24, r19
 9ec:	a0 0d       	add	r26, r0
 9ee:	61 1d       	adc	r22, r1
 9f0:	22 1f       	adc	r18, r18
 9f2:	74 9f       	mul	r23, r20
 9f4:	33 27       	eor	r19, r19
 9f6:	a0 0d       	add	r26, r0
 9f8:	61 1d       	adc	r22, r1
 9fa:	23 1f       	adc	r18, r19
 9fc:	84 9f       	mul	r24, r20
 9fe:	60 0d       	add	r22, r0
 a00:	21 1d       	adc	r18, r1
 a02:	82 2f       	mov	r24, r18
 a04:	76 2f       	mov	r23, r22
 a06:	6a 2f       	mov	r22, r26
 a08:	11 24       	eor	r1, r1
 a0a:	9f 57       	subi	r25, 0x7F	; 127
 a0c:	50 40       	sbci	r21, 0x00	; 0
 a0e:	8a f0       	brmi	.+34     	; 0xa32 <__mulsf3_pse+0x84>
 a10:	e1 f0       	breq	.+56     	; 0xa4a <__mulsf3_pse+0x9c>
 a12:	88 23       	and	r24, r24
 a14:	4a f0       	brmi	.+18     	; 0xa28 <__mulsf3_pse+0x7a>
 a16:	ee 0f       	add	r30, r30
 a18:	ff 1f       	adc	r31, r31
 a1a:	bb 1f       	adc	r27, r27
 a1c:	66 1f       	adc	r22, r22
 a1e:	77 1f       	adc	r23, r23
 a20:	88 1f       	adc	r24, r24
 a22:	91 50       	subi	r25, 0x01	; 1
 a24:	50 40       	sbci	r21, 0x00	; 0
 a26:	a9 f7       	brne	.-22     	; 0xa12 <__mulsf3_pse+0x64>
 a28:	9e 3f       	cpi	r25, 0xFE	; 254
 a2a:	51 05       	cpc	r21, r1
 a2c:	70 f0       	brcs	.+28     	; 0xa4a <__mulsf3_pse+0x9c>
 a2e:	09 ce       	rjmp	.-1006   	; 0x642 <__fp_inf>
 a30:	53 ce       	rjmp	.-858    	; 0x6d8 <__fp_szero>
 a32:	5f 3f       	cpi	r21, 0xFF	; 255
 a34:	ec f3       	brlt	.-6      	; 0xa30 <__mulsf3_pse+0x82>
 a36:	98 3e       	cpi	r25, 0xE8	; 232
 a38:	dc f3       	brlt	.-10     	; 0xa30 <__mulsf3_pse+0x82>
 a3a:	86 95       	lsr	r24
 a3c:	77 95       	ror	r23
 a3e:	67 95       	ror	r22
 a40:	b7 95       	ror	r27
 a42:	f7 95       	ror	r31
 a44:	e7 95       	ror	r30
 a46:	9f 5f       	subi	r25, 0xFF	; 255
 a48:	c1 f7       	brne	.-16     	; 0xa3a <__mulsf3_pse+0x8c>
 a4a:	fe 2b       	or	r31, r30
 a4c:	88 0f       	add	r24, r24
 a4e:	91 1d       	adc	r25, r1
 a50:	96 95       	lsr	r25
 a52:	87 95       	ror	r24
 a54:	97 f9       	bld	r25, 7
 a56:	08 95       	ret

00000a58 <__divsf3>:
 a58:	0c d0       	rcall	.+24     	; 0xa72 <__divsf3x>
 a5a:	0a ce       	rjmp	.-1004   	; 0x670 <__fp_round>
 a5c:	02 de       	rcall	.-1020   	; 0x662 <__fp_pscB>
 a5e:	40 f0       	brcs	.+16     	; 0xa70 <__divsf3+0x18>
 a60:	f9 dd       	rcall	.-1038   	; 0x654 <__fp_pscA>
 a62:	30 f0       	brcs	.+12     	; 0xa70 <__divsf3+0x18>
 a64:	21 f4       	brne	.+8      	; 0xa6e <__divsf3+0x16>
 a66:	5f 3f       	cpi	r21, 0xFF	; 255
 a68:	19 f0       	breq	.+6      	; 0xa70 <__divsf3+0x18>
 a6a:	eb cd       	rjmp	.-1066   	; 0x642 <__fp_inf>
 a6c:	51 11       	cpse	r21, r1
 a6e:	34 ce       	rjmp	.-920    	; 0x6d8 <__fp_szero>
 a70:	ee cd       	rjmp	.-1060   	; 0x64e <__fp_nan>

00000a72 <__divsf3x>:
 a72:	0f de       	rcall	.-994    	; 0x692 <__fp_split3>
 a74:	98 f3       	brcs	.-26     	; 0xa5c <__divsf3+0x4>

00000a76 <__divsf3_pse>:
 a76:	99 23       	and	r25, r25
 a78:	c9 f3       	breq	.-14     	; 0xa6c <__divsf3+0x14>
 a7a:	55 23       	and	r21, r21
 a7c:	b1 f3       	breq	.-20     	; 0xa6a <__divsf3+0x12>
 a7e:	95 1b       	sub	r25, r21
 a80:	55 0b       	sbc	r21, r21
 a82:	bb 27       	eor	r27, r27
 a84:	aa 27       	eor	r26, r26
 a86:	62 17       	cp	r22, r18
 a88:	73 07       	cpc	r23, r19
 a8a:	84 07       	cpc	r24, r20
 a8c:	38 f0       	brcs	.+14     	; 0xa9c <__divsf3_pse+0x26>
 a8e:	9f 5f       	subi	r25, 0xFF	; 255
 a90:	5f 4f       	sbci	r21, 0xFF	; 255
 a92:	22 0f       	add	r18, r18
 a94:	33 1f       	adc	r19, r19
 a96:	44 1f       	adc	r20, r20
 a98:	aa 1f       	adc	r26, r26
 a9a:	a9 f3       	breq	.-22     	; 0xa86 <__divsf3_pse+0x10>
 a9c:	33 d0       	rcall	.+102    	; 0xb04 <__divsf3_pse+0x8e>
 a9e:	0e 2e       	mov	r0, r30
 aa0:	3a f0       	brmi	.+14     	; 0xab0 <__divsf3_pse+0x3a>
 aa2:	e0 e8       	ldi	r30, 0x80	; 128
 aa4:	30 d0       	rcall	.+96     	; 0xb06 <__divsf3_pse+0x90>
 aa6:	91 50       	subi	r25, 0x01	; 1
 aa8:	50 40       	sbci	r21, 0x00	; 0
 aaa:	e6 95       	lsr	r30
 aac:	00 1c       	adc	r0, r0
 aae:	ca f7       	brpl	.-14     	; 0xaa2 <__divsf3_pse+0x2c>
 ab0:	29 d0       	rcall	.+82     	; 0xb04 <__divsf3_pse+0x8e>
 ab2:	fe 2f       	mov	r31, r30
 ab4:	27 d0       	rcall	.+78     	; 0xb04 <__divsf3_pse+0x8e>
 ab6:	66 0f       	add	r22, r22
 ab8:	77 1f       	adc	r23, r23
 aba:	88 1f       	adc	r24, r24
 abc:	bb 1f       	adc	r27, r27
 abe:	26 17       	cp	r18, r22
 ac0:	37 07       	cpc	r19, r23
 ac2:	48 07       	cpc	r20, r24
 ac4:	ab 07       	cpc	r26, r27
 ac6:	b0 e8       	ldi	r27, 0x80	; 128
 ac8:	09 f0       	breq	.+2      	; 0xacc <__divsf3_pse+0x56>
 aca:	bb 0b       	sbc	r27, r27
 acc:	80 2d       	mov	r24, r0
 ace:	bf 01       	movw	r22, r30
 ad0:	ff 27       	eor	r31, r31
 ad2:	93 58       	subi	r25, 0x83	; 131
 ad4:	5f 4f       	sbci	r21, 0xFF	; 255
 ad6:	2a f0       	brmi	.+10     	; 0xae2 <__divsf3_pse+0x6c>
 ad8:	9e 3f       	cpi	r25, 0xFE	; 254
 ada:	51 05       	cpc	r21, r1
 adc:	68 f0       	brcs	.+26     	; 0xaf8 <__divsf3_pse+0x82>
 ade:	b1 cd       	rjmp	.-1182   	; 0x642 <__fp_inf>
 ae0:	fb cd       	rjmp	.-1034   	; 0x6d8 <__fp_szero>
 ae2:	5f 3f       	cpi	r21, 0xFF	; 255
 ae4:	ec f3       	brlt	.-6      	; 0xae0 <__divsf3_pse+0x6a>
 ae6:	98 3e       	cpi	r25, 0xE8	; 232
 ae8:	dc f3       	brlt	.-10     	; 0xae0 <__divsf3_pse+0x6a>
 aea:	86 95       	lsr	r24
 aec:	77 95       	ror	r23
 aee:	67 95       	ror	r22
 af0:	b7 95       	ror	r27
 af2:	f7 95       	ror	r31
 af4:	9f 5f       	subi	r25, 0xFF	; 255
 af6:	c9 f7       	brne	.-14     	; 0xaea <__divsf3_pse+0x74>
 af8:	88 0f       	add	r24, r24
 afa:	91 1d       	adc	r25, r1
 afc:	96 95       	lsr	r25
 afe:	87 95       	ror	r24
 b00:	97 f9       	bld	r25, 7
 b02:	08 95       	ret
 b04:	e1 e0       	ldi	r30, 0x01	; 1
 b06:	66 0f       	add	r22, r22
 b08:	77 1f       	adc	r23, r23
 b0a:	88 1f       	adc	r24, r24
 b0c:	bb 1f       	adc	r27, r27
 b0e:	62 17       	cp	r22, r18
 b10:	73 07       	cpc	r23, r19
 b12:	84 07       	cpc	r24, r20
 b14:	ba 07       	cpc	r27, r26
 b16:	20 f0       	brcs	.+8      	; 0xb20 <__divsf3_pse+0xaa>
 b18:	62 1b       	sub	r22, r18
 b1a:	73 0b       	sbc	r23, r19
 b1c:	84 0b       	sbc	r24, r20
 b1e:	ba 0b       	sbc	r27, r26
 b20:	ee 1f       	adc	r30, r30
 b22:	88 f7       	brcc	.-30     	; 0xb06 <__divsf3_pse+0x90>
 b24:	e0 95       	com	r30
 b26:	08 95       	ret

00000b28 <__fp_mpack>:
 b28:	9f 3f       	cpi	r25, 0xFF	; 255
 b2a:	31 f0       	breq	.+12     	; 0xb38 <__fp_mpack_finite+0xc>

00000b2c <__fp_mpack_finite>:
 b2c:	91 50       	subi	r25, 0x01	; 1
 b2e:	20 f4       	brcc	.+8      	; 0xb38 <__fp_mpack_finite+0xc>
 b30:	87 95       	ror	r24
 b32:	77 95       	ror	r23
 b34:	67 95       	ror	r22
 b36:	b7 95       	ror	r27
 b38:	88 0f       	add	r24, r24
 b3a:	91 1d       	adc	r25, r1
 b3c:	96 95       	lsr	r25
 b3e:	87 95       	ror	r24
 b40:	97 f9       	bld	r25, 7
 b42:	08 95       	ret

00000b44 <__itoa_ncheck>:
 b44:	bb 27       	eor	r27, r27
 b46:	4a 30       	cpi	r20, 0x0A	; 10
 b48:	31 f4       	brne	.+12     	; 0xb56 <__itoa_ncheck+0x12>
 b4a:	99 23       	and	r25, r25
 b4c:	22 f4       	brpl	.+8      	; 0xb56 <__itoa_ncheck+0x12>
 b4e:	bd e2       	ldi	r27, 0x2D	; 45
 b50:	90 95       	com	r25
 b52:	81 95       	neg	r24
 b54:	9f 4f       	sbci	r25, 0xFF	; 255
 b56:	01 c0       	rjmp	.+2      	; 0xb5a <__utoa_common>

00000b58 <__utoa_ncheck>:
 b58:	bb 27       	eor	r27, r27

00000b5a <__utoa_common>:
 b5a:	fb 01       	movw	r30, r22
 b5c:	55 27       	eor	r21, r21
 b5e:	aa 27       	eor	r26, r26
 b60:	88 0f       	add	r24, r24
 b62:	99 1f       	adc	r25, r25
 b64:	aa 1f       	adc	r26, r26
 b66:	a4 17       	cp	r26, r20
 b68:	10 f0       	brcs	.+4      	; 0xb6e <__utoa_common+0x14>
 b6a:	a4 1b       	sub	r26, r20
 b6c:	83 95       	inc	r24
 b6e:	50 51       	subi	r21, 0x10	; 16
 b70:	b9 f7       	brne	.-18     	; 0xb60 <__utoa_common+0x6>
 b72:	a0 5d       	subi	r26, 0xD0	; 208
 b74:	aa 33       	cpi	r26, 0x3A	; 58
 b76:	08 f0       	brcs	.+2      	; 0xb7a <__utoa_common+0x20>
 b78:	a9 5d       	subi	r26, 0xD9	; 217
 b7a:	a1 93       	st	Z+, r26
 b7c:	00 97       	sbiw	r24, 0x00	; 0
 b7e:	79 f7       	brne	.-34     	; 0xb5e <__utoa_common+0x4>
 b80:	b1 11       	cpse	r27, r1
 b82:	b1 93       	st	Z+, r27
 b84:	11 92       	st	Z+, r1
 b86:	cb 01       	movw	r24, r22
 b88:	00 c0       	rjmp	.+0      	; 0xb8a <strrev>

00000b8a <strrev>:
 b8a:	dc 01       	movw	r26, r24
 b8c:	fc 01       	movw	r30, r24
 b8e:	67 2f       	mov	r22, r23
 b90:	71 91       	ld	r23, Z+
 b92:	77 23       	and	r23, r23
 b94:	e1 f7       	brne	.-8      	; 0xb8e <strrev+0x4>
 b96:	32 97       	sbiw	r30, 0x02	; 2
 b98:	04 c0       	rjmp	.+8      	; 0xba2 <strrev+0x18>
 b9a:	7c 91       	ld	r23, X
 b9c:	6d 93       	st	X+, r22
 b9e:	70 83       	st	Z, r23
 ba0:	62 91       	ld	r22, -Z
 ba2:	ae 17       	cp	r26, r30
 ba4:	bf 07       	cpc	r27, r31
 ba6:	c8 f3       	brcs	.-14     	; 0xb9a <strrev+0x10>
 ba8:	08 95       	ret

00000baa <_exit>:
 baa:	f8 94       	cli

00000bac <__stop_program>:
 bac:	ff cf       	rjmp	.-2      	; 0xbac <__stop_program>
