
Arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800200  0000147c  00001510  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000147c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000157  008002ba  008002ba  000015ca  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  000015ca  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000015fc  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  0000163c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d58  00000000  00000000  0000178c  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00001193  00000000  00000000  000034e4  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d61  00000000  00000000  00004677  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000488  00000000  00000000  000053d8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009ec  00000000  00000000  00005860  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000e5f  00000000  00000000  0000624c  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  000070ab  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
       2:	00 00       	nop
       4:	d0 c0       	rjmp	.+416    	; 0x1a6 <__bad_interrupt>
       6:	00 00       	nop
       8:	ce c0       	rjmp	.+412    	; 0x1a6 <__bad_interrupt>
       a:	00 00       	nop
       c:	cc c0       	rjmp	.+408    	; 0x1a6 <__bad_interrupt>
       e:	00 00       	nop
      10:	ca c0       	rjmp	.+404    	; 0x1a6 <__bad_interrupt>
      12:	00 00       	nop
      14:	c8 c0       	rjmp	.+400    	; 0x1a6 <__bad_interrupt>
      16:	00 00       	nop
      18:	c6 c0       	rjmp	.+396    	; 0x1a6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c4 c0       	rjmp	.+392    	; 0x1a6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c2 c0       	rjmp	.+388    	; 0x1a6 <__bad_interrupt>
      22:	00 00       	nop
      24:	c0 c0       	rjmp	.+384    	; 0x1a6 <__bad_interrupt>
      26:	00 00       	nop
      28:	be c0       	rjmp	.+380    	; 0x1a6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	bc c0       	rjmp	.+376    	; 0x1a6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ba c0       	rjmp	.+372    	; 0x1a6 <__bad_interrupt>
      32:	00 00       	nop
      34:	b8 c0       	rjmp	.+368    	; 0x1a6 <__bad_interrupt>
      36:	00 00       	nop
      38:	b6 c0       	rjmp	.+364    	; 0x1a6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	21 c5       	rjmp	.+2626   	; 0xa80 <__vector_15>
      3e:	00 00       	nop
      40:	b2 c0       	rjmp	.+356    	; 0x1a6 <__bad_interrupt>
      42:	00 00       	nop
      44:	b0 c0       	rjmp	.+352    	; 0x1a6 <__bad_interrupt>
      46:	00 00       	nop
      48:	ae c0       	rjmp	.+348    	; 0x1a6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ac c0       	rjmp	.+344    	; 0x1a6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	aa c0       	rjmp	.+340    	; 0x1a6 <__bad_interrupt>
      52:	00 00       	nop
      54:	a8 c0       	rjmp	.+336    	; 0x1a6 <__bad_interrupt>
      56:	00 00       	nop
      58:	a6 c0       	rjmp	.+332    	; 0x1a6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a4 c0       	rjmp	.+328    	; 0x1a6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a2 c0       	rjmp	.+324    	; 0x1a6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b7 c0       	rjmp	.+366    	; 0x1d4 <__vector_25>
      66:	00 00       	nop
      68:	9e c0       	rjmp	.+316    	; 0x1a6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9c c0       	rjmp	.+312    	; 0x1a6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	9a c0       	rjmp	.+308    	; 0x1a6 <__bad_interrupt>
      72:	00 00       	nop
      74:	98 c0       	rjmp	.+304    	; 0x1a6 <__bad_interrupt>
      76:	00 00       	nop
      78:	96 c0       	rjmp	.+300    	; 0x1a6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	94 c0       	rjmp	.+296    	; 0x1a6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	92 c0       	rjmp	.+292    	; 0x1a6 <__bad_interrupt>
      82:	00 00       	nop
      84:	90 c0       	rjmp	.+288    	; 0x1a6 <__bad_interrupt>
      86:	00 00       	nop
      88:	8e c0       	rjmp	.+284    	; 0x1a6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c5 c1       	rjmp	.+906    	; 0x418 <__vector_35>
      8e:	00 00       	nop
      90:	8a c0       	rjmp	.+276    	; 0x1a6 <__bad_interrupt>
      92:	00 00       	nop
      94:	88 c0       	rjmp	.+272    	; 0x1a6 <__bad_interrupt>
      96:	00 00       	nop
      98:	86 c0       	rjmp	.+268    	; 0x1a6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	ae c3       	rjmp	.+1884   	; 0x7fa <__vector_39>
      9e:	00 00       	nop
      a0:	82 c0       	rjmp	.+260    	; 0x1a6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	80 c0       	rjmp	.+256    	; 0x1a6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	7e c0       	rjmp	.+252    	; 0x1a6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	7c c0       	rjmp	.+248    	; 0x1a6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	7a c0       	rjmp	.+244    	; 0x1a6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	78 c0       	rjmp	.+240    	; 0x1a6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	76 c0       	rjmp	.+236    	; 0x1a6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	74 c0       	rjmp	.+232    	; 0x1a6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	72 c0       	rjmp	.+228    	; 0x1a6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	70 c0       	rjmp	.+224    	; 0x1a6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	6e c0       	rjmp	.+220    	; 0x1a6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	6c c0       	rjmp	.+216    	; 0x1a6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	6a c0       	rjmp	.+212    	; 0x1a6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	68 c0       	rjmp	.+208    	; 0x1a6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	66 c0       	rjmp	.+204    	; 0x1a6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	64 c0       	rjmp	.+200    	; 0x1a6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	62 c0       	rjmp	.+196    	; 0x1a6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	07 63       	ori	r16, 0x37	; 55
      e6:	42 36       	cpi	r20, 0x62	; 98
      e8:	b7 9b       	sbis	0x16, 7	; 22
      ea:	d8 a7       	std	Y+40, r29	; 0x28
      ec:	1a 39       	cpi	r17, 0x9A	; 154
      ee:	68 56       	subi	r22, 0x68	; 104
      f0:	18 ae       	std	Y+56, r1	; 0x38
      f2:	ba ab       	std	Y+50, r27	; 0x32
      f4:	55 8c       	ldd	r5, Z+29	; 0x1d
      f6:	1d 3c       	cpi	r17, 0xCD	; 205
      f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
      fa:	57 63       	ori	r21, 0x37	; 55
      fc:	bd 6d       	ori	r27, 0xDD	; 221
      fe:	ed fd       	.word	0xfded	; ????
     100:	75 3e       	cpi	r23, 0xE5	; 229
     102:	f6 17       	cp	r31, r22
     104:	72 31       	cpi	r23, 0x12	; 18
     106:	bf 00       	.word	0x00bf	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 00       	nop
     110:	be 92       	st	-X, r11
     112:	24 49       	sbci	r18, 0x94	; 148
     114:	12 3e       	cpi	r17, 0xE2	; 226
     116:	ab aa       	std	Y+51, r10	; 0x33
     118:	aa 2a       	or	r10, r26
     11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
     11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
     11e:	4c 3e       	cpi	r20, 0xEC	; 236
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	be ab       	std	Y+54, r27	; 0x36
     126:	aa aa       	std	Y+50, r10	; 0x32
     128:	aa 3e       	cpi	r26, 0xEA	; 234
     12a:	00 00       	nop
     12c:	00 00       	nop
     12e:	bf 00       	.word	0x00bf	; ????
     130:	00 00       	nop
     132:	80 3f       	cpi	r24, 0xF0	; 240
     134:	00 00       	nop
     136:	00 00       	nop
     138:	00 08       	sbc	r0, r0
     13a:	41 78       	andi	r20, 0x81	; 129
     13c:	d3 bb       	out	0x13, r29	; 19
     13e:	43 87       	std	Z+11, r20	; 0x0b
     140:	d1 13       	cpse	r29, r17
     142:	3d 19       	sub	r19, r13
     144:	0e 3c       	cpi	r16, 0xCE	; 206
     146:	c3 bd       	out	0x23, r28	; 35
     148:	42 82       	std	Z+2, r4	; 0x02
     14a:	ad 2b       	or	r26, r29
     14c:	3e 68       	ori	r19, 0x8E	; 142
     14e:	ec 82       	std	Y+4, r14	; 0x04
     150:	76 be       	out	0x36, r7	; 54
     152:	d9 8f       	std	Y+25, r29	; 0x19
     154:	e1 a9       	ldd	r30, Z+49	; 0x31
     156:	3e 4c       	sbci	r19, 0xCE	; 206
     158:	80 ef       	ldi	r24, 0xF0	; 240
     15a:	ff be       	out	0x3f, r15	; 63
     15c:	01 c4       	rjmp	.+2050   	; 0x960 <writeToSlave+0x40>
     15e:	ff 7f       	andi	r31, 0xFF	; 255
     160:	3f 00       	.word	0x003f	; ????
     162:	00 00       	nop
	...

00000166 <__ctors_end>:
     166:	11 24       	eor	r1, r1
     168:	1f be       	out	0x3f, r1	; 63
     16a:	cf ef       	ldi	r28, 0xFF	; 255
     16c:	d1 e2       	ldi	r29, 0x21	; 33
     16e:	de bf       	out	0x3e, r29	; 62
     170:	cd bf       	out	0x3d, r28	; 61
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	0c bf       	out	0x3c, r16	; 60

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b2 e0       	ldi	r27, 0x02	; 2
     17c:	ec e7       	ldi	r30, 0x7C	; 124
     17e:	f4 e1       	ldi	r31, 0x14	; 20
     180:	00 e0       	ldi	r16, 0x00	; 0
     182:	0b bf       	out	0x3b, r16	; 59
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x14>
     186:	07 90       	elpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	aa 3b       	cpi	r26, 0xBA	; 186
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0x10>

00000190 <__do_clear_bss>:
     190:	24 e0       	ldi	r18, 0x04	; 4
     192:	aa eb       	ldi	r26, 0xBA	; 186
     194:	b2 e0       	ldi	r27, 0x02	; 2
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	a1 31       	cpi	r26, 0x11	; 17
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	13 d2       	rcall	.+1062   	; 0x5c8 <main>
     1a2:	0c 94 3c 0a 	jmp	0x1478	; 0x1478 <_exit>

000001a6 <__bad_interrupt>:
     1a6:	2c cf       	rjmp	.-424    	; 0x0 <__vectors>

000001a8 <init_USART>:
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
}
     1a8:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
     1ac:	e1 ec       	ldi	r30, 0xC1	; 193
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	80 81       	ld	r24, Z
     1b2:	80 69       	ori	r24, 0x90	; 144
     1b4:	80 83       	st	Z, r24
     1b6:	80 81       	ld	r24, Z
     1b8:	88 60       	ori	r24, 0x08	; 8
     1ba:	80 83       	st	Z, r24
     1bc:	e2 ec       	ldi	r30, 0xC2	; 194
     1be:	f0 e0       	ldi	r31, 0x00	; 0
     1c0:	80 81       	ld	r24, Z
     1c2:	86 60       	ori	r24, 0x06	; 6
     1c4:	80 83       	st	Z, r24
     1c6:	80 e1       	ldi	r24, 0x10	; 16
     1c8:	90 e0       	ldi	r25, 0x00	; 0
     1ca:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     1ce:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     1d2:	08 95       	ret

000001d4 <__vector_25>:
     1d4:	1f 92       	push	r1
     1d6:	0f 92       	push	r0
     1d8:	0f b6       	in	r0, 0x3f	; 63
     1da:	0f 92       	push	r0
     1dc:	11 24       	eor	r1, r1
     1de:	0b b6       	in	r0, 0x3b	; 59
     1e0:	0f 92       	push	r0
     1e2:	df 92       	push	r13
     1e4:	ef 92       	push	r14
     1e6:	ff 92       	push	r15
     1e8:	0f 93       	push	r16
     1ea:	1f 93       	push	r17
     1ec:	2f 93       	push	r18
     1ee:	3f 93       	push	r19
     1f0:	4f 93       	push	r20
     1f2:	5f 93       	push	r21
     1f4:	6f 93       	push	r22
     1f6:	7f 93       	push	r23
     1f8:	8f 93       	push	r24
     1fa:	9f 93       	push	r25
     1fc:	af 93       	push	r26
     1fe:	bf 93       	push	r27
     200:	cf 93       	push	r28
     202:	df 93       	push	r29
     204:	ef 93       	push	r30
     206:	ff 93       	push	r31
     208:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     20c:	90 ed       	ldi	r25, 0xD0	; 208
     20e:	98 0f       	add	r25, r24
     210:	9a 30       	cpi	r25, 0x0A	; 10
     212:	c0 f4       	brcc	.+48     	; 0x244 <__vector_25+0x70>
     214:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <command.1976>
     218:	94 37       	cpi	r25, 0x74	; 116
     21a:	09 f0       	breq	.+2      	; 0x21e <__vector_25+0x4a>
     21c:	c4 c0       	rjmp	.+392    	; 0x3a6 <__vector_25+0x1d2>
     21e:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     222:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     226:	2f 3f       	cpi	r18, 0xFF	; 255
     228:	31 05       	cpc	r19, r1
     22a:	0c f0       	brlt	.+2      	; 0x22e <__vector_25+0x5a>
     22c:	bc c0       	rjmp	.+376    	; 0x3a6 <__vector_25+0x1d2>
     22e:	2f 5f       	subi	r18, 0xFF	; 255
     230:	3f 4f       	sbci	r19, 0xFF	; 255
     232:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <__data_start+0x1>
     236:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <__data_start>
     23a:	f9 01       	movw	r30, r18
     23c:	e2 54       	subi	r30, 0x42	; 66
     23e:	fd 4f       	sbci	r31, 0xFD	; 253
     240:	80 83       	st	Z, r24
     242:	b1 c0       	rjmp	.+354    	; 0x3a6 <__vector_25+0x1d2>
     244:	9f e9       	ldi	r25, 0x9F	; 159
     246:	98 0f       	add	r25, r24
     248:	9a 31       	cpi	r25, 0x1A	; 26
     24a:	a0 f4       	brcc	.+40     	; 0x274 <__vector_25+0xa0>
     24c:	81 37       	cpi	r24, 0x71	; 113
     24e:	79 f0       	breq	.+30     	; 0x26e <__vector_25+0x9a>
     250:	30 f4       	brcc	.+12     	; 0x25e <__vector_25+0x8a>
     252:	81 36       	cpi	r24, 0x61	; 97
     254:	61 f0       	breq	.+24     	; 0x26e <__vector_25+0x9a>
     256:	84 36       	cpi	r24, 0x64	; 100
     258:	09 f0       	breq	.+2      	; 0x25c <__vector_25+0x88>
     25a:	a5 c0       	rjmp	.+330    	; 0x3a6 <__vector_25+0x1d2>
     25c:	08 c0       	rjmp	.+16     	; 0x26e <__vector_25+0x9a>
     25e:	83 37       	cpi	r24, 0x73	; 115
     260:	08 f4       	brcc	.+2      	; 0x264 <__vector_25+0x90>
     262:	a1 c0       	rjmp	.+322    	; 0x3a6 <__vector_25+0x1d2>
     264:	85 37       	cpi	r24, 0x75	; 117
     266:	18 f0       	brcs	.+6      	; 0x26e <__vector_25+0x9a>
     268:	87 37       	cpi	r24, 0x77	; 119
     26a:	09 f0       	breq	.+2      	; 0x26e <__vector_25+0x9a>
     26c:	9c c0       	rjmp	.+312    	; 0x3a6 <__vector_25+0x1d2>
     26e:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <command.1976>
     272:	99 c0       	rjmp	.+306    	; 0x3a6 <__vector_25+0x1d2>
     274:	8d 30       	cpi	r24, 0x0D	; 13
     276:	09 f0       	breq	.+2      	; 0x27a <__vector_25+0xa6>
     278:	96 c0       	rjmp	.+300    	; 0x3a6 <__vector_25+0x1d2>
     27a:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <command.1976>
     27e:	84 37       	cpi	r24, 0x74	; 116
     280:	b1 f5       	brne	.+108    	; 0x2ee <__vector_25+0x11a>
     282:	00 91 00 02 	lds	r16, 0x0200	; 0x800200 <__data_start>
     286:	10 91 01 02 	lds	r17, 0x0201	; 0x800201 <__data_start+0x1>
     28a:	11 23       	and	r17, r17
     28c:	0c f4       	brge	.+2      	; 0x290 <__vector_25+0xbc>
     28e:	7d c0       	rjmp	.+250    	; 0x38a <__vector_25+0x1b6>
     290:	c0 e0       	ldi	r28, 0x00	; 0
     292:	d0 e0       	ldi	r29, 0x00	; 0
     294:	d1 2c       	mov	r13, r1
     296:	e1 2c       	mov	r14, r1
     298:	f1 2c       	mov	r15, r1
     29a:	b8 01       	movw	r22, r16
     29c:	6c 1b       	sub	r22, r28
     29e:	7d 0b       	sbc	r23, r29
     2a0:	07 2e       	mov	r0, r23
     2a2:	00 0c       	add	r0, r0
     2a4:	88 0b       	sbc	r24, r24
     2a6:	99 0b       	sbc	r25, r25
     2a8:	86 d5       	rcall	.+2828   	; 0xdb6 <__floatsisf>
     2aa:	9b 01       	movw	r18, r22
     2ac:	ac 01       	movw	r20, r24
     2ae:	60 e0       	ldi	r22, 0x00	; 0
     2b0:	70 e0       	ldi	r23, 0x00	; 0
     2b2:	80 e2       	ldi	r24, 0x20	; 32
     2b4:	91 e4       	ldi	r25, 0x41	; 65
     2b6:	0b d6       	rcall	.+3094   	; 0xece <pow>
     2b8:	c2 54       	subi	r28, 0x42	; 66
     2ba:	dd 4f       	sbci	r29, 0xFD	; 253
     2bc:	c8 81       	ld	r28, Y
     2be:	c0 53       	subi	r28, 0x30	; 48
     2c0:	d0 e0       	ldi	r29, 0x00	; 0
     2c2:	20 e0       	ldi	r18, 0x00	; 0
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	40 e0       	ldi	r20, 0x00	; 0
     2c8:	5f e3       	ldi	r21, 0x3F	; 63
     2ca:	de d4       	rcall	.+2492   	; 0xc88 <__addsf3>
     2cc:	41 d5       	rcall	.+2690   	; 0xd50 <__fixsfsi>
     2ce:	c6 9f       	mul	r28, r22
     2d0:	90 01       	movw	r18, r0
     2d2:	c7 9f       	mul	r28, r23
     2d4:	30 0d       	add	r19, r0
     2d6:	d6 9f       	mul	r29, r22
     2d8:	30 0d       	add	r19, r0
     2da:	11 24       	eor	r1, r1
     2dc:	e2 0e       	add	r14, r18
     2de:	f3 1e       	adc	r15, r19
     2e0:	d3 94       	inc	r13
     2e2:	cd 2d       	mov	r28, r13
     2e4:	d0 e0       	ldi	r29, 0x00	; 0
     2e6:	0c 17       	cp	r16, r28
     2e8:	1d 07       	cpc	r17, r29
     2ea:	bc f6       	brge	.-82     	; 0x29a <__vector_25+0xc6>
     2ec:	49 c0       	rjmp	.+146    	; 0x380 <__vector_25+0x1ac>
     2ee:	88 23       	and	r24, r24
     2f0:	09 f4       	brne	.+2      	; 0x2f4 <__vector_25+0x120>
     2f2:	59 c0       	rjmp	.+178    	; 0x3a6 <__vector_25+0x1d2>
     2f4:	81 37       	cpi	r24, 0x71	; 113
     2f6:	d1 f1       	breq	.+116    	; 0x36c <__vector_25+0x198>
     2f8:	28 f4       	brcc	.+10     	; 0x304 <__vector_25+0x130>
     2fa:	81 36       	cpi	r24, 0x61	; 97
     2fc:	b1 f0       	breq	.+44     	; 0x32a <__vector_25+0x156>
     2fe:	84 36       	cpi	r24, 0x64	; 100
     300:	51 f1       	breq	.+84     	; 0x356 <__vector_25+0x182>
     302:	49 c0       	rjmp	.+146    	; 0x396 <__vector_25+0x1c2>
     304:	84 37       	cpi	r24, 0x74	; 116
     306:	d1 f1       	breq	.+116    	; 0x37c <__vector_25+0x1a8>
     308:	87 37       	cpi	r24, 0x77	; 119
     30a:	21 f0       	breq	.+8      	; 0x314 <__vector_25+0x140>
     30c:	83 37       	cpi	r24, 0x73	; 115
     30e:	09 f0       	breq	.+2      	; 0x312 <__vector_25+0x13e>
     310:	42 c0       	rjmp	.+132    	; 0x396 <__vector_25+0x1c2>
     312:	16 c0       	rjmp	.+44     	; 0x340 <__vector_25+0x16c>
     314:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <rp6Data+0x2>
     318:	81 30       	cpi	r24, 0x01	; 1
     31a:	19 f4       	brne	.+6      	; 0x322 <__vector_25+0x14e>
     31c:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <rp6Data+0x2>
     320:	3a c0       	rjmp	.+116    	; 0x396 <__vector_25+0x1c2>
     322:	81 e0       	ldi	r24, 0x01	; 1
     324:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <rp6Data+0x2>
     328:	36 c0       	rjmp	.+108    	; 0x396 <__vector_25+0x1c2>
     32a:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <rp6Data+0x3>
     32e:	8f 3f       	cpi	r24, 0xFF	; 255
     330:	19 f4       	brne	.+6      	; 0x338 <__vector_25+0x164>
     332:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <rp6Data+0x3>
     336:	2f c0       	rjmp	.+94     	; 0x396 <__vector_25+0x1c2>
     338:	8f ef       	ldi	r24, 0xFF	; 255
     33a:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <rp6Data+0x3>
     33e:	2b c0       	rjmp	.+86     	; 0x396 <__vector_25+0x1c2>
     340:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <rp6Data+0x2>
     344:	8f 3f       	cpi	r24, 0xFF	; 255
     346:	19 f4       	brne	.+6      	; 0x34e <__vector_25+0x17a>
     348:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <rp6Data+0x2>
     34c:	24 c0       	rjmp	.+72     	; 0x396 <__vector_25+0x1c2>
     34e:	8f ef       	ldi	r24, 0xFF	; 255
     350:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <rp6Data+0x2>
     354:	20 c0       	rjmp	.+64     	; 0x396 <__vector_25+0x1c2>
     356:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <rp6Data+0x3>
     35a:	81 30       	cpi	r24, 0x01	; 1
     35c:	19 f4       	brne	.+6      	; 0x364 <__vector_25+0x190>
     35e:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <rp6Data+0x3>
     362:	19 c0       	rjmp	.+50     	; 0x396 <__vector_25+0x1c2>
     364:	81 e0       	ldi	r24, 0x01	; 1
     366:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <rp6Data+0x3>
     36a:	15 c0       	rjmp	.+42     	; 0x396 <__vector_25+0x1c2>
     36c:	e0 e0       	ldi	r30, 0x00	; 0
     36e:	f4 e0       	ldi	r31, 0x04	; 4
     370:	11 82       	std	Z+1, r1	; 0x01
     372:	10 82       	st	Z, r1
     374:	13 82       	std	Z+3, r1	; 0x03
     376:	81 e0       	ldi	r24, 0x01	; 1
     378:	82 83       	std	Z+2, r24	; 0x02
     37a:	0d c0       	rjmp	.+26     	; 0x396 <__vector_25+0x1c2>
     37c:	e1 2c       	mov	r14, r1
     37e:	f1 2c       	mov	r15, r1
     380:	85 e6       	ldi	r24, 0x65	; 101
     382:	e8 16       	cp	r14, r24
     384:	f1 04       	cpc	r15, r1
     386:	38 f4       	brcc	.+14     	; 0x396 <__vector_25+0x1c2>
     388:	02 c0       	rjmp	.+4      	; 0x38e <__vector_25+0x1ba>
     38a:	e1 2c       	mov	r14, r1
     38c:	f1 2c       	mov	r15, r1
     38e:	f0 92 01 04 	sts	0x0401, r15	; 0x800401 <rp6Data+0x1>
     392:	e0 92 00 04 	sts	0x0400, r14	; 0x800400 <rp6Data>
     396:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <command.1976>
     39a:	8f ef       	ldi	r24, 0xFF	; 255
     39c:	9f ef       	ldi	r25, 0xFF	; 255
     39e:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__data_start+0x1>
     3a2:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
     3a6:	ff 91       	pop	r31
     3a8:	ef 91       	pop	r30
     3aa:	df 91       	pop	r29
     3ac:	cf 91       	pop	r28
     3ae:	bf 91       	pop	r27
     3b0:	af 91       	pop	r26
     3b2:	9f 91       	pop	r25
     3b4:	8f 91       	pop	r24
     3b6:	7f 91       	pop	r23
     3b8:	6f 91       	pop	r22
     3ba:	5f 91       	pop	r21
     3bc:	4f 91       	pop	r20
     3be:	3f 91       	pop	r19
     3c0:	2f 91       	pop	r18
     3c2:	1f 91       	pop	r17
     3c4:	0f 91       	pop	r16
     3c6:	ff 90       	pop	r15
     3c8:	ef 90       	pop	r14
     3ca:	df 90       	pop	r13
     3cc:	0f 90       	pop	r0
     3ce:	0b be       	out	0x3b, r0	; 59
     3d0:	0f 90       	pop	r0
     3d2:	0f be       	out	0x3f, r0	; 63
     3d4:	0f 90       	pop	r0
     3d6:	1f 90       	pop	r1
     3d8:	18 95       	reti

000003da <init_micros>:
     3da:	e1 e9       	ldi	r30, 0x91	; 145
     3dc:	f0 e0       	ldi	r31, 0x00	; 0
     3de:	80 81       	ld	r24, Z
     3e0:	81 60       	ori	r24, 0x01	; 1
     3e2:	80 83       	st	Z, r24
     3e4:	e1 e7       	ldi	r30, 0x71	; 113
     3e6:	f0 e0       	ldi	r31, 0x00	; 0
     3e8:	80 81       	ld	r24, Z
     3ea:	81 60       	ori	r24, 0x01	; 1
     3ec:	80 83       	st	Z, r24
     3ee:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     3f2:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     3f6:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <t3TotalOverflow>
     3fa:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <t3TotalOverflow+0x1>
     3fe:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <t3TotalOverflow+0x2>
     402:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <t3TotalOverflow+0x3>
     406:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <t3TotalOverflow+0x4>
     40a:	10 92 df 03 	sts	0x03DF, r1	; 0x8003df <t3TotalOverflow+0x5>
     40e:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <t3TotalOverflow+0x6>
     412:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <t3TotalOverflow+0x7>
     416:	08 95       	ret

00000418 <__vector_35>:
     418:	1f 92       	push	r1
     41a:	0f 92       	push	r0
     41c:	0f b6       	in	r0, 0x3f	; 63
     41e:	0f 92       	push	r0
     420:	11 24       	eor	r1, r1
     422:	2f 93       	push	r18
     424:	3f 93       	push	r19
     426:	4f 93       	push	r20
     428:	5f 93       	push	r21
     42a:	6f 93       	push	r22
     42c:	7f 93       	push	r23
     42e:	8f 93       	push	r24
     430:	9f 93       	push	r25
     432:	af 93       	push	r26
     434:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <t3TotalOverflow>
     438:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <t3TotalOverflow+0x1>
     43c:	40 91 dc 03 	lds	r20, 0x03DC	; 0x8003dc <t3TotalOverflow+0x2>
     440:	50 91 dd 03 	lds	r21, 0x03DD	; 0x8003dd <t3TotalOverflow+0x3>
     444:	60 91 de 03 	lds	r22, 0x03DE	; 0x8003de <t3TotalOverflow+0x4>
     448:	70 91 df 03 	lds	r23, 0x03DF	; 0x8003df <t3TotalOverflow+0x5>
     44c:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <t3TotalOverflow+0x6>
     450:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <t3TotalOverflow+0x7>
     454:	a1 e0       	ldi	r26, 0x01	; 1
     456:	b9 d7       	rcall	.+3954   	; 0x13ca <__adddi3_s8>
     458:	20 93 da 03 	sts	0x03DA, r18	; 0x8003da <t3TotalOverflow>
     45c:	30 93 db 03 	sts	0x03DB, r19	; 0x8003db <t3TotalOverflow+0x1>
     460:	40 93 dc 03 	sts	0x03DC, r20	; 0x8003dc <t3TotalOverflow+0x2>
     464:	50 93 dd 03 	sts	0x03DD, r21	; 0x8003dd <t3TotalOverflow+0x3>
     468:	60 93 de 03 	sts	0x03DE, r22	; 0x8003de <t3TotalOverflow+0x4>
     46c:	70 93 df 03 	sts	0x03DF, r23	; 0x8003df <t3TotalOverflow+0x5>
     470:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <t3TotalOverflow+0x6>
     474:	90 93 e1 03 	sts	0x03E1, r25	; 0x8003e1 <t3TotalOverflow+0x7>
     478:	af 91       	pop	r26
     47a:	9f 91       	pop	r25
     47c:	8f 91       	pop	r24
     47e:	7f 91       	pop	r23
     480:	6f 91       	pop	r22
     482:	5f 91       	pop	r21
     484:	4f 91       	pop	r20
     486:	3f 91       	pop	r19
     488:	2f 91       	pop	r18
     48a:	0f 90       	pop	r0
     48c:	0f be       	out	0x3f, r0	; 63
     48e:	0f 90       	pop	r0
     490:	1f 90       	pop	r1
     492:	18 95       	reti

00000494 <micros>:
     494:	4f 92       	push	r4
     496:	5f 92       	push	r5
     498:	6f 92       	push	r6
     49a:	7f 92       	push	r7
     49c:	8f 92       	push	r8
     49e:	9f 92       	push	r9
     4a0:	af 92       	push	r10
     4a2:	bf 92       	push	r11
     4a4:	cf 92       	push	r12
     4a6:	df 92       	push	r13
     4a8:	ef 92       	push	r14
     4aa:	ff 92       	push	r15
     4ac:	0f 93       	push	r16
     4ae:	1f 93       	push	r17
     4b0:	80 90 94 00 	lds	r8, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     4b4:	90 90 95 00 	lds	r9, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     4b8:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <t3TotalOverflow>
     4bc:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <t3TotalOverflow+0x1>
     4c0:	40 91 dc 03 	lds	r20, 0x03DC	; 0x8003dc <t3TotalOverflow+0x2>
     4c4:	50 91 dd 03 	lds	r21, 0x03DD	; 0x8003dd <t3TotalOverflow+0x3>
     4c8:	60 91 de 03 	lds	r22, 0x03DE	; 0x8003de <t3TotalOverflow+0x4>
     4cc:	70 91 df 03 	lds	r23, 0x03DF	; 0x8003df <t3TotalOverflow+0x5>
     4d0:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <t3TotalOverflow+0x6>
     4d4:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <t3TotalOverflow+0x7>
     4d8:	98 2c       	mov	r9, r8
     4da:	88 24       	eor	r8, r8
     4dc:	99 0c       	add	r9, r9
     4de:	99 0c       	add	r9, r9
     4e0:	99 0c       	add	r9, r9
     4e2:	99 0c       	add	r9, r9
     4e4:	09 2c       	mov	r0, r9
     4e6:	00 0c       	add	r0, r0
     4e8:	aa 08       	sbc	r10, r10
     4ea:	bb 08       	sbc	r11, r11
     4ec:	bb 20       	and	r11, r11
     4ee:	2c f4       	brge	.+10     	; 0x4fa <micros+0x66>
     4f0:	ef ef       	ldi	r30, 0xFF	; 255
     4f2:	8e 0e       	add	r8, r30
     4f4:	9e 1e       	adc	r9, r30
     4f6:	a1 1c       	adc	r10, r1
     4f8:	b1 1c       	adc	r11, r1
     4fa:	25 01       	movw	r4, r10
     4fc:	77 24       	eor	r7, r7
     4fe:	57 fc       	sbrc	r5, 7
     500:	70 94       	com	r7
     502:	67 2c       	mov	r6, r7
     504:	bb 0c       	add	r11, r11
     506:	88 08       	sbc	r8, r8
     508:	98 2c       	mov	r9, r8
     50a:	54 01       	movw	r10, r8
     50c:	0c e0       	ldi	r16, 0x0C	; 12
     50e:	3b d7       	rcall	.+3702   	; 0x1386 <__ashldi3>
     510:	f2 2f       	mov	r31, r18
     512:	e3 2f       	mov	r30, r19
     514:	c4 2e       	mov	r12, r20
     516:	d5 2e       	mov	r13, r21
     518:	e6 2e       	mov	r14, r22
     51a:	f7 2e       	mov	r15, r23
     51c:	08 2f       	mov	r16, r24
     51e:	19 2f       	mov	r17, r25
     520:	24 2d       	mov	r18, r4
     522:	35 2d       	mov	r19, r5
     524:	46 2d       	mov	r20, r6
     526:	57 2d       	mov	r21, r7
     528:	68 2d       	mov	r22, r8
     52a:	78 2d       	mov	r23, r8
     52c:	88 2d       	mov	r24, r8
     52e:	98 2d       	mov	r25, r8
     530:	af 2e       	mov	r10, r31
     532:	be 2e       	mov	r11, r30
     534:	41 d7       	rcall	.+3714   	; 0x13b8 <__adddi3>
     536:	1f 91       	pop	r17
     538:	0f 91       	pop	r16
     53a:	ff 90       	pop	r15
     53c:	ef 90       	pop	r14
     53e:	df 90       	pop	r13
     540:	cf 90       	pop	r12
     542:	bf 90       	pop	r11
     544:	af 90       	pop	r10
     546:	9f 90       	pop	r9
     548:	8f 90       	pop	r8
     54a:	7f 90       	pop	r7
     54c:	6f 90       	pop	r6
     54e:	5f 90       	pop	r5
     550:	4f 90       	pop	r4
     552:	08 95       	ret

00000554 <init_TWI>:
     554:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     558:	88 e4       	ldi	r24, 0x48	; 72
     55a:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     55e:	85 e0       	ldi	r24, 0x05	; 5
     560:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     564:	08 95       	ret

00000566 <init_TWI_Timer2>:
     566:	e1 eb       	ldi	r30, 0xB1	; 177
     568:	f0 e0       	ldi	r31, 0x00	; 0
     56a:	80 81       	ld	r24, Z
     56c:	87 60       	ori	r24, 0x07	; 7
     56e:	80 83       	st	Z, r24
     570:	e0 e7       	ldi	r30, 0x70	; 112
     572:	f0 e0       	ldi	r31, 0x00	; 0
     574:	80 81       	ld	r24, Z
     576:	81 60       	ori	r24, 0x01	; 1
     578:	80 83       	st	Z, r24
     57a:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7000b2>
     57e:	08 95       	ret

00000580 <init_arduinoData>:
     580:	e2 ee       	ldi	r30, 0xE2	; 226
     582:	f3 e0       	ldi	r31, 0x03	; 3
     584:	11 82       	std	Z+1, r1	; 0x01
     586:	10 82       	st	Z, r1
     588:	13 82       	std	Z+3, r1	; 0x03
     58a:	12 82       	std	Z+2, r1	; 0x02
     58c:	08 95       	ret

0000058e <init_rp6Data>:
     58e:	e0 e0       	ldi	r30, 0x00	; 0
     590:	f4 e0       	ldi	r31, 0x04	; 4
     592:	11 82       	std	Z+1, r1	; 0x01
     594:	10 82       	st	Z, r1
     596:	12 82       	std	Z+2, r1	; 0x02
     598:	13 82       	std	Z+3, r1	; 0x03
     59a:	80 ed       	ldi	r24, 0xD0	; 208
     59c:	97 e0       	ldi	r25, 0x07	; 7
     59e:	95 83       	std	Z+5, r25	; 0x05
     5a0:	84 83       	std	Z+4, r24	; 0x04
     5a2:	84 ec       	ldi	r24, 0xC4	; 196
     5a4:	99 e0       	ldi	r25, 0x09	; 9
     5a6:	97 83       	std	Z+7, r25	; 0x07
     5a8:	86 83       	std	Z+6, r24	; 0x06
     5aa:	88 e5       	ldi	r24, 0x58	; 88
     5ac:	9b e1       	ldi	r25, 0x1B	; 27
     5ae:	91 87       	std	Z+9, r25	; 0x09
     5b0:	80 87       	std	Z+8, r24	; 0x08
     5b2:	88 ec       	ldi	r24, 0xC8	; 200
     5b4:	90 e0       	ldi	r25, 0x00	; 0
     5b6:	a0 e0       	ldi	r26, 0x00	; 0
     5b8:	b0 e0       	ldi	r27, 0x00	; 0
     5ba:	82 87       	std	Z+10, r24	; 0x0a
     5bc:	93 87       	std	Z+11, r25	; 0x0b
     5be:	a4 87       	std	Z+12, r26	; 0x0c
     5c0:	b5 87       	std	Z+13, r27	; 0x0d
     5c2:	81 e0       	ldi	r24, 0x01	; 1
     5c4:	86 87       	std	Z+14, r24	; 0x0e
     5c6:	08 95       	ret

000005c8 <main>:
     5c8:	78 94       	sei
     5ca:	07 df       	rcall	.-498    	; 0x3da <init_micros>
     5cc:	ed dd       	rcall	.-1062   	; 0x1a8 <init_USART>
     5ce:	c2 df       	rcall	.-124    	; 0x554 <init_TWI>
     5d0:	ca df       	rcall	.-108    	; 0x566 <init_TWI_Timer2>
     5d2:	dd df       	rcall	.-70     	; 0x58e <init_rp6Data>
     5d4:	d5 df       	rcall	.-86     	; 0x580 <init_arduinoData>
     5d6:	cc d2       	rcall	.+1432   	; 0xb70 <initTimer>
     5d8:	e7 dd       	rcall	.-1074   	; 0x1a8 <init_USART>
     5da:	c0 e0       	ldi	r28, 0x00	; 0
     5dc:	d4 e0       	ldi	r29, 0x04	; 4
     5de:	40 90 c2 03 	lds	r4, 0x03C2	; 0x8003c2 <ultrasonicSensorTimer>
     5e2:	50 90 c3 03 	lds	r5, 0x03C3	; 0x8003c3 <ultrasonicSensorTimer+0x1>
     5e6:	60 90 c4 03 	lds	r6, 0x03C4	; 0x8003c4 <ultrasonicSensorTimer+0x2>
     5ea:	70 90 c5 03 	lds	r7, 0x03C5	; 0x8003c5 <ultrasonicSensorTimer+0x3>
     5ee:	52 df       	rcall	.-348    	; 0x494 <micros>
     5f0:	f2 2f       	mov	r31, r18
     5f2:	e3 2f       	mov	r30, r19
     5f4:	c4 2e       	mov	r12, r20
     5f6:	d5 2e       	mov	r13, r21
     5f8:	e6 2e       	mov	r14, r22
     5fa:	f7 2e       	mov	r15, r23
     5fc:	08 2f       	mov	r16, r24
     5fe:	19 2f       	mov	r17, r25
     600:	24 2d       	mov	r18, r4
     602:	35 2d       	mov	r19, r5
     604:	46 2d       	mov	r20, r6
     606:	57 2d       	mov	r21, r7
     608:	60 e0       	ldi	r22, 0x00	; 0
     60a:	70 e0       	ldi	r23, 0x00	; 0
     60c:	80 e0       	ldi	r24, 0x00	; 0
     60e:	90 e0       	ldi	r25, 0x00	; 0
     610:	af 2e       	mov	r10, r31
     612:	be 2e       	mov	r11, r30
     614:	e6 d6       	rcall	.+3532   	; 0x13e2 <__cmpdi2>
     616:	08 f0       	brcs	.+2      	; 0x61a <main+0x52>
     618:	4e c0       	rjmp	.+156    	; 0x6b6 <main+0xee>
     61a:	8a e0       	ldi	r24, 0x0A	; 10
     61c:	92 e0       	ldi	r25, 0x02	; 2
     61e:	78 d2       	rcall	.+1264   	; 0xb10 <writeString>
     620:	8d e0       	ldi	r24, 0x0D	; 13
     622:	92 e0       	ldi	r25, 0x02	; 2
     624:	75 d2       	rcall	.+1258   	; 0xb10 <writeString>
     626:	ae d2       	rcall	.+1372   	; 0xb84 <ultrasonicSensor>
     628:	88 d2       	rcall	.+1296   	; 0xb3a <writeInt>
     62a:	82 e2       	ldi	r24, 0x22	; 34
     62c:	92 e0       	ldi	r25, 0x02	; 2
     62e:	70 d2       	rcall	.+1248   	; 0xb10 <writeString>
     630:	88 81       	ld	r24, Y
     632:	99 81       	ldd	r25, Y+1	; 0x01
     634:	82 d2       	rcall	.+1284   	; 0xb3a <writeInt>
     636:	8f e2       	ldi	r24, 0x2F	; 47
     638:	92 e0       	ldi	r25, 0x02	; 2
     63a:	6a d2       	rcall	.+1236   	; 0xb10 <writeString>
     63c:	8a 81       	ldd	r24, Y+2	; 0x02
     63e:	81 30       	cpi	r24, 0x01	; 1
     640:	21 f4       	brne	.+8      	; 0x64a <main+0x82>
     642:	8e e3       	ldi	r24, 0x3E	; 62
     644:	92 e0       	ldi	r25, 0x02	; 2
     646:	64 d2       	rcall	.+1224   	; 0xb10 <writeString>
     648:	0b c0       	rjmp	.+22     	; 0x660 <main+0x98>
     64a:	81 11       	cpse	r24, r1
     64c:	04 c0       	rjmp	.+8      	; 0x656 <main+0x8e>
     64e:	88 e4       	ldi	r24, 0x48	; 72
     650:	92 e0       	ldi	r25, 0x02	; 2
     652:	5e d2       	rcall	.+1212   	; 0xb10 <writeString>
     654:	05 c0       	rjmp	.+10     	; 0x660 <main+0x98>
     656:	8f 3f       	cpi	r24, 0xFF	; 255
     658:	19 f4       	brne	.+6      	; 0x660 <main+0x98>
     65a:	85 e5       	ldi	r24, 0x55	; 85
     65c:	92 e0       	ldi	r25, 0x02	; 2
     65e:	58 d2       	rcall	.+1200   	; 0xb10 <writeString>
     660:	8b 81       	ldd	r24, Y+3	; 0x03
     662:	8f 3f       	cpi	r24, 0xFF	; 255
     664:	21 f4       	brne	.+8      	; 0x66e <main+0xa6>
     666:	81 e6       	ldi	r24, 0x61	; 97
     668:	92 e0       	ldi	r25, 0x02	; 2
     66a:	52 d2       	rcall	.+1188   	; 0xb10 <writeString>
     66c:	0b c0       	rjmp	.+22     	; 0x684 <main+0xbc>
     66e:	81 11       	cpse	r24, r1
     670:	04 c0       	rjmp	.+8      	; 0x67a <main+0xb2>
     672:	8e e6       	ldi	r24, 0x6E	; 110
     674:	92 e0       	ldi	r25, 0x02	; 2
     676:	4c d2       	rcall	.+1176   	; 0xb10 <writeString>
     678:	05 c0       	rjmp	.+10     	; 0x684 <main+0xbc>
     67a:	81 30       	cpi	r24, 0x01	; 1
     67c:	19 f4       	brne	.+6      	; 0x684 <main+0xbc>
     67e:	8d e7       	ldi	r24, 0x7D	; 125
     680:	92 e0       	ldi	r25, 0x02	; 2
     682:	46 d2       	rcall	.+1164   	; 0xb10 <writeString>
     684:	07 df       	rcall	.-498    	; 0x494 <micros>
     686:	82 2e       	mov	r8, r18
     688:	93 2e       	mov	r9, r19
     68a:	a4 2e       	mov	r10, r20
     68c:	b5 2e       	mov	r11, r21
     68e:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrasonicSensorSpeed>
     692:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrasonicSensorSpeed+0x1>
     696:	a0 91 08 02 	lds	r26, 0x0208	; 0x800208 <ultrasonicSensorSpeed+0x2>
     69a:	b0 91 09 02 	lds	r27, 0x0209	; 0x800209 <ultrasonicSensorSpeed+0x3>
     69e:	88 0e       	add	r8, r24
     6a0:	99 1e       	adc	r9, r25
     6a2:	aa 1e       	adc	r10, r26
     6a4:	bb 1e       	adc	r11, r27
     6a6:	80 92 c2 03 	sts	0x03C2, r8	; 0x8003c2 <ultrasonicSensorTimer>
     6aa:	90 92 c3 03 	sts	0x03C3, r9	; 0x8003c3 <ultrasonicSensorTimer+0x1>
     6ae:	a0 92 c4 03 	sts	0x03C4, r10	; 0x8003c4 <ultrasonicSensorTimer+0x2>
     6b2:	b0 92 c5 03 	sts	0x03C5, r11	; 0x8003c5 <ultrasonicSensorTimer+0x3>
     6b6:	40 90 be 03 	lds	r4, 0x03BE	; 0x8003be <stoptimer>
     6ba:	50 90 bf 03 	lds	r5, 0x03BF	; 0x8003bf <stoptimer+0x1>
     6be:	60 90 c0 03 	lds	r6, 0x03C0	; 0x8003c0 <stoptimer+0x2>
     6c2:	70 90 c1 03 	lds	r7, 0x03C1	; 0x8003c1 <stoptimer+0x3>
     6c6:	e6 de       	rcall	.-564    	; 0x494 <micros>
     6c8:	f2 2f       	mov	r31, r18
     6ca:	e3 2f       	mov	r30, r19
     6cc:	c4 2e       	mov	r12, r20
     6ce:	d5 2e       	mov	r13, r21
     6d0:	e6 2e       	mov	r14, r22
     6d2:	f7 2e       	mov	r15, r23
     6d4:	08 2f       	mov	r16, r24
     6d6:	19 2f       	mov	r17, r25
     6d8:	24 2d       	mov	r18, r4
     6da:	35 2d       	mov	r19, r5
     6dc:	46 2d       	mov	r20, r6
     6de:	57 2d       	mov	r21, r7
     6e0:	60 e0       	ldi	r22, 0x00	; 0
     6e2:	70 e0       	ldi	r23, 0x00	; 0
     6e4:	80 e0       	ldi	r24, 0x00	; 0
     6e6:	90 e0       	ldi	r25, 0x00	; 0
     6e8:	af 2e       	mov	r10, r31
     6ea:	be 2e       	mov	r11, r30
     6ec:	7a d6       	rcall	.+3316   	; 0x13e2 <__cmpdi2>
     6ee:	08 f0       	brcs	.+2      	; 0x6f2 <main+0x12a>
     6f0:	76 cf       	rjmp	.-276    	; 0x5de <main+0x16>
     6f2:	48 d2       	rcall	.+1168   	; 0xb84 <ultrasonicSensor>
     6f4:	28 81       	ld	r18, Y
     6f6:	39 81       	ldd	r19, Y+1	; 0x01
     6f8:	2d 33       	cpi	r18, 0x3D	; 61
     6fa:	31 05       	cpc	r19, r1
     6fc:	48 f4       	brcc	.+18     	; 0x710 <main+0x148>
     6fe:	2a 81       	ldd	r18, Y+2	; 0x02
     700:	21 30       	cpi	r18, 0x01	; 1
     702:	71 f4       	brne	.+28     	; 0x720 <main+0x158>
     704:	84 3b       	cpi	r24, 0xB4	; 180
     706:	91 05       	cpc	r25, r1
     708:	58 f4       	brcc	.+22     	; 0x720 <main+0x158>
     70a:	19 82       	std	Y+1, r1	; 0x01
     70c:	18 82       	st	Y, r1
     70e:	08 c0       	rjmp	.+16     	; 0x720 <main+0x158>
     710:	88 31       	cpi	r24, 0x18	; 24
     712:	91 40       	sbci	r25, 0x01	; 1
     714:	28 f4       	brcc	.+10     	; 0x720 <main+0x158>
     716:	8a 81       	ldd	r24, Y+2	; 0x02
     718:	81 30       	cpi	r24, 0x01	; 1
     71a:	11 f4       	brne	.+4      	; 0x720 <main+0x158>
     71c:	19 82       	std	Y+1, r1	; 0x01
     71e:	18 82       	st	Y, r1
     720:	b9 de       	rcall	.-654    	; 0x494 <micros>
     722:	82 2e       	mov	r8, r18
     724:	93 2e       	mov	r9, r19
     726:	a4 2e       	mov	r10, r20
     728:	b5 2e       	mov	r11, r21
     72a:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <stoptimerspeed>
     72e:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <stoptimerspeed+0x1>
     732:	a0 91 04 02 	lds	r26, 0x0204	; 0x800204 <stoptimerspeed+0x2>
     736:	b0 91 05 02 	lds	r27, 0x0205	; 0x800205 <stoptimerspeed+0x3>
     73a:	88 0e       	add	r8, r24
     73c:	99 1e       	adc	r9, r25
     73e:	aa 1e       	adc	r10, r26
     740:	bb 1e       	adc	r11, r27
     742:	80 92 be 03 	sts	0x03BE, r8	; 0x8003be <stoptimer>
     746:	90 92 bf 03 	sts	0x03BF, r9	; 0x8003bf <stoptimer+0x1>
     74a:	a0 92 c0 03 	sts	0x03C0, r10	; 0x8003c0 <stoptimer+0x2>
     74e:	b0 92 c1 03 	sts	0x03C1, r11	; 0x8003c1 <stoptimer+0x3>
     752:	45 cf       	rjmp	.-374    	; 0x5de <main+0x16>

00000754 <arduinoDataInterpreter>:
     754:	a2 ee       	ldi	r26, 0xE2	; 226
     756:	b3 e0       	ldi	r27, 0x03	; 3
     758:	e6 ec       	ldi	r30, 0xC6	; 198
     75a:	f3 e0       	ldi	r31, 0x03	; 3
     75c:	81 81       	ldd	r24, Z+1	; 0x01
     75e:	90 e0       	ldi	r25, 0x00	; 0
     760:	98 2f       	mov	r25, r24
     762:	88 27       	eor	r24, r24
     764:	22 81       	ldd	r18, Z+2	; 0x02
     766:	82 0f       	add	r24, r18
     768:	91 1d       	adc	r25, r1
     76a:	11 96       	adiw	r26, 0x01	; 1
     76c:	9c 93       	st	X, r25
     76e:	8e 93       	st	-X, r24
     770:	83 81       	ldd	r24, Z+3	; 0x03
     772:	90 e0       	ldi	r25, 0x00	; 0
     774:	98 2f       	mov	r25, r24
     776:	88 27       	eor	r24, r24
     778:	24 81       	ldd	r18, Z+4	; 0x04
     77a:	82 0f       	add	r24, r18
     77c:	91 1d       	adc	r25, r1
     77e:	13 96       	adiw	r26, 0x03	; 3
     780:	9c 93       	st	X, r25
     782:	8e 93       	st	-X, r24
     784:	12 97       	sbiw	r26, 0x02	; 2
     786:	85 81       	ldd	r24, Z+5	; 0x05
     788:	90 e0       	ldi	r25, 0x00	; 0
     78a:	98 2f       	mov	r25, r24
     78c:	88 27       	eor	r24, r24
     78e:	26 81       	ldd	r18, Z+6	; 0x06
     790:	82 0f       	add	r24, r18
     792:	91 1d       	adc	r25, r1
     794:	15 96       	adiw	r26, 0x05	; 5
     796:	9c 93       	st	X, r25
     798:	8e 93       	st	-X, r24
     79a:	14 97       	sbiw	r26, 0x04	; 4
     79c:	87 81       	ldd	r24, Z+7	; 0x07
     79e:	90 e0       	ldi	r25, 0x00	; 0
     7a0:	98 2f       	mov	r25, r24
     7a2:	88 27       	eor	r24, r24
     7a4:	20 85       	ldd	r18, Z+8	; 0x08
     7a6:	82 0f       	add	r24, r18
     7a8:	91 1d       	adc	r25, r1
     7aa:	17 96       	adiw	r26, 0x07	; 7
     7ac:	9c 93       	st	X, r25
     7ae:	8e 93       	st	-X, r24
     7b0:	16 97       	sbiw	r26, 0x06	; 6
     7b2:	81 85       	ldd	r24, Z+9	; 0x09
     7b4:	90 e0       	ldi	r25, 0x00	; 0
     7b6:	98 2f       	mov	r25, r24
     7b8:	88 27       	eor	r24, r24
     7ba:	22 85       	ldd	r18, Z+10	; 0x0a
     7bc:	82 0f       	add	r24, r18
     7be:	91 1d       	adc	r25, r1
     7c0:	19 96       	adiw	r26, 0x09	; 9
     7c2:	9c 93       	st	X, r25
     7c4:	8e 93       	st	-X, r24
     7c6:	18 97       	sbiw	r26, 0x08	; 8
     7c8:	08 95       	ret

000007ca <I2C_receiveInterpreter>:
     7ca:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <receiveDataTWI>
     7ce:	81 30       	cpi	r24, 0x01	; 1
     7d0:	09 f4       	brne	.+2      	; 0x7d4 <I2C_receiveInterpreter+0xa>
     7d2:	c0 cf       	rjmp	.-128    	; 0x754 <arduinoDataInterpreter>
     7d4:	08 95       	ret

000007d6 <clearSendData>:
     7d6:	ec ee       	ldi	r30, 0xEC	; 236
     7d8:	f3 e0       	ldi	r31, 0x03	; 3
     7da:	80 e0       	ldi	r24, 0x00	; 0
     7dc:	94 e0       	ldi	r25, 0x04	; 4
     7de:	11 92       	st	Z+, r1
     7e0:	e8 17       	cp	r30, r24
     7e2:	f9 07       	cpc	r31, r25
     7e4:	e1 f7       	brne	.-8      	; 0x7de <clearSendData+0x8>
     7e6:	08 95       	ret

000007e8 <clearReceiveData>:
     7e8:	e6 ec       	ldi	r30, 0xC6	; 198
     7ea:	f3 e0       	ldi	r31, 0x03	; 3
     7ec:	8a ed       	ldi	r24, 0xDA	; 218
     7ee:	93 e0       	ldi	r25, 0x03	; 3
     7f0:	11 92       	st	Z+, r1
     7f2:	e8 17       	cp	r30, r24
     7f4:	f9 07       	cpc	r31, r25
     7f6:	e1 f7       	brne	.-8      	; 0x7f0 <clearReceiveData+0x8>
     7f8:	08 95       	ret

000007fa <__vector_39>:
     7fa:	1f 92       	push	r1
     7fc:	0f 92       	push	r0
     7fe:	0f b6       	in	r0, 0x3f	; 63
     800:	0f 92       	push	r0
     802:	11 24       	eor	r1, r1
     804:	0b b6       	in	r0, 0x3b	; 59
     806:	0f 92       	push	r0
     808:	2f 93       	push	r18
     80a:	3f 93       	push	r19
     80c:	4f 93       	push	r20
     80e:	5f 93       	push	r21
     810:	6f 93       	push	r22
     812:	7f 93       	push	r23
     814:	8f 93       	push	r24
     816:	9f 93       	push	r25
     818:	af 93       	push	r26
     81a:	bf 93       	push	r27
     81c:	ef 93       	push	r30
     81e:	ff 93       	push	r31
     820:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     824:	80 35       	cpi	r24, 0x50	; 80
     826:	69 f0       	breq	.+26     	; 0x842 <__vector_39+0x48>
     828:	88 35       	cpi	r24, 0x58	; 88
     82a:	51 f1       	breq	.+84     	; 0x880 <__vector_39+0x86>
     82c:	80 34       	cpi	r24, 0x40	; 64
     82e:	a9 f5       	brne	.+106    	; 0x89a <__vector_39+0xa0>
     830:	db df       	rcall	.-74     	; 0x7e8 <clearReceiveData>
     832:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <bytecounter.2025+0x1>
     836:	10 92 bc 02 	sts	0x02BC, r1	; 0x8002bc <bytecounter.2025>
     83a:	85 ec       	ldi	r24, 0xC5	; 197
     83c:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     840:	2c c0       	rjmp	.+88     	; 0x89a <__vector_39+0xa0>
     842:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <bytecounter.2025>
     846:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <bytecounter.2025+0x1>
     84a:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     84e:	fc 01       	movw	r30, r24
     850:	ea 53       	subi	r30, 0x3A	; 58
     852:	fc 4f       	sbci	r31, 0xFC	; 252
     854:	20 83       	st	Z, r18
     856:	82 31       	cpi	r24, 0x12	; 18
     858:	91 05       	cpc	r25, r1
     85a:	4c f4       	brge	.+18     	; 0x86e <__vector_39+0x74>
     85c:	01 96       	adiw	r24, 0x01	; 1
     85e:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <bytecounter.2025+0x1>
     862:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <bytecounter.2025>
     866:	85 ec       	ldi	r24, 0xC5	; 197
     868:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     86c:	16 c0       	rjmp	.+44     	; 0x89a <__vector_39+0xa0>
     86e:	01 96       	adiw	r24, 0x01	; 1
     870:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <bytecounter.2025+0x1>
     874:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <bytecounter.2025>
     878:	85 e8       	ldi	r24, 0x85	; 133
     87a:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     87e:	0d c0       	rjmp	.+26     	; 0x89a <__vector_39+0xa0>
     880:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     884:	e0 91 bc 02 	lds	r30, 0x02BC	; 0x8002bc <bytecounter.2025>
     888:	f0 91 bd 02 	lds	r31, 0x02BD	; 0x8002bd <bytecounter.2025+0x1>
     88c:	ea 53       	subi	r30, 0x3A	; 58
     88e:	fc 4f       	sbci	r31, 0xFC	; 252
     890:	80 83       	st	Z, r24
     892:	85 e9       	ldi	r24, 0x95	; 149
     894:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     898:	98 df       	rcall	.-208    	; 0x7ca <I2C_receiveInterpreter>
     89a:	ff 91       	pop	r31
     89c:	ef 91       	pop	r30
     89e:	bf 91       	pop	r27
     8a0:	af 91       	pop	r26
     8a2:	9f 91       	pop	r25
     8a4:	8f 91       	pop	r24
     8a6:	7f 91       	pop	r23
     8a8:	6f 91       	pop	r22
     8aa:	5f 91       	pop	r21
     8ac:	4f 91       	pop	r20
     8ae:	3f 91       	pop	r19
     8b0:	2f 91       	pop	r18
     8b2:	0f 90       	pop	r0
     8b4:	0b be       	out	0x3b, r0	; 59
     8b6:	0f 90       	pop	r0
     8b8:	0f be       	out	0x3f, r0	; 63
     8ba:	0f 90       	pop	r0
     8bc:	1f 90       	pop	r1
     8be:	18 95       	reti

000008c0 <TWIwaitUntilReady>:


void TWIwaitUntilReady(){
	while (!(TWCR & (1 << TWINT)));
     8c0:	ec eb       	ldi	r30, 0xBC	; 188
     8c2:	f0 e0       	ldi	r31, 0x00	; 0
     8c4:	80 81       	ld	r24, Z
     8c6:	88 23       	and	r24, r24
     8c8:	ec f7       	brge	.-6      	; 0x8c4 <TWIwaitUntilReady+0x4>
}
     8ca:	08 95       	ret

000008cc <checkCode>:


void checkCode(uint8_t code){
     8cc:	cf 93       	push	r28
     8ce:	df 93       	push	r29
     8d0:	cd b7       	in	r28, 0x3d	; 61
     8d2:	de b7       	in	r29, 0x3e	; 62
     8d4:	cf 5f       	subi	r28, 0xFF	; 255
     8d6:	d1 09       	sbc	r29, r1
     8d8:	0f b6       	in	r0, 0x3f	; 63
     8da:	f8 94       	cli
     8dc:	de bf       	out	0x3e, r29	; 62
     8de:	0f be       	out	0x3f, r0	; 63
     8e0:	cd bf       	out	0x3d, r28	; 61
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     8e2:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
	while (!(TWCR & (1 << TWINT)));
}


void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
     8e6:	98 7f       	andi	r25, 0xF8	; 248
     8e8:	89 17       	cp	r24, r25
     8ea:	81 f0       	breq	.+32     	; 0x90c <checkCode+0x40>
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
     8ec:	8b e8       	ldi	r24, 0x8B	; 139
     8ee:	92 e0       	ldi	r25, 0x02	; 2
     8f0:	0f d1       	rcall	.+542    	; 0xb10 <writeString>
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     8f2:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     8f6:	88 7f       	andi	r24, 0xF8	; 248
     8f8:	40 e1       	ldi	r20, 0x10	; 16
     8fa:	be 01       	movw	r22, r28
     8fc:	6f 5f       	subi	r22, 0xFF	; 255
     8fe:	7f 4f       	sbci	r23, 0xFF	; 255
     900:	90 e0       	ldi	r25, 0x00	; 0

void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
		writeString( itoa( TWIGetStatus(), buffer, 16) );
     902:	87 d5       	rcall	.+2830   	; 0x1412 <__itoa_ncheck>
		writeString("\n\n\r");
     904:	05 d1       	rcall	.+522    	; 0xb10 <writeString>
     906:	86 eb       	ldi	r24, 0xB6	; 182
     908:	92 e0       	ldi	r25, 0x02	; 2
     90a:	02 d1       	rcall	.+516    	; 0xb10 <writeString>
	}
}
     90c:	c1 50       	subi	r28, 0x01	; 1
     90e:	df 4f       	sbci	r29, 0xFF	; 255
     910:	0f b6       	in	r0, 0x3f	; 63
     912:	f8 94       	cli
     914:	de bf       	out	0x3e, r29	; 62
     916:	0f be       	out	0x3f, r0	; 63
     918:	cd bf       	out	0x3d, r28	; 61
     91a:	df 91       	pop	r29
     91c:	cf 91       	pop	r28
     91e:	08 95       	ret

00000920 <writeToSlave>:


void writeToSlave(uint8_t address, uint8_t dataByte[]){
     920:	af 92       	push	r10
     922:	bf 92       	push	r11
     924:	cf 92       	push	r12
     926:	df 92       	push	r13
     928:	ff 92       	push	r15
     92a:	0f 93       	push	r16
     92c:	1f 93       	push	r17
     92e:	cf 93       	push	r28
     930:	df 93       	push	r29
     932:	c8 2f       	mov	r28, r24
     934:	8b 01       	movw	r16, r22
	
	TWISendStart();
     936:	0f 2e       	mov	r0, r31
     938:	fc eb       	ldi	r31, 0xBC	; 188
     93a:	cf 2e       	mov	r12, r31
     93c:	d1 2c       	mov	r13, r1
     93e:	f0 2d       	mov	r31, r0
     940:	85 ea       	ldi	r24, 0xA5	; 165
     942:	f6 01       	movw	r30, r12
     944:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     946:	bc df       	rcall	.-136    	; 0x8c0 <TWIwaitUntilReady>
	checkCode(0x08);
     948:	88 e0       	ldi	r24, 0x08	; 8
     94a:	c0 df       	rcall	.-128    	; 0x8cc <checkCode>
	
	TWIWrite((address << 1));
     94c:	cc 0f       	add	r28, r28
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     94e:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     952:	85 e8       	ldi	r24, 0x85	; 133
     954:	f6 01       	movw	r30, r12
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
     956:	80 83       	st	Z, r24
	checkCode(0x18);
     958:	b3 df       	rcall	.-154    	; 0x8c0 <TWIwaitUntilReady>
     95a:	88 e1       	ldi	r24, 0x18	; 24
     95c:	b7 df       	rcall	.-146    	; 0x8cc <checkCode>
     95e:	e8 01       	movw	r28, r16
     960:	0c 5e       	subi	r16, 0xEC	; 236
     962:	1f 4f       	sbci	r17, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     964:	0f 2e       	mov	r0, r31
     966:	fb eb       	ldi	r31, 0xBB	; 187
     968:	af 2e       	mov	r10, r31
     96a:	b1 2c       	mov	r11, r1
     96c:	f0 2d       	mov	r31, r0
	TWISendTransmit();
     96e:	0f 2e       	mov	r0, r31
     970:	f5 e8       	ldi	r31, 0x85	; 133
     972:	ff 2e       	mov	r15, r31
     974:	f0 2d       	mov	r31, r0
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
     976:	89 91       	ld	r24, Y+
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     978:	f5 01       	movw	r30, r10
	TWISendTransmit();
     97a:	80 83       	st	Z, r24
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
     97c:	f6 01       	movw	r30, r12
     97e:	f0 82       	st	Z, r15
		checkCode(0x28);
     980:	9f df       	rcall	.-194    	; 0x8c0 <TWIwaitUntilReady>
     982:	88 e2       	ldi	r24, 0x28	; 40
     984:	a3 df       	rcall	.-186    	; 0x8cc <checkCode>
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
     986:	c0 17       	cp	r28, r16
     988:	d1 07       	cpc	r29, r17
     98a:	a9 f7       	brne	.-22     	; 0x976 <writeToSlave+0x56>
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
		checkCode(0x28);
	}
	
	TWISendStop();
     98c:	85 e9       	ldi	r24, 0x95	; 149
     98e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
}
     992:	df 91       	pop	r29
     994:	cf 91       	pop	r28
     996:	1f 91       	pop	r17
     998:	0f 91       	pop	r16
     99a:	ff 90       	pop	r15
     99c:	df 90       	pop	r13
     99e:	cf 90       	pop	r12
     9a0:	bf 90       	pop	r11
     9a2:	af 90       	pop	r10
     9a4:	08 95       	ret

000009a6 <rp6DataConstructor>:
	arduinoData.totalDistance = (receiveDataTWI[9] << 8) + receiveDataTWI[10];
}


void rp6DataConstructor(){
	clearSendData();
     9a6:	17 df       	rcall	.-466    	; 0x7d6 <clearSendData>
	
	sendDataTWI[0] = 1;
     9a8:	81 e0       	ldi	r24, 0x01	; 1
     9aa:	80 93 ec 03 	sts	0x03EC, r24	; 0x8003ec <sendDataTWI>
	if(rp6Data.driveSpeed > 100){rp6Data.driveSpeed = 100;}
     9ae:	80 91 00 04 	lds	r24, 0x0400	; 0x800400 <rp6Data>
     9b2:	90 91 01 04 	lds	r25, 0x0401	; 0x800401 <rp6Data+0x1>
     9b6:	85 36       	cpi	r24, 0x65	; 101
     9b8:	91 05       	cpc	r25, r1
     9ba:	30 f0       	brcs	.+12     	; 0x9c8 <rp6DataConstructor+0x22>
     9bc:	84 e6       	ldi	r24, 0x64	; 100
     9be:	90 e0       	ldi	r25, 0x00	; 0
     9c0:	90 93 01 04 	sts	0x0401, r25	; 0x800401 <rp6Data+0x1>
     9c4:	80 93 00 04 	sts	0x0400, r24	; 0x800400 <rp6Data>
	sendDataTWI[1] = rp6Data.driveSpeed;
     9c8:	ec ee       	ldi	r30, 0xEC	; 236
     9ca:	f3 e0       	ldi	r31, 0x03	; 3
     9cc:	a0 e0       	ldi	r26, 0x00	; 0
     9ce:	b4 e0       	ldi	r27, 0x04	; 4
     9d0:	8c 91       	ld	r24, X
     9d2:	81 83       	std	Z+1, r24	; 0x01
	sendDataTWI[2] = rp6Data.driveDirection + 1;
     9d4:	12 96       	adiw	r26, 0x02	; 2
     9d6:	8c 91       	ld	r24, X
     9d8:	12 97       	sbiw	r26, 0x02	; 2
     9da:	8f 5f       	subi	r24, 0xFF	; 255
     9dc:	82 83       	std	Z+2, r24	; 0x02
	sendDataTWI[3] = rp6Data.turnDirection + 1;
     9de:	13 96       	adiw	r26, 0x03	; 3
     9e0:	8c 91       	ld	r24, X
     9e2:	13 97       	sbiw	r26, 0x03	; 3
     9e4:	8f 5f       	subi	r24, 0xFF	; 255
     9e6:	83 83       	std	Z+3, r24	; 0x03
	
	sendDataTWI[4] = (rp6Data.accelerationRate >> 8);
     9e8:	14 96       	adiw	r26, 0x04	; 4
     9ea:	8c 91       	ld	r24, X
     9ec:	14 97       	sbiw	r26, 0x04	; 4
     9ee:	15 96       	adiw	r26, 0x05	; 5
     9f0:	9c 91       	ld	r25, X
     9f2:	15 97       	sbiw	r26, 0x05	; 5
     9f4:	94 83       	std	Z+4, r25	; 0x04
	sendDataTWI[5] = rp6Data.accelerationRate;
     9f6:	85 83       	std	Z+5, r24	; 0x05
	
	sendDataTWI[6] = (rp6Data.turnRate >> 8);
     9f8:	16 96       	adiw	r26, 0x06	; 6
     9fa:	8c 91       	ld	r24, X
     9fc:	16 97       	sbiw	r26, 0x06	; 6
     9fe:	17 96       	adiw	r26, 0x07	; 7
     a00:	9c 91       	ld	r25, X
     a02:	17 97       	sbiw	r26, 0x07	; 7
     a04:	96 83       	std	Z+6, r25	; 0x06
	sendDataTWI[7] = rp6Data.turnRate;
     a06:	87 83       	std	Z+7, r24	; 0x07
	
	sendDataTWI[8] = (rp6Data.driveSpeedThreshold >> 8);
     a08:	18 96       	adiw	r26, 0x08	; 8
     a0a:	8c 91       	ld	r24, X
     a0c:	18 97       	sbiw	r26, 0x08	; 8
     a0e:	19 96       	adiw	r26, 0x09	; 9
     a10:	9c 91       	ld	r25, X
     a12:	19 97       	sbiw	r26, 0x09	; 9
     a14:	90 87       	std	Z+8, r25	; 0x08
	sendDataTWI[9] = rp6Data.driveSpeedThreshold;
     a16:	81 87       	std	Z+9, r24	; 0x09
	
	sendDataTWI[10] = (rp6Data.updateSpeed >> 8);
     a18:	1a 96       	adiw	r26, 0x0a	; 10
     a1a:	8c 91       	ld	r24, X
     a1c:	1a 97       	sbiw	r26, 0x0a	; 10
     a1e:	1b 96       	adiw	r26, 0x0b	; 11
     a20:	9c 91       	ld	r25, X
     a22:	1b 97       	sbiw	r26, 0x0b	; 11
     a24:	92 87       	std	Z+10, r25	; 0x0a
	sendDataTWI[11] = rp6Data.updateSpeed;
     a26:	83 87       	std	Z+11, r24	; 0x0b
	
	sendDataTWI[12] = rp6Data.enableBeeper;
     a28:	1e 96       	adiw	r26, 0x0e	; 14
     a2a:	8c 91       	ld	r24, X
     a2c:	1e 97       	sbiw	r26, 0x0e	; 14
     a2e:	84 87       	std	Z+12, r24	; 0x0c
	
	sendDataTWI[13] = (rp6Data.compassAngle >> 8);
     a30:	1f 96       	adiw	r26, 0x0f	; 15
     a32:	8c 91       	ld	r24, X
     a34:	1f 97       	sbiw	r26, 0x0f	; 15
     a36:	50 96       	adiw	r26, 0x10	; 16
     a38:	9c 91       	ld	r25, X
     a3a:	95 87       	std	Z+13, r25	; 0x0d
	sendDataTWI[14] = rp6Data.compassAngle;
     a3c:	86 87       	std	Z+14, r24	; 0x0e
	
	for(int i = 15; i < DATASIZE; i++){
		sendDataTWI[i] = 0;
     a3e:	17 86       	std	Z+15, r1	; 0x0f
     a40:	10 8a       	std	Z+16, r1	; 0x10
     a42:	11 8a       	std	Z+17, r1	; 0x11
     a44:	12 8a       	std	Z+18, r1	; 0x12
     a46:	13 8a       	std	Z+19, r1	; 0x13
	}
	
	writeToSlave(RP6_ADDRESS, sendDataTWI);
     a48:	bf 01       	movw	r22, r30
     a4a:	83 e0       	ldi	r24, 0x03	; 3
     a4c:	69 cf       	rjmp	.-302    	; 0x920 <writeToSlave>
     a4e:	08 95       	ret

00000a50 <readFromSlave>:
	TWISendStop();
	
}


void readFromSlave(uint8_t address){
     a50:	0f 93       	push	r16
     a52:	1f 93       	push	r17
     a54:	cf 93       	push	r28
     a56:	c8 2f       	mov	r28, r24
	
	TWISendStart();
     a58:	0c eb       	ldi	r16, 0xBC	; 188
     a5a:	10 e0       	ldi	r17, 0x00	; 0
     a5c:	85 ea       	ldi	r24, 0xA5	; 165
     a5e:	f8 01       	movw	r30, r16
     a60:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     a62:	2e df       	rcall	.-420    	; 0x8c0 <TWIwaitUntilReady>
	checkCode(0x08);
     a64:	88 e0       	ldi	r24, 0x08	; 8
     a66:	32 df       	rcall	.-412    	; 0x8cc <checkCode>
	
	TWIWrite( (address << 1) + 1 );
     a68:	cc 0f       	add	r28, r28
     a6a:	cf 5f       	subi	r28, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     a6c:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     a70:	85 e8       	ldi	r24, 0x85	; 133
     a72:	f8 01       	movw	r30, r16
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite( (address << 1) + 1 );
	TWIwaitUntilReady();
     a74:	80 83       	st	Z, r24
     a76:	24 df       	rcall	.-440    	; 0x8c0 <TWIwaitUntilReady>
	
}
     a78:	cf 91       	pop	r28
     a7a:	1f 91       	pop	r17
     a7c:	0f 91       	pop	r16
     a7e:	08 95       	ret

00000a80 <__vector_15>:
		break;
	}
}


ISR(TIMER2_OVF_vect){
     a80:	1f 92       	push	r1
     a82:	0f 92       	push	r0
     a84:	0f b6       	in	r0, 0x3f	; 63
     a86:	0f 92       	push	r0
     a88:	11 24       	eor	r1, r1
     a8a:	0b b6       	in	r0, 0x3b	; 59
     a8c:	0f 92       	push	r0
     a8e:	2f 93       	push	r18
     a90:	3f 93       	push	r19
     a92:	4f 93       	push	r20
     a94:	5f 93       	push	r21
     a96:	6f 93       	push	r22
     a98:	7f 93       	push	r23
     a9a:	8f 93       	push	r24
     a9c:	9f 93       	push	r25
     a9e:	af 93       	push	r26
     aa0:	bf 93       	push	r27
     aa2:	ef 93       	push	r30
     aa4:	ff 93       	push	r31
	static int counter = 0;
	
	if(counter == 6){
     aa6:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <__data_end>
     aaa:	90 91 bb 02 	lds	r25, 0x02BB	; 0x8002bb <__data_end+0x1>
     aae:	86 30       	cpi	r24, 0x06	; 6
     ab0:	91 05       	cpc	r25, r1
     ab2:	11 f4       	brne	.+4      	; 0xab8 <__vector_15+0x38>
		rp6DataConstructor();
     ab4:	78 df       	rcall	.-272    	; 0x9a6 <rp6DataConstructor>
     ab6:	08 c0       	rjmp	.+16     	; 0xac8 <__vector_15+0x48>
		}else if(counter >= 12){
     ab8:	0c 97       	sbiw	r24, 0x0c	; 12
     aba:	34 f0       	brlt	.+12     	; 0xac8 <__vector_15+0x48>
		readFromSlave(RP6_ADDRESS);
     abc:	83 e0       	ldi	r24, 0x03	; 3
     abe:	c8 df       	rcall	.-112    	; 0xa50 <readFromSlave>
		counter = 0;
     ac0:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <__data_end+0x1>
     ac4:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <__data_end>
	}
	
	counter++;
     ac8:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <__data_end>
     acc:	90 91 bb 02 	lds	r25, 0x02BB	; 0x8002bb <__data_end+0x1>
     ad0:	01 96       	adiw	r24, 0x01	; 1
     ad2:	90 93 bb 02 	sts	0x02BB, r25	; 0x8002bb <__data_end+0x1>
     ad6:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <__data_end>
}
     ada:	ff 91       	pop	r31
     adc:	ef 91       	pop	r30
     ade:	bf 91       	pop	r27
     ae0:	af 91       	pop	r26
     ae2:	9f 91       	pop	r25
     ae4:	8f 91       	pop	r24
     ae6:	7f 91       	pop	r23
     ae8:	6f 91       	pop	r22
     aea:	5f 91       	pop	r21
     aec:	4f 91       	pop	r20
     aee:	3f 91       	pop	r19
     af0:	2f 91       	pop	r18
     af2:	0f 90       	pop	r0
     af4:	0b be       	out	0x3b, r0	; 59
     af6:	0f 90       	pop	r0
     af8:	0f be       	out	0x3f, r0	; 63
     afa:	0f 90       	pop	r0
     afc:	1f 90       	pop	r1
     afe:	18 95       	reti

00000b00 <writeChar>:
#include "matthijs_testFunctions.h"
#include <avr/io.h>
#include <stdlib.h>

void writeChar(char x) { //Sends char x over serial communication
	while(~UCSR0A & (1 << UDRE0)); //Wait until UDRE0 is set
     b00:	e0 ec       	ldi	r30, 0xC0	; 192
     b02:	f0 e0       	ldi	r31, 0x00	; 0
     b04:	90 81       	ld	r25, Z
     b06:	95 ff       	sbrs	r25, 5
     b08:	fd cf       	rjmp	.-6      	; 0xb04 <writeChar+0x4>
	UDR0 = x;
     b0a:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     b0e:	08 95       	ret

00000b10 <writeString>:
}

void writeString(char st[]) { //Sends char array over serial communication. Dependent on writeChar()
     b10:	0f 93       	push	r16
     b12:	1f 93       	push	r17
     b14:	cf 93       	push	r28
     b16:	fc 01       	movw	r30, r24
	for(uint8_t i = 0 ; st[i] != 0 ; i++) {
     b18:	80 81       	ld	r24, Z
     b1a:	88 23       	and	r24, r24
     b1c:	51 f0       	breq	.+20     	; 0xb32 <writeString+0x22>
     b1e:	8f 01       	movw	r16, r30
     b20:	c0 e0       	ldi	r28, 0x00	; 0
		writeChar( st[i] );
     b22:	ee df       	rcall	.-36     	; 0xb00 <writeChar>
	while(~UCSR0A & (1 << UDRE0)); //Wait until UDRE0 is set
	UDR0 = x;
}

void writeString(char st[]) { //Sends char array over serial communication. Dependent on writeChar()
	for(uint8_t i = 0 ; st[i] != 0 ; i++) {
     b24:	cf 5f       	subi	r28, 0xFF	; 255
     b26:	f8 01       	movw	r30, r16
     b28:	ec 0f       	add	r30, r28
     b2a:	f1 1d       	adc	r31, r1
     b2c:	80 81       	ld	r24, Z
     b2e:	81 11       	cpse	r24, r1
     b30:	f8 cf       	rjmp	.-16     	; 0xb22 <writeString+0x12>
		writeChar( st[i] );
	}
}
     b32:	cf 91       	pop	r28
     b34:	1f 91       	pop	r17
     b36:	0f 91       	pop	r16
     b38:	08 95       	ret

00000b3a <writeInt>:

void writeInt(int i) { //Sends integer i over serial communication. Dependent on writeString()
     b3a:	cf 93       	push	r28
     b3c:	df 93       	push	r29
     b3e:	cd b7       	in	r28, 0x3d	; 61
     b40:	de b7       	in	r29, 0x3e	; 62
     b42:	28 97       	sbiw	r28, 0x08	; 8
     b44:	0f b6       	in	r0, 0x3f	; 63
     b46:	f8 94       	cli
     b48:	de bf       	out	0x3e, r29	; 62
     b4a:	0f be       	out	0x3f, r0	; 63
     b4c:	cd bf       	out	0x3d, r28	; 61
     b4e:	4a e0       	ldi	r20, 0x0A	; 10
     b50:	be 01       	movw	r22, r28
     b52:	6f 5f       	subi	r22, 0xFF	; 255
     b54:	7f 4f       	sbci	r23, 0xFF	; 255
     b56:	5d d4       	rcall	.+2234   	; 0x1412 <__itoa_ncheck>
	char buffer[8];
	itoa(i,buffer,10); //Converts i to a string
	writeString(buffer);
     b58:	ce 01       	movw	r24, r28
     b5a:	01 96       	adiw	r24, 0x01	; 1
     b5c:	d9 df       	rcall	.-78     	; 0xb10 <writeString>
}
     b5e:	28 96       	adiw	r28, 0x08	; 8
     b60:	0f b6       	in	r0, 0x3f	; 63
     b62:	f8 94       	cli
     b64:	de bf       	out	0x3e, r29	; 62
     b66:	0f be       	out	0x3f, r0	; 63
     b68:	cd bf       	out	0x3d, r28	; 61
     b6a:	df 91       	pop	r29
     b6c:	cf 91       	pop	r28
     b6e:	08 95       	ret

00000b70 <initTimer>:
#define PORT_REGISTER PORTL
#define PIN_REGISTER PINL

void initTimer(){
	
	TCCR1B |= (1 << CS11); //prescaler 8
     b70:	e1 e8       	ldi	r30, 0x81	; 129
     b72:	f0 e0       	ldi	r31, 0x00	; 0
     b74:	80 81       	ld	r24, Z
     b76:	82 60       	ori	r24, 0x02	; 2
     b78:	80 83       	st	Z, r24
	TCNT1 = 0;
     b7a:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     b7e:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     b82:	08 95       	ret

00000b84 <ultrasonicSensor>:
}

int ultrasonicSensor() {
     b84:	cf 93       	push	r28
     b86:	df 93       	push	r29
	
	TCNT1 = 0; //Reset value of TCNT1
     b88:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     b8c:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
	unsigned long pulseStartTime = 0; //Used to record value of TCNT1 when the pulse starts
	//Values to prevent infinite loops:
	unsigned long numLoops = 0;
	unsigned long maxLoops = 40000;
	
	DDR_REGISTER |= (1 << TRIGGER); //Set TRIGGER pin as output
     b90:	aa e0       	ldi	r26, 0x0A	; 10
     b92:	b1 e0       	ldi	r27, 0x01	; 1
     b94:	8c 91       	ld	r24, X
     b96:	82 60       	ori	r24, 0x02	; 2
     b98:	8c 93       	st	X, r24
	
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low for 2 us to ensure a clean pulse
     b9a:	eb e0       	ldi	r30, 0x0B	; 11
     b9c:	f1 e0       	ldi	r31, 0x01	; 1
     b9e:	80 81       	ld	r24, Z
     ba0:	8d 7f       	andi	r24, 0xFD	; 253
     ba2:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ba4:	2a e0       	ldi	r18, 0x0A	; 10
     ba6:	2a 95       	dec	r18
     ba8:	f1 f7       	brne	.-4      	; 0xba6 <ultrasonicSensor+0x22>
     baa:	00 c0       	rjmp	.+0      	; 0xbac <ultrasonicSensor+0x28>
	_delay_us(2);
	PORT_REGISTER |= (1 << TRIGGER); //Send pulse for 5 us
     bac:	80 81       	ld	r24, Z
     bae:	82 60       	ori	r24, 0x02	; 2
     bb0:	80 83       	st	Z, r24
     bb2:	8a e1       	ldi	r24, 0x1A	; 26
     bb4:	8a 95       	dec	r24
     bb6:	f1 f7       	brne	.-4      	; 0xbb4 <ultrasonicSensor+0x30>
     bb8:	00 c0       	rjmp	.+0      	; 0xbba <ultrasonicSensor+0x36>
	_delay_us(5);
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low
     bba:	80 81       	ld	r24, Z
     bbc:	8d 7f       	andi	r24, 0xFD	; 253
     bbe:	80 83       	st	Z, r24
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input
     bc0:	8c 91       	ld	r24, X
     bc2:	8d 7f       	andi	r24, 0xFD	; 253
     bc4:	8c 93       	st	X, r24
	
	TCNT1 = 0; //Reset value of TCNT1
	
	unsigned long pulseStartTime = 0; //Used to record value of TCNT1 when the pulse starts
	//Values to prevent infinite loops:
	unsigned long numLoops = 0;
     bc6:	80 e0       	ldi	r24, 0x00	; 0
     bc8:	90 e0       	ldi	r25, 0x00	; 0
     bca:	dc 01       	movw	r26, r24
	_delay_us(5);
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input

	while (PIN_REGISTER & (1 << ECHO)) { //Wait for any old pulse to end
     bcc:	e9 e0       	ldi	r30, 0x09	; 9
     bce:	f1 e0       	ldi	r31, 0x01	; 1
     bd0:	0a c0       	rjmp	.+20     	; 0xbe6 <ultrasonicSensor+0x62>
		if(numLoops++ == maxLoops) {
     bd2:	01 96       	adiw	r24, 0x01	; 1
     bd4:	a1 1d       	adc	r26, r1
     bd6:	b1 1d       	adc	r27, r1
     bd8:	81 34       	cpi	r24, 0x41	; 65
     bda:	2c e9       	ldi	r18, 0x9C	; 156
     bdc:	92 07       	cpc	r25, r18
     bde:	a1 05       	cpc	r26, r1
     be0:	b1 05       	cpc	r27, r1
     be2:	09 f4       	brne	.+2      	; 0xbe6 <ultrasonicSensor+0x62>
     be4:	45 c0       	rjmp	.+138    	; 0xc70 <ultrasonicSensor+0xec>
	_delay_us(5);
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input

	while (PIN_REGISTER & (1 << ECHO)) { //Wait for any old pulse to end
     be6:	20 81       	ld	r18, Z
     be8:	21 fd       	sbrc	r18, 1
     bea:	f3 cf       	rjmp	.-26     	; 0xbd2 <ultrasonicSensor+0x4e>
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	
	while (~PIN_REGISTER & (1 << ECHO)) { //Wait until PING))) returns a pulse
     bec:	e9 e0       	ldi	r30, 0x09	; 9
     bee:	f1 e0       	ldi	r31, 0x01	; 1
     bf0:	0d c0       	rjmp	.+26     	; 0xc0c <ultrasonicSensor+0x88>
		if(numLoops++ == maxLoops) {
     bf2:	ac 01       	movw	r20, r24
     bf4:	bd 01       	movw	r22, r26
     bf6:	4f 5f       	subi	r20, 0xFF	; 255
     bf8:	5f 4f       	sbci	r21, 0xFF	; 255
     bfa:	6f 4f       	sbci	r22, 0xFF	; 255
     bfc:	7f 4f       	sbci	r23, 0xFF	; 255
     bfe:	80 34       	cpi	r24, 0x40	; 64
     c00:	9c 49       	sbci	r25, 0x9C	; 156
     c02:	a1 05       	cpc	r26, r1
     c04:	b1 05       	cpc	r27, r1
     c06:	b9 f1       	breq	.+110    	; 0xc76 <ultrasonicSensor+0xf2>
     c08:	db 01       	movw	r26, r22
     c0a:	ca 01       	movw	r24, r20
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	
	while (~PIN_REGISTER & (1 << ECHO)) { //Wait until PING))) returns a pulse
     c0c:	20 81       	ld	r18, Z
     c0e:	21 ff       	sbrs	r18, 1
     c10:	f0 cf       	rjmp	.-32     	; 0xbf2 <ultrasonicSensor+0x6e>
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	
	pulseStartTime = TCNT1; //Set pulseStartTime to current TCNT1 value
     c12:	c0 91 84 00 	lds	r28, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     c16:	d0 91 85 00 	lds	r29, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
	
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
     c1a:	e9 e0       	ldi	r30, 0x09	; 9
     c1c:	f1 e0       	ldi	r31, 0x01	; 1
     c1e:	0d c0       	rjmp	.+26     	; 0xc3a <ultrasonicSensor+0xb6>
		if(numLoops++ == maxLoops) {
     c20:	ac 01       	movw	r20, r24
     c22:	bd 01       	movw	r22, r26
     c24:	4f 5f       	subi	r20, 0xFF	; 255
     c26:	5f 4f       	sbci	r21, 0xFF	; 255
     c28:	6f 4f       	sbci	r22, 0xFF	; 255
     c2a:	7f 4f       	sbci	r23, 0xFF	; 255
     c2c:	80 34       	cpi	r24, 0x40	; 64
     c2e:	9c 49       	sbci	r25, 0x9C	; 156
     c30:	a1 05       	cpc	r26, r1
     c32:	b1 05       	cpc	r27, r1
     c34:	19 f1       	breq	.+70     	; 0xc7c <ultrasonicSensor+0xf8>
     c36:	db 01       	movw	r26, r22
     c38:	ca 01       	movw	r24, r20
		}
	}
	
	pulseStartTime = TCNT1; //Set pulseStartTime to current TCNT1 value
	
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
     c3a:	20 81       	ld	r18, Z
     c3c:	21 fd       	sbrc	r18, 1
     c3e:	f0 cf       	rjmp	.-32     	; 0xc20 <ultrasonicSensor+0x9c>
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	return cyclesToMm(TCNT1 - pulseStartTime); //Calculate and return distance in mm
     c40:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     c44:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
}

int cyclesToMm(unsigned long cycles) {
	
	return ((cycles * SPEED_OF_SOUND) / 20000) - CORRECTION;
     c48:	c9 01       	movw	r24, r18
     c4a:	a0 e0       	ldi	r26, 0x00	; 0
     c4c:	b0 e0       	ldi	r27, 0x00	; 0
     c4e:	9c 01       	movw	r18, r24
     c50:	ad 01       	movw	r20, r26
     c52:	2c 1b       	sub	r18, r28
     c54:	3d 0b       	sbc	r19, r29
     c56:	41 09       	sbc	r20, r1
     c58:	51 09       	sbc	r21, r1
     c5a:	a3 eb       	ldi	r26, 0xB3	; 179
     c5c:	b6 e0       	ldi	r27, 0x06	; 6
     c5e:	89 d3       	rcall	.+1810   	; 0x1372 <__muluhisi3>
     c60:	20 e2       	ldi	r18, 0x20	; 32
     c62:	3e e4       	ldi	r19, 0x4E	; 78
     c64:	40 e0       	ldi	r20, 0x00	; 0
     c66:	50 e0       	ldi	r21, 0x00	; 0
     c68:	62 d3       	rcall	.+1732   	; 0x132e <__udivmodsi4>
     c6a:	c9 01       	movw	r24, r18
     c6c:	05 97       	sbiw	r24, 0x05	; 5
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	return cyclesToMm(TCNT1 - pulseStartTime); //Calculate and return distance in mm
     c6e:	08 c0       	rjmp	.+16     	; 0xc80 <ultrasonicSensor+0xfc>
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input

	while (PIN_REGISTER & (1 << ECHO)) { //Wait for any old pulse to end
		if(numLoops++ == maxLoops) {
			return 0;
     c70:	80 e0       	ldi	r24, 0x00	; 0
     c72:	90 e0       	ldi	r25, 0x00	; 0
     c74:	05 c0       	rjmp	.+10     	; 0xc80 <ultrasonicSensor+0xfc>
		}
	}
	
	while (~PIN_REGISTER & (1 << ECHO)) { //Wait until PING))) returns a pulse
		if(numLoops++ == maxLoops) {
			return 0;
     c76:	80 e0       	ldi	r24, 0x00	; 0
     c78:	90 e0       	ldi	r25, 0x00	; 0
     c7a:	02 c0       	rjmp	.+4      	; 0xc80 <ultrasonicSensor+0xfc>
	
	pulseStartTime = TCNT1; //Set pulseStartTime to current TCNT1 value
	
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
		if(numLoops++ == maxLoops) {
			return 0;
     c7c:	80 e0       	ldi	r24, 0x00	; 0
     c7e:	90 e0       	ldi	r25, 0x00	; 0
		}
	}
	return cyclesToMm(TCNT1 - pulseStartTime); //Calculate and return distance in mm
}
     c80:	df 91       	pop	r29
     c82:	cf 91       	pop	r28
     c84:	08 95       	ret

00000c86 <__subsf3>:
     c86:	50 58       	subi	r21, 0x80	; 128

00000c88 <__addsf3>:
     c88:	bb 27       	eor	r27, r27
     c8a:	aa 27       	eor	r26, r26
     c8c:	0e d0       	rcall	.+28     	; 0xcaa <__addsf3x>
     c8e:	e5 c0       	rjmp	.+458    	; 0xe5a <__fp_round>
     c90:	d6 d0       	rcall	.+428    	; 0xe3e <__fp_pscA>
     c92:	30 f0       	brcs	.+12     	; 0xca0 <__addsf3+0x18>
     c94:	db d0       	rcall	.+438    	; 0xe4c <__fp_pscB>
     c96:	20 f0       	brcs	.+8      	; 0xca0 <__addsf3+0x18>
     c98:	31 f4       	brne	.+12     	; 0xca6 <__addsf3+0x1e>
     c9a:	9f 3f       	cpi	r25, 0xFF	; 255
     c9c:	11 f4       	brne	.+4      	; 0xca2 <__addsf3+0x1a>
     c9e:	1e f4       	brtc	.+6      	; 0xca6 <__addsf3+0x1e>
     ca0:	cb c0       	rjmp	.+406    	; 0xe38 <__fp_nan>
     ca2:	0e f4       	brtc	.+2      	; 0xca6 <__addsf3+0x1e>
     ca4:	e0 95       	com	r30
     ca6:	e7 fb       	bst	r30, 7
     ca8:	c1 c0       	rjmp	.+386    	; 0xe2c <__fp_inf>

00000caa <__addsf3x>:
     caa:	e9 2f       	mov	r30, r25
     cac:	e7 d0       	rcall	.+462    	; 0xe7c <__fp_split3>
     cae:	80 f3       	brcs	.-32     	; 0xc90 <__addsf3+0x8>
     cb0:	ba 17       	cp	r27, r26
     cb2:	62 07       	cpc	r22, r18
     cb4:	73 07       	cpc	r23, r19
     cb6:	84 07       	cpc	r24, r20
     cb8:	95 07       	cpc	r25, r21
     cba:	18 f0       	brcs	.+6      	; 0xcc2 <__addsf3x+0x18>
     cbc:	71 f4       	brne	.+28     	; 0xcda <__addsf3x+0x30>
     cbe:	9e f5       	brtc	.+102    	; 0xd26 <__addsf3x+0x7c>
     cc0:	ff c0       	rjmp	.+510    	; 0xec0 <__fp_zero>
     cc2:	0e f4       	brtc	.+2      	; 0xcc6 <__addsf3x+0x1c>
     cc4:	e0 95       	com	r30
     cc6:	0b 2e       	mov	r0, r27
     cc8:	ba 2f       	mov	r27, r26
     cca:	a0 2d       	mov	r26, r0
     ccc:	0b 01       	movw	r0, r22
     cce:	b9 01       	movw	r22, r18
     cd0:	90 01       	movw	r18, r0
     cd2:	0c 01       	movw	r0, r24
     cd4:	ca 01       	movw	r24, r20
     cd6:	a0 01       	movw	r20, r0
     cd8:	11 24       	eor	r1, r1
     cda:	ff 27       	eor	r31, r31
     cdc:	59 1b       	sub	r21, r25
     cde:	99 f0       	breq	.+38     	; 0xd06 <__addsf3x+0x5c>
     ce0:	59 3f       	cpi	r21, 0xF9	; 249
     ce2:	50 f4       	brcc	.+20     	; 0xcf8 <__addsf3x+0x4e>
     ce4:	50 3e       	cpi	r21, 0xE0	; 224
     ce6:	68 f1       	brcs	.+90     	; 0xd42 <__addsf3x+0x98>
     ce8:	1a 16       	cp	r1, r26
     cea:	f0 40       	sbci	r31, 0x00	; 0
     cec:	a2 2f       	mov	r26, r18
     cee:	23 2f       	mov	r18, r19
     cf0:	34 2f       	mov	r19, r20
     cf2:	44 27       	eor	r20, r20
     cf4:	58 5f       	subi	r21, 0xF8	; 248
     cf6:	f3 cf       	rjmp	.-26     	; 0xcde <__addsf3x+0x34>
     cf8:	46 95       	lsr	r20
     cfa:	37 95       	ror	r19
     cfc:	27 95       	ror	r18
     cfe:	a7 95       	ror	r26
     d00:	f0 40       	sbci	r31, 0x00	; 0
     d02:	53 95       	inc	r21
     d04:	c9 f7       	brne	.-14     	; 0xcf8 <__addsf3x+0x4e>
     d06:	7e f4       	brtc	.+30     	; 0xd26 <__addsf3x+0x7c>
     d08:	1f 16       	cp	r1, r31
     d0a:	ba 0b       	sbc	r27, r26
     d0c:	62 0b       	sbc	r22, r18
     d0e:	73 0b       	sbc	r23, r19
     d10:	84 0b       	sbc	r24, r20
     d12:	ba f0       	brmi	.+46     	; 0xd42 <__addsf3x+0x98>
     d14:	91 50       	subi	r25, 0x01	; 1
     d16:	a1 f0       	breq	.+40     	; 0xd40 <__addsf3x+0x96>
     d18:	ff 0f       	add	r31, r31
     d1a:	bb 1f       	adc	r27, r27
     d1c:	66 1f       	adc	r22, r22
     d1e:	77 1f       	adc	r23, r23
     d20:	88 1f       	adc	r24, r24
     d22:	c2 f7       	brpl	.-16     	; 0xd14 <__addsf3x+0x6a>
     d24:	0e c0       	rjmp	.+28     	; 0xd42 <__addsf3x+0x98>
     d26:	ba 0f       	add	r27, r26
     d28:	62 1f       	adc	r22, r18
     d2a:	73 1f       	adc	r23, r19
     d2c:	84 1f       	adc	r24, r20
     d2e:	48 f4       	brcc	.+18     	; 0xd42 <__addsf3x+0x98>
     d30:	87 95       	ror	r24
     d32:	77 95       	ror	r23
     d34:	67 95       	ror	r22
     d36:	b7 95       	ror	r27
     d38:	f7 95       	ror	r31
     d3a:	9e 3f       	cpi	r25, 0xFE	; 254
     d3c:	08 f0       	brcs	.+2      	; 0xd40 <__addsf3x+0x96>
     d3e:	b3 cf       	rjmp	.-154    	; 0xca6 <__addsf3+0x1e>
     d40:	93 95       	inc	r25
     d42:	88 0f       	add	r24, r24
     d44:	08 f0       	brcs	.+2      	; 0xd48 <__addsf3x+0x9e>
     d46:	99 27       	eor	r25, r25
     d48:	ee 0f       	add	r30, r30
     d4a:	97 95       	ror	r25
     d4c:	87 95       	ror	r24
     d4e:	08 95       	ret

00000d50 <__fixsfsi>:
     d50:	04 d0       	rcall	.+8      	; 0xd5a <__fixunssfsi>
     d52:	68 94       	set
     d54:	b1 11       	cpse	r27, r1
     d56:	b5 c0       	rjmp	.+362    	; 0xec2 <__fp_szero>
     d58:	08 95       	ret

00000d5a <__fixunssfsi>:
     d5a:	98 d0       	rcall	.+304    	; 0xe8c <__fp_splitA>
     d5c:	88 f0       	brcs	.+34     	; 0xd80 <__fixunssfsi+0x26>
     d5e:	9f 57       	subi	r25, 0x7F	; 127
     d60:	90 f0       	brcs	.+36     	; 0xd86 <__fixunssfsi+0x2c>
     d62:	b9 2f       	mov	r27, r25
     d64:	99 27       	eor	r25, r25
     d66:	b7 51       	subi	r27, 0x17	; 23
     d68:	a0 f0       	brcs	.+40     	; 0xd92 <__fixunssfsi+0x38>
     d6a:	d1 f0       	breq	.+52     	; 0xda0 <__fixunssfsi+0x46>
     d6c:	66 0f       	add	r22, r22
     d6e:	77 1f       	adc	r23, r23
     d70:	88 1f       	adc	r24, r24
     d72:	99 1f       	adc	r25, r25
     d74:	1a f0       	brmi	.+6      	; 0xd7c <__fixunssfsi+0x22>
     d76:	ba 95       	dec	r27
     d78:	c9 f7       	brne	.-14     	; 0xd6c <__fixunssfsi+0x12>
     d7a:	12 c0       	rjmp	.+36     	; 0xda0 <__fixunssfsi+0x46>
     d7c:	b1 30       	cpi	r27, 0x01	; 1
     d7e:	81 f0       	breq	.+32     	; 0xda0 <__fixunssfsi+0x46>
     d80:	9f d0       	rcall	.+318    	; 0xec0 <__fp_zero>
     d82:	b1 e0       	ldi	r27, 0x01	; 1
     d84:	08 95       	ret
     d86:	9c c0       	rjmp	.+312    	; 0xec0 <__fp_zero>
     d88:	67 2f       	mov	r22, r23
     d8a:	78 2f       	mov	r23, r24
     d8c:	88 27       	eor	r24, r24
     d8e:	b8 5f       	subi	r27, 0xF8	; 248
     d90:	39 f0       	breq	.+14     	; 0xda0 <__fixunssfsi+0x46>
     d92:	b9 3f       	cpi	r27, 0xF9	; 249
     d94:	cc f3       	brlt	.-14     	; 0xd88 <__fixunssfsi+0x2e>
     d96:	86 95       	lsr	r24
     d98:	77 95       	ror	r23
     d9a:	67 95       	ror	r22
     d9c:	b3 95       	inc	r27
     d9e:	d9 f7       	brne	.-10     	; 0xd96 <__fixunssfsi+0x3c>
     da0:	3e f4       	brtc	.+14     	; 0xdb0 <__fixunssfsi+0x56>
     da2:	90 95       	com	r25
     da4:	80 95       	com	r24
     da6:	70 95       	com	r23
     da8:	61 95       	neg	r22
     daa:	7f 4f       	sbci	r23, 0xFF	; 255
     dac:	8f 4f       	sbci	r24, 0xFF	; 255
     dae:	9f 4f       	sbci	r25, 0xFF	; 255
     db0:	08 95       	ret

00000db2 <__floatunsisf>:
     db2:	e8 94       	clt
     db4:	09 c0       	rjmp	.+18     	; 0xdc8 <__floatsisf+0x12>

00000db6 <__floatsisf>:
     db6:	97 fb       	bst	r25, 7
     db8:	3e f4       	brtc	.+14     	; 0xdc8 <__floatsisf+0x12>
     dba:	90 95       	com	r25
     dbc:	80 95       	com	r24
     dbe:	70 95       	com	r23
     dc0:	61 95       	neg	r22
     dc2:	7f 4f       	sbci	r23, 0xFF	; 255
     dc4:	8f 4f       	sbci	r24, 0xFF	; 255
     dc6:	9f 4f       	sbci	r25, 0xFF	; 255
     dc8:	99 23       	and	r25, r25
     dca:	a9 f0       	breq	.+42     	; 0xdf6 <__floatsisf+0x40>
     dcc:	f9 2f       	mov	r31, r25
     dce:	96 e9       	ldi	r25, 0x96	; 150
     dd0:	bb 27       	eor	r27, r27
     dd2:	93 95       	inc	r25
     dd4:	f6 95       	lsr	r31
     dd6:	87 95       	ror	r24
     dd8:	77 95       	ror	r23
     dda:	67 95       	ror	r22
     ddc:	b7 95       	ror	r27
     dde:	f1 11       	cpse	r31, r1
     de0:	f8 cf       	rjmp	.-16     	; 0xdd2 <__floatsisf+0x1c>
     de2:	fa f4       	brpl	.+62     	; 0xe22 <__floatsisf+0x6c>
     de4:	bb 0f       	add	r27, r27
     de6:	11 f4       	brne	.+4      	; 0xdec <__floatsisf+0x36>
     de8:	60 ff       	sbrs	r22, 0
     dea:	1b c0       	rjmp	.+54     	; 0xe22 <__floatsisf+0x6c>
     dec:	6f 5f       	subi	r22, 0xFF	; 255
     dee:	7f 4f       	sbci	r23, 0xFF	; 255
     df0:	8f 4f       	sbci	r24, 0xFF	; 255
     df2:	9f 4f       	sbci	r25, 0xFF	; 255
     df4:	16 c0       	rjmp	.+44     	; 0xe22 <__floatsisf+0x6c>
     df6:	88 23       	and	r24, r24
     df8:	11 f0       	breq	.+4      	; 0xdfe <__floatsisf+0x48>
     dfa:	96 e9       	ldi	r25, 0x96	; 150
     dfc:	11 c0       	rjmp	.+34     	; 0xe20 <__floatsisf+0x6a>
     dfe:	77 23       	and	r23, r23
     e00:	21 f0       	breq	.+8      	; 0xe0a <__floatsisf+0x54>
     e02:	9e e8       	ldi	r25, 0x8E	; 142
     e04:	87 2f       	mov	r24, r23
     e06:	76 2f       	mov	r23, r22
     e08:	05 c0       	rjmp	.+10     	; 0xe14 <__floatsisf+0x5e>
     e0a:	66 23       	and	r22, r22
     e0c:	71 f0       	breq	.+28     	; 0xe2a <__floatsisf+0x74>
     e0e:	96 e8       	ldi	r25, 0x86	; 134
     e10:	86 2f       	mov	r24, r22
     e12:	70 e0       	ldi	r23, 0x00	; 0
     e14:	60 e0       	ldi	r22, 0x00	; 0
     e16:	2a f0       	brmi	.+10     	; 0xe22 <__floatsisf+0x6c>
     e18:	9a 95       	dec	r25
     e1a:	66 0f       	add	r22, r22
     e1c:	77 1f       	adc	r23, r23
     e1e:	88 1f       	adc	r24, r24
     e20:	da f7       	brpl	.-10     	; 0xe18 <__floatsisf+0x62>
     e22:	88 0f       	add	r24, r24
     e24:	96 95       	lsr	r25
     e26:	87 95       	ror	r24
     e28:	97 f9       	bld	r25, 7
     e2a:	08 95       	ret

00000e2c <__fp_inf>:
     e2c:	97 f9       	bld	r25, 7
     e2e:	9f 67       	ori	r25, 0x7F	; 127
     e30:	80 e8       	ldi	r24, 0x80	; 128
     e32:	70 e0       	ldi	r23, 0x00	; 0
     e34:	60 e0       	ldi	r22, 0x00	; 0
     e36:	08 95       	ret

00000e38 <__fp_nan>:
     e38:	9f ef       	ldi	r25, 0xFF	; 255
     e3a:	80 ec       	ldi	r24, 0xC0	; 192
     e3c:	08 95       	ret

00000e3e <__fp_pscA>:
     e3e:	00 24       	eor	r0, r0
     e40:	0a 94       	dec	r0
     e42:	16 16       	cp	r1, r22
     e44:	17 06       	cpc	r1, r23
     e46:	18 06       	cpc	r1, r24
     e48:	09 06       	cpc	r0, r25
     e4a:	08 95       	ret

00000e4c <__fp_pscB>:
     e4c:	00 24       	eor	r0, r0
     e4e:	0a 94       	dec	r0
     e50:	12 16       	cp	r1, r18
     e52:	13 06       	cpc	r1, r19
     e54:	14 06       	cpc	r1, r20
     e56:	05 06       	cpc	r0, r21
     e58:	08 95       	ret

00000e5a <__fp_round>:
     e5a:	09 2e       	mov	r0, r25
     e5c:	03 94       	inc	r0
     e5e:	00 0c       	add	r0, r0
     e60:	11 f4       	brne	.+4      	; 0xe66 <__fp_round+0xc>
     e62:	88 23       	and	r24, r24
     e64:	52 f0       	brmi	.+20     	; 0xe7a <__fp_round+0x20>
     e66:	bb 0f       	add	r27, r27
     e68:	40 f4       	brcc	.+16     	; 0xe7a <__fp_round+0x20>
     e6a:	bf 2b       	or	r27, r31
     e6c:	11 f4       	brne	.+4      	; 0xe72 <__fp_round+0x18>
     e6e:	60 ff       	sbrs	r22, 0
     e70:	04 c0       	rjmp	.+8      	; 0xe7a <__fp_round+0x20>
     e72:	6f 5f       	subi	r22, 0xFF	; 255
     e74:	7f 4f       	sbci	r23, 0xFF	; 255
     e76:	8f 4f       	sbci	r24, 0xFF	; 255
     e78:	9f 4f       	sbci	r25, 0xFF	; 255
     e7a:	08 95       	ret

00000e7c <__fp_split3>:
     e7c:	57 fd       	sbrc	r21, 7
     e7e:	90 58       	subi	r25, 0x80	; 128
     e80:	44 0f       	add	r20, r20
     e82:	55 1f       	adc	r21, r21
     e84:	59 f0       	breq	.+22     	; 0xe9c <__fp_splitA+0x10>
     e86:	5f 3f       	cpi	r21, 0xFF	; 255
     e88:	71 f0       	breq	.+28     	; 0xea6 <__fp_splitA+0x1a>
     e8a:	47 95       	ror	r20

00000e8c <__fp_splitA>:
     e8c:	88 0f       	add	r24, r24
     e8e:	97 fb       	bst	r25, 7
     e90:	99 1f       	adc	r25, r25
     e92:	61 f0       	breq	.+24     	; 0xeac <__fp_splitA+0x20>
     e94:	9f 3f       	cpi	r25, 0xFF	; 255
     e96:	79 f0       	breq	.+30     	; 0xeb6 <__fp_splitA+0x2a>
     e98:	87 95       	ror	r24
     e9a:	08 95       	ret
     e9c:	12 16       	cp	r1, r18
     e9e:	13 06       	cpc	r1, r19
     ea0:	14 06       	cpc	r1, r20
     ea2:	55 1f       	adc	r21, r21
     ea4:	f2 cf       	rjmp	.-28     	; 0xe8a <__fp_split3+0xe>
     ea6:	46 95       	lsr	r20
     ea8:	f1 df       	rcall	.-30     	; 0xe8c <__fp_splitA>
     eaa:	08 c0       	rjmp	.+16     	; 0xebc <__fp_splitA+0x30>
     eac:	16 16       	cp	r1, r22
     eae:	17 06       	cpc	r1, r23
     eb0:	18 06       	cpc	r1, r24
     eb2:	99 1f       	adc	r25, r25
     eb4:	f1 cf       	rjmp	.-30     	; 0xe98 <__fp_splitA+0xc>
     eb6:	86 95       	lsr	r24
     eb8:	71 05       	cpc	r23, r1
     eba:	61 05       	cpc	r22, r1
     ebc:	08 94       	sec
     ebe:	08 95       	ret

00000ec0 <__fp_zero>:
     ec0:	e8 94       	clt

00000ec2 <__fp_szero>:
     ec2:	bb 27       	eor	r27, r27
     ec4:	66 27       	eor	r22, r22
     ec6:	77 27       	eor	r23, r23
     ec8:	cb 01       	movw	r24, r22
     eca:	97 f9       	bld	r25, 7
     ecc:	08 95       	ret

00000ece <pow>:
     ece:	fa 01       	movw	r30, r20
     ed0:	ee 0f       	add	r30, r30
     ed2:	ff 1f       	adc	r31, r31
     ed4:	30 96       	adiw	r30, 0x00	; 0
     ed6:	21 05       	cpc	r18, r1
     ed8:	31 05       	cpc	r19, r1
     eda:	99 f1       	breq	.+102    	; 0xf42 <pow+0x74>
     edc:	61 15       	cp	r22, r1
     ede:	71 05       	cpc	r23, r1
     ee0:	61 f4       	brne	.+24     	; 0xefa <pow+0x2c>
     ee2:	80 38       	cpi	r24, 0x80	; 128
     ee4:	bf e3       	ldi	r27, 0x3F	; 63
     ee6:	9b 07       	cpc	r25, r27
     ee8:	49 f1       	breq	.+82     	; 0xf3c <pow+0x6e>
     eea:	68 94       	set
     eec:	90 38       	cpi	r25, 0x80	; 128
     eee:	81 05       	cpc	r24, r1
     ef0:	61 f0       	breq	.+24     	; 0xf0a <pow+0x3c>
     ef2:	80 38       	cpi	r24, 0x80	; 128
     ef4:	bf ef       	ldi	r27, 0xFF	; 255
     ef6:	9b 07       	cpc	r25, r27
     ef8:	41 f0       	breq	.+16     	; 0xf0a <pow+0x3c>
     efa:	99 23       	and	r25, r25
     efc:	42 f5       	brpl	.+80     	; 0xf4e <pow+0x80>
     efe:	ff 3f       	cpi	r31, 0xFF	; 255
     f00:	e1 05       	cpc	r30, r1
     f02:	31 05       	cpc	r19, r1
     f04:	21 05       	cpc	r18, r1
     f06:	11 f1       	breq	.+68     	; 0xf4c <pow+0x7e>
     f08:	e8 94       	clt
     f0a:	08 94       	sec
     f0c:	e7 95       	ror	r30
     f0e:	d9 01       	movw	r26, r18
     f10:	aa 23       	and	r26, r26
     f12:	29 f4       	brne	.+10     	; 0xf1e <pow+0x50>
     f14:	ab 2f       	mov	r26, r27
     f16:	be 2f       	mov	r27, r30
     f18:	f8 5f       	subi	r31, 0xF8	; 248
     f1a:	d0 f3       	brcs	.-12     	; 0xf10 <pow+0x42>
     f1c:	10 c0       	rjmp	.+32     	; 0xf3e <pow+0x70>
     f1e:	ff 5f       	subi	r31, 0xFF	; 255
     f20:	70 f4       	brcc	.+28     	; 0xf3e <pow+0x70>
     f22:	a6 95       	lsr	r26
     f24:	e0 f7       	brcc	.-8      	; 0xf1e <pow+0x50>
     f26:	f7 39       	cpi	r31, 0x97	; 151
     f28:	50 f0       	brcs	.+20     	; 0xf3e <pow+0x70>
     f2a:	19 f0       	breq	.+6      	; 0xf32 <pow+0x64>
     f2c:	ff 3a       	cpi	r31, 0xAF	; 175
     f2e:	38 f4       	brcc	.+14     	; 0xf3e <pow+0x70>
     f30:	9f 77       	andi	r25, 0x7F	; 127
     f32:	9f 93       	push	r25
     f34:	0c d0       	rcall	.+24     	; 0xf4e <pow+0x80>
     f36:	0f 90       	pop	r0
     f38:	07 fc       	sbrc	r0, 7
     f3a:	90 58       	subi	r25, 0x80	; 128
     f3c:	08 95       	ret
     f3e:	3e f0       	brts	.+14     	; 0xf4e <pow+0x80>
     f40:	7b cf       	rjmp	.-266    	; 0xe38 <__fp_nan>
     f42:	60 e0       	ldi	r22, 0x00	; 0
     f44:	70 e0       	ldi	r23, 0x00	; 0
     f46:	80 e8       	ldi	r24, 0x80	; 128
     f48:	9f e3       	ldi	r25, 0x3F	; 63
     f4a:	08 95       	ret
     f4c:	4f e7       	ldi	r20, 0x7F	; 127
     f4e:	9f 77       	andi	r25, 0x7F	; 127
     f50:	5f 93       	push	r21
     f52:	4f 93       	push	r20
     f54:	3f 93       	push	r19
     f56:	2f 93       	push	r18
     f58:	9e d0       	rcall	.+316    	; 0x1096 <log>
     f5a:	2f 91       	pop	r18
     f5c:	3f 91       	pop	r19
     f5e:	4f 91       	pop	r20
     f60:	5f 91       	pop	r21
     f62:	0c d1       	rcall	.+536    	; 0x117c <__mulsf3>
     f64:	05 c0       	rjmp	.+10     	; 0xf70 <exp>
     f66:	19 f4       	brne	.+6      	; 0xf6e <pow+0xa0>
     f68:	0e f0       	brts	.+2      	; 0xf6c <pow+0x9e>
     f6a:	60 cf       	rjmp	.-320    	; 0xe2c <__fp_inf>
     f6c:	a9 cf       	rjmp	.-174    	; 0xec0 <__fp_zero>
     f6e:	64 cf       	rjmp	.-312    	; 0xe38 <__fp_nan>

00000f70 <exp>:
     f70:	8d df       	rcall	.-230    	; 0xe8c <__fp_splitA>
     f72:	c8 f3       	brcs	.-14     	; 0xf66 <pow+0x98>
     f74:	96 38       	cpi	r25, 0x86	; 134
     f76:	c0 f7       	brcc	.-16     	; 0xf68 <pow+0x9a>
     f78:	07 f8       	bld	r0, 7
     f7a:	0f 92       	push	r0
     f7c:	e8 94       	clt
     f7e:	2b e3       	ldi	r18, 0x3B	; 59
     f80:	3a ea       	ldi	r19, 0xAA	; 170
     f82:	48 eb       	ldi	r20, 0xB8	; 184
     f84:	5f e7       	ldi	r21, 0x7F	; 127
     f86:	08 d1       	rcall	.+528    	; 0x1198 <__mulsf3_pse>
     f88:	0f 92       	push	r0
     f8a:	0f 92       	push	r0
     f8c:	0f 92       	push	r0
     f8e:	4d b7       	in	r20, 0x3d	; 61
     f90:	5e b7       	in	r21, 0x3e	; 62
     f92:	0f 92       	push	r0
     f94:	c0 d0       	rcall	.+384    	; 0x1116 <modf>
     f96:	e4 ee       	ldi	r30, 0xE4	; 228
     f98:	f0 e0       	ldi	r31, 0x00	; 0
     f9a:	16 d0       	rcall	.+44     	; 0xfc8 <__fp_powser>
     f9c:	4f 91       	pop	r20
     f9e:	5f 91       	pop	r21
     fa0:	ef 91       	pop	r30
     fa2:	ff 91       	pop	r31
     fa4:	e5 95       	asr	r30
     fa6:	ee 1f       	adc	r30, r30
     fa8:	ff 1f       	adc	r31, r31
     faa:	49 f0       	breq	.+18     	; 0xfbe <exp+0x4e>
     fac:	fe 57       	subi	r31, 0x7E	; 126
     fae:	e0 68       	ori	r30, 0x80	; 128
     fb0:	44 27       	eor	r20, r20
     fb2:	ee 0f       	add	r30, r30
     fb4:	44 1f       	adc	r20, r20
     fb6:	fa 95       	dec	r31
     fb8:	e1 f7       	brne	.-8      	; 0xfb2 <exp+0x42>
     fba:	41 95       	neg	r20
     fbc:	55 0b       	sbc	r21, r21
     fbe:	32 d0       	rcall	.+100    	; 0x1024 <ldexp>
     fc0:	0f 90       	pop	r0
     fc2:	07 fe       	sbrs	r0, 7
     fc4:	26 c0       	rjmp	.+76     	; 0x1012 <inverse>
     fc6:	08 95       	ret

00000fc8 <__fp_powser>:
     fc8:	df 93       	push	r29
     fca:	cf 93       	push	r28
     fcc:	1f 93       	push	r17
     fce:	0f 93       	push	r16
     fd0:	ff 92       	push	r15
     fd2:	ef 92       	push	r14
     fd4:	df 92       	push	r13
     fd6:	7b 01       	movw	r14, r22
     fd8:	8c 01       	movw	r16, r24
     fda:	68 94       	set
     fdc:	05 c0       	rjmp	.+10     	; 0xfe8 <__fp_powser+0x20>
     fde:	da 2e       	mov	r13, r26
     fe0:	ef 01       	movw	r28, r30
     fe2:	d8 d0       	rcall	.+432    	; 0x1194 <__mulsf3x>
     fe4:	fe 01       	movw	r30, r28
     fe6:	e8 94       	clt
     fe8:	a5 91       	lpm	r26, Z+
     fea:	25 91       	lpm	r18, Z+
     fec:	35 91       	lpm	r19, Z+
     fee:	45 91       	lpm	r20, Z+
     ff0:	55 91       	lpm	r21, Z+
     ff2:	ae f3       	brts	.-22     	; 0xfde <__fp_powser+0x16>
     ff4:	ef 01       	movw	r28, r30
     ff6:	59 de       	rcall	.-846    	; 0xcaa <__addsf3x>
     ff8:	fe 01       	movw	r30, r28
     ffa:	97 01       	movw	r18, r14
     ffc:	a8 01       	movw	r20, r16
     ffe:	da 94       	dec	r13
    1000:	79 f7       	brne	.-34     	; 0xfe0 <__fp_powser+0x18>
    1002:	df 90       	pop	r13
    1004:	ef 90       	pop	r14
    1006:	ff 90       	pop	r15
    1008:	0f 91       	pop	r16
    100a:	1f 91       	pop	r17
    100c:	cf 91       	pop	r28
    100e:	df 91       	pop	r29
    1010:	08 95       	ret

00001012 <inverse>:
    1012:	9b 01       	movw	r18, r22
    1014:	ac 01       	movw	r20, r24
    1016:	60 e0       	ldi	r22, 0x00	; 0
    1018:	70 e0       	ldi	r23, 0x00	; 0
    101a:	80 e8       	ldi	r24, 0x80	; 128
    101c:	9f e3       	ldi	r25, 0x3F	; 63
    101e:	11 c1       	rjmp	.+546    	; 0x1242 <__divsf3>
    1020:	05 cf       	rjmp	.-502    	; 0xe2c <__fp_inf>
    1022:	77 c1       	rjmp	.+750    	; 0x1312 <__fp_mpack>

00001024 <ldexp>:
    1024:	33 df       	rcall	.-410    	; 0xe8c <__fp_splitA>
    1026:	e8 f3       	brcs	.-6      	; 0x1022 <inverse+0x10>
    1028:	99 23       	and	r25, r25
    102a:	d9 f3       	breq	.-10     	; 0x1022 <inverse+0x10>
    102c:	94 0f       	add	r25, r20
    102e:	51 1d       	adc	r21, r1
    1030:	bb f3       	brvs	.-18     	; 0x1020 <inverse+0xe>
    1032:	91 50       	subi	r25, 0x01	; 1
    1034:	50 40       	sbci	r21, 0x00	; 0
    1036:	94 f0       	brlt	.+36     	; 0x105c <ldexp+0x38>
    1038:	59 f0       	breq	.+22     	; 0x1050 <ldexp+0x2c>
    103a:	88 23       	and	r24, r24
    103c:	32 f0       	brmi	.+12     	; 0x104a <ldexp+0x26>
    103e:	66 0f       	add	r22, r22
    1040:	77 1f       	adc	r23, r23
    1042:	88 1f       	adc	r24, r24
    1044:	91 50       	subi	r25, 0x01	; 1
    1046:	50 40       	sbci	r21, 0x00	; 0
    1048:	c1 f7       	brne	.-16     	; 0x103a <ldexp+0x16>
    104a:	9e 3f       	cpi	r25, 0xFE	; 254
    104c:	51 05       	cpc	r21, r1
    104e:	44 f7       	brge	.-48     	; 0x1020 <inverse+0xe>
    1050:	88 0f       	add	r24, r24
    1052:	91 1d       	adc	r25, r1
    1054:	96 95       	lsr	r25
    1056:	87 95       	ror	r24
    1058:	97 f9       	bld	r25, 7
    105a:	08 95       	ret
    105c:	5f 3f       	cpi	r21, 0xFF	; 255
    105e:	ac f0       	brlt	.+42     	; 0x108a <ldexp+0x66>
    1060:	98 3e       	cpi	r25, 0xE8	; 232
    1062:	9c f0       	brlt	.+38     	; 0x108a <ldexp+0x66>
    1064:	bb 27       	eor	r27, r27
    1066:	86 95       	lsr	r24
    1068:	77 95       	ror	r23
    106a:	67 95       	ror	r22
    106c:	b7 95       	ror	r27
    106e:	08 f4       	brcc	.+2      	; 0x1072 <ldexp+0x4e>
    1070:	b1 60       	ori	r27, 0x01	; 1
    1072:	93 95       	inc	r25
    1074:	c1 f7       	brne	.-16     	; 0x1066 <ldexp+0x42>
    1076:	bb 0f       	add	r27, r27
    1078:	58 f7       	brcc	.-42     	; 0x1050 <ldexp+0x2c>
    107a:	11 f4       	brne	.+4      	; 0x1080 <ldexp+0x5c>
    107c:	60 ff       	sbrs	r22, 0
    107e:	e8 cf       	rjmp	.-48     	; 0x1050 <ldexp+0x2c>
    1080:	6f 5f       	subi	r22, 0xFF	; 255
    1082:	7f 4f       	sbci	r23, 0xFF	; 255
    1084:	8f 4f       	sbci	r24, 0xFF	; 255
    1086:	9f 4f       	sbci	r25, 0xFF	; 255
    1088:	e3 cf       	rjmp	.-58     	; 0x1050 <ldexp+0x2c>
    108a:	1b cf       	rjmp	.-458    	; 0xec2 <__fp_szero>
    108c:	0e f0       	brts	.+2      	; 0x1090 <ldexp+0x6c>
    108e:	41 c1       	rjmp	.+642    	; 0x1312 <__fp_mpack>
    1090:	d3 ce       	rjmp	.-602    	; 0xe38 <__fp_nan>
    1092:	68 94       	set
    1094:	cb ce       	rjmp	.-618    	; 0xe2c <__fp_inf>

00001096 <log>:
    1096:	fa de       	rcall	.-524    	; 0xe8c <__fp_splitA>
    1098:	c8 f3       	brcs	.-14     	; 0x108c <ldexp+0x68>
    109a:	99 23       	and	r25, r25
    109c:	d1 f3       	breq	.-12     	; 0x1092 <ldexp+0x6e>
    109e:	c6 f3       	brts	.-16     	; 0x1090 <ldexp+0x6c>
    10a0:	df 93       	push	r29
    10a2:	cf 93       	push	r28
    10a4:	1f 93       	push	r17
    10a6:	0f 93       	push	r16
    10a8:	ff 92       	push	r15
    10aa:	c9 2f       	mov	r28, r25
    10ac:	dd 27       	eor	r29, r29
    10ae:	88 23       	and	r24, r24
    10b0:	2a f0       	brmi	.+10     	; 0x10bc <log+0x26>
    10b2:	21 97       	sbiw	r28, 0x01	; 1
    10b4:	66 0f       	add	r22, r22
    10b6:	77 1f       	adc	r23, r23
    10b8:	88 1f       	adc	r24, r24
    10ba:	da f7       	brpl	.-10     	; 0x10b2 <log+0x1c>
    10bc:	20 e0       	ldi	r18, 0x00	; 0
    10be:	30 e0       	ldi	r19, 0x00	; 0
    10c0:	40 e8       	ldi	r20, 0x80	; 128
    10c2:	5f eb       	ldi	r21, 0xBF	; 191
    10c4:	9f e3       	ldi	r25, 0x3F	; 63
    10c6:	88 39       	cpi	r24, 0x98	; 152
    10c8:	20 f0       	brcs	.+8      	; 0x10d2 <log+0x3c>
    10ca:	80 3e       	cpi	r24, 0xE0	; 224
    10cc:	30 f0       	brcs	.+12     	; 0x10da <log+0x44>
    10ce:	21 96       	adiw	r28, 0x01	; 1
    10d0:	8f 77       	andi	r24, 0x7F	; 127
    10d2:	da dd       	rcall	.-1100   	; 0xc88 <__addsf3>
    10d4:	ec e0       	ldi	r30, 0x0C	; 12
    10d6:	f1 e0       	ldi	r31, 0x01	; 1
    10d8:	03 c0       	rjmp	.+6      	; 0x10e0 <log+0x4a>
    10da:	d6 dd       	rcall	.-1108   	; 0xc88 <__addsf3>
    10dc:	e9 e3       	ldi	r30, 0x39	; 57
    10de:	f1 e0       	ldi	r31, 0x01	; 1
    10e0:	73 df       	rcall	.-282    	; 0xfc8 <__fp_powser>
    10e2:	8b 01       	movw	r16, r22
    10e4:	be 01       	movw	r22, r28
    10e6:	ec 01       	movw	r28, r24
    10e8:	fb 2e       	mov	r15, r27
    10ea:	6f 57       	subi	r22, 0x7F	; 127
    10ec:	71 09       	sbc	r23, r1
    10ee:	75 95       	asr	r23
    10f0:	77 1f       	adc	r23, r23
    10f2:	88 0b       	sbc	r24, r24
    10f4:	99 0b       	sbc	r25, r25
    10f6:	5f de       	rcall	.-834    	; 0xdb6 <__floatsisf>
    10f8:	28 e1       	ldi	r18, 0x18	; 24
    10fa:	32 e7       	ldi	r19, 0x72	; 114
    10fc:	41 e3       	ldi	r20, 0x31	; 49
    10fe:	5f e3       	ldi	r21, 0x3F	; 63
    1100:	49 d0       	rcall	.+146    	; 0x1194 <__mulsf3x>
    1102:	af 2d       	mov	r26, r15
    1104:	98 01       	movw	r18, r16
    1106:	ae 01       	movw	r20, r28
    1108:	ff 90       	pop	r15
    110a:	0f 91       	pop	r16
    110c:	1f 91       	pop	r17
    110e:	cf 91       	pop	r28
    1110:	df 91       	pop	r29
    1112:	cb dd       	rcall	.-1130   	; 0xcaa <__addsf3x>
    1114:	a2 ce       	rjmp	.-700    	; 0xe5a <__fp_round>

00001116 <modf>:
    1116:	fa 01       	movw	r30, r20
    1118:	dc 01       	movw	r26, r24
    111a:	aa 0f       	add	r26, r26
    111c:	bb 1f       	adc	r27, r27
    111e:	9b 01       	movw	r18, r22
    1120:	ac 01       	movw	r20, r24
    1122:	bf 57       	subi	r27, 0x7F	; 127
    1124:	28 f4       	brcc	.+10     	; 0x1130 <modf+0x1a>
    1126:	22 27       	eor	r18, r18
    1128:	33 27       	eor	r19, r19
    112a:	44 27       	eor	r20, r20
    112c:	50 78       	andi	r21, 0x80	; 128
    112e:	1f c0       	rjmp	.+62     	; 0x116e <modf+0x58>
    1130:	b7 51       	subi	r27, 0x17	; 23
    1132:	88 f4       	brcc	.+34     	; 0x1156 <modf+0x40>
    1134:	ab 2f       	mov	r26, r27
    1136:	00 24       	eor	r0, r0
    1138:	46 95       	lsr	r20
    113a:	37 95       	ror	r19
    113c:	27 95       	ror	r18
    113e:	01 1c       	adc	r0, r1
    1140:	a3 95       	inc	r26
    1142:	d2 f3       	brmi	.-12     	; 0x1138 <modf+0x22>
    1144:	00 20       	and	r0, r0
    1146:	69 f0       	breq	.+26     	; 0x1162 <modf+0x4c>
    1148:	22 0f       	add	r18, r18
    114a:	33 1f       	adc	r19, r19
    114c:	44 1f       	adc	r20, r20
    114e:	b3 95       	inc	r27
    1150:	da f3       	brmi	.-10     	; 0x1148 <modf+0x32>
    1152:	0d d0       	rcall	.+26     	; 0x116e <modf+0x58>
    1154:	98 cd       	rjmp	.-1232   	; 0xc86 <__subsf3>
    1156:	61 30       	cpi	r22, 0x01	; 1
    1158:	71 05       	cpc	r23, r1
    115a:	a0 e8       	ldi	r26, 0x80	; 128
    115c:	8a 07       	cpc	r24, r26
    115e:	b9 46       	sbci	r27, 0x69	; 105
    1160:	30 f4       	brcc	.+12     	; 0x116e <modf+0x58>
    1162:	9b 01       	movw	r18, r22
    1164:	ac 01       	movw	r20, r24
    1166:	66 27       	eor	r22, r22
    1168:	77 27       	eor	r23, r23
    116a:	88 27       	eor	r24, r24
    116c:	90 78       	andi	r25, 0x80	; 128
    116e:	30 96       	adiw	r30, 0x00	; 0
    1170:	21 f0       	breq	.+8      	; 0x117a <modf+0x64>
    1172:	20 83       	st	Z, r18
    1174:	31 83       	std	Z+1, r19	; 0x01
    1176:	42 83       	std	Z+2, r20	; 0x02
    1178:	53 83       	std	Z+3, r21	; 0x03
    117a:	08 95       	ret

0000117c <__mulsf3>:
    117c:	0b d0       	rcall	.+22     	; 0x1194 <__mulsf3x>
    117e:	6d ce       	rjmp	.-806    	; 0xe5a <__fp_round>
    1180:	5e de       	rcall	.-836    	; 0xe3e <__fp_pscA>
    1182:	28 f0       	brcs	.+10     	; 0x118e <__mulsf3+0x12>
    1184:	63 de       	rcall	.-826    	; 0xe4c <__fp_pscB>
    1186:	18 f0       	brcs	.+6      	; 0x118e <__mulsf3+0x12>
    1188:	95 23       	and	r25, r21
    118a:	09 f0       	breq	.+2      	; 0x118e <__mulsf3+0x12>
    118c:	4f ce       	rjmp	.-866    	; 0xe2c <__fp_inf>
    118e:	54 ce       	rjmp	.-856    	; 0xe38 <__fp_nan>
    1190:	11 24       	eor	r1, r1
    1192:	97 ce       	rjmp	.-722    	; 0xec2 <__fp_szero>

00001194 <__mulsf3x>:
    1194:	73 de       	rcall	.-794    	; 0xe7c <__fp_split3>
    1196:	a0 f3       	brcs	.-24     	; 0x1180 <__mulsf3+0x4>

00001198 <__mulsf3_pse>:
    1198:	95 9f       	mul	r25, r21
    119a:	d1 f3       	breq	.-12     	; 0x1190 <__mulsf3+0x14>
    119c:	95 0f       	add	r25, r21
    119e:	50 e0       	ldi	r21, 0x00	; 0
    11a0:	55 1f       	adc	r21, r21
    11a2:	62 9f       	mul	r22, r18
    11a4:	f0 01       	movw	r30, r0
    11a6:	72 9f       	mul	r23, r18
    11a8:	bb 27       	eor	r27, r27
    11aa:	f0 0d       	add	r31, r0
    11ac:	b1 1d       	adc	r27, r1
    11ae:	63 9f       	mul	r22, r19
    11b0:	aa 27       	eor	r26, r26
    11b2:	f0 0d       	add	r31, r0
    11b4:	b1 1d       	adc	r27, r1
    11b6:	aa 1f       	adc	r26, r26
    11b8:	64 9f       	mul	r22, r20
    11ba:	66 27       	eor	r22, r22
    11bc:	b0 0d       	add	r27, r0
    11be:	a1 1d       	adc	r26, r1
    11c0:	66 1f       	adc	r22, r22
    11c2:	82 9f       	mul	r24, r18
    11c4:	22 27       	eor	r18, r18
    11c6:	b0 0d       	add	r27, r0
    11c8:	a1 1d       	adc	r26, r1
    11ca:	62 1f       	adc	r22, r18
    11cc:	73 9f       	mul	r23, r19
    11ce:	b0 0d       	add	r27, r0
    11d0:	a1 1d       	adc	r26, r1
    11d2:	62 1f       	adc	r22, r18
    11d4:	83 9f       	mul	r24, r19
    11d6:	a0 0d       	add	r26, r0
    11d8:	61 1d       	adc	r22, r1
    11da:	22 1f       	adc	r18, r18
    11dc:	74 9f       	mul	r23, r20
    11de:	33 27       	eor	r19, r19
    11e0:	a0 0d       	add	r26, r0
    11e2:	61 1d       	adc	r22, r1
    11e4:	23 1f       	adc	r18, r19
    11e6:	84 9f       	mul	r24, r20
    11e8:	60 0d       	add	r22, r0
    11ea:	21 1d       	adc	r18, r1
    11ec:	82 2f       	mov	r24, r18
    11ee:	76 2f       	mov	r23, r22
    11f0:	6a 2f       	mov	r22, r26
    11f2:	11 24       	eor	r1, r1
    11f4:	9f 57       	subi	r25, 0x7F	; 127
    11f6:	50 40       	sbci	r21, 0x00	; 0
    11f8:	8a f0       	brmi	.+34     	; 0x121c <__mulsf3_pse+0x84>
    11fa:	e1 f0       	breq	.+56     	; 0x1234 <__mulsf3_pse+0x9c>
    11fc:	88 23       	and	r24, r24
    11fe:	4a f0       	brmi	.+18     	; 0x1212 <__mulsf3_pse+0x7a>
    1200:	ee 0f       	add	r30, r30
    1202:	ff 1f       	adc	r31, r31
    1204:	bb 1f       	adc	r27, r27
    1206:	66 1f       	adc	r22, r22
    1208:	77 1f       	adc	r23, r23
    120a:	88 1f       	adc	r24, r24
    120c:	91 50       	subi	r25, 0x01	; 1
    120e:	50 40       	sbci	r21, 0x00	; 0
    1210:	a9 f7       	brne	.-22     	; 0x11fc <__mulsf3_pse+0x64>
    1212:	9e 3f       	cpi	r25, 0xFE	; 254
    1214:	51 05       	cpc	r21, r1
    1216:	70 f0       	brcs	.+28     	; 0x1234 <__mulsf3_pse+0x9c>
    1218:	09 ce       	rjmp	.-1006   	; 0xe2c <__fp_inf>
    121a:	53 ce       	rjmp	.-858    	; 0xec2 <__fp_szero>
    121c:	5f 3f       	cpi	r21, 0xFF	; 255
    121e:	ec f3       	brlt	.-6      	; 0x121a <__mulsf3_pse+0x82>
    1220:	98 3e       	cpi	r25, 0xE8	; 232
    1222:	dc f3       	brlt	.-10     	; 0x121a <__mulsf3_pse+0x82>
    1224:	86 95       	lsr	r24
    1226:	77 95       	ror	r23
    1228:	67 95       	ror	r22
    122a:	b7 95       	ror	r27
    122c:	f7 95       	ror	r31
    122e:	e7 95       	ror	r30
    1230:	9f 5f       	subi	r25, 0xFF	; 255
    1232:	c1 f7       	brne	.-16     	; 0x1224 <__mulsf3_pse+0x8c>
    1234:	fe 2b       	or	r31, r30
    1236:	88 0f       	add	r24, r24
    1238:	91 1d       	adc	r25, r1
    123a:	96 95       	lsr	r25
    123c:	87 95       	ror	r24
    123e:	97 f9       	bld	r25, 7
    1240:	08 95       	ret

00001242 <__divsf3>:
    1242:	0c d0       	rcall	.+24     	; 0x125c <__divsf3x>
    1244:	0a ce       	rjmp	.-1004   	; 0xe5a <__fp_round>
    1246:	02 de       	rcall	.-1020   	; 0xe4c <__fp_pscB>
    1248:	40 f0       	brcs	.+16     	; 0x125a <__divsf3+0x18>
    124a:	f9 dd       	rcall	.-1038   	; 0xe3e <__fp_pscA>
    124c:	30 f0       	brcs	.+12     	; 0x125a <__divsf3+0x18>
    124e:	21 f4       	brne	.+8      	; 0x1258 <__divsf3+0x16>
    1250:	5f 3f       	cpi	r21, 0xFF	; 255
    1252:	19 f0       	breq	.+6      	; 0x125a <__divsf3+0x18>
    1254:	eb cd       	rjmp	.-1066   	; 0xe2c <__fp_inf>
    1256:	51 11       	cpse	r21, r1
    1258:	34 ce       	rjmp	.-920    	; 0xec2 <__fp_szero>
    125a:	ee cd       	rjmp	.-1060   	; 0xe38 <__fp_nan>

0000125c <__divsf3x>:
    125c:	0f de       	rcall	.-994    	; 0xe7c <__fp_split3>
    125e:	98 f3       	brcs	.-26     	; 0x1246 <__divsf3+0x4>

00001260 <__divsf3_pse>:
    1260:	99 23       	and	r25, r25
    1262:	c9 f3       	breq	.-14     	; 0x1256 <__divsf3+0x14>
    1264:	55 23       	and	r21, r21
    1266:	b1 f3       	breq	.-20     	; 0x1254 <__divsf3+0x12>
    1268:	95 1b       	sub	r25, r21
    126a:	55 0b       	sbc	r21, r21
    126c:	bb 27       	eor	r27, r27
    126e:	aa 27       	eor	r26, r26
    1270:	62 17       	cp	r22, r18
    1272:	73 07       	cpc	r23, r19
    1274:	84 07       	cpc	r24, r20
    1276:	38 f0       	brcs	.+14     	; 0x1286 <__divsf3_pse+0x26>
    1278:	9f 5f       	subi	r25, 0xFF	; 255
    127a:	5f 4f       	sbci	r21, 0xFF	; 255
    127c:	22 0f       	add	r18, r18
    127e:	33 1f       	adc	r19, r19
    1280:	44 1f       	adc	r20, r20
    1282:	aa 1f       	adc	r26, r26
    1284:	a9 f3       	breq	.-22     	; 0x1270 <__divsf3_pse+0x10>
    1286:	33 d0       	rcall	.+102    	; 0x12ee <__divsf3_pse+0x8e>
    1288:	0e 2e       	mov	r0, r30
    128a:	3a f0       	brmi	.+14     	; 0x129a <__divsf3_pse+0x3a>
    128c:	e0 e8       	ldi	r30, 0x80	; 128
    128e:	30 d0       	rcall	.+96     	; 0x12f0 <__divsf3_pse+0x90>
    1290:	91 50       	subi	r25, 0x01	; 1
    1292:	50 40       	sbci	r21, 0x00	; 0
    1294:	e6 95       	lsr	r30
    1296:	00 1c       	adc	r0, r0
    1298:	ca f7       	brpl	.-14     	; 0x128c <__divsf3_pse+0x2c>
    129a:	29 d0       	rcall	.+82     	; 0x12ee <__divsf3_pse+0x8e>
    129c:	fe 2f       	mov	r31, r30
    129e:	27 d0       	rcall	.+78     	; 0x12ee <__divsf3_pse+0x8e>
    12a0:	66 0f       	add	r22, r22
    12a2:	77 1f       	adc	r23, r23
    12a4:	88 1f       	adc	r24, r24
    12a6:	bb 1f       	adc	r27, r27
    12a8:	26 17       	cp	r18, r22
    12aa:	37 07       	cpc	r19, r23
    12ac:	48 07       	cpc	r20, r24
    12ae:	ab 07       	cpc	r26, r27
    12b0:	b0 e8       	ldi	r27, 0x80	; 128
    12b2:	09 f0       	breq	.+2      	; 0x12b6 <__divsf3_pse+0x56>
    12b4:	bb 0b       	sbc	r27, r27
    12b6:	80 2d       	mov	r24, r0
    12b8:	bf 01       	movw	r22, r30
    12ba:	ff 27       	eor	r31, r31
    12bc:	93 58       	subi	r25, 0x83	; 131
    12be:	5f 4f       	sbci	r21, 0xFF	; 255
    12c0:	2a f0       	brmi	.+10     	; 0x12cc <__divsf3_pse+0x6c>
    12c2:	9e 3f       	cpi	r25, 0xFE	; 254
    12c4:	51 05       	cpc	r21, r1
    12c6:	68 f0       	brcs	.+26     	; 0x12e2 <__divsf3_pse+0x82>
    12c8:	b1 cd       	rjmp	.-1182   	; 0xe2c <__fp_inf>
    12ca:	fb cd       	rjmp	.-1034   	; 0xec2 <__fp_szero>
    12cc:	5f 3f       	cpi	r21, 0xFF	; 255
    12ce:	ec f3       	brlt	.-6      	; 0x12ca <__divsf3_pse+0x6a>
    12d0:	98 3e       	cpi	r25, 0xE8	; 232
    12d2:	dc f3       	brlt	.-10     	; 0x12ca <__divsf3_pse+0x6a>
    12d4:	86 95       	lsr	r24
    12d6:	77 95       	ror	r23
    12d8:	67 95       	ror	r22
    12da:	b7 95       	ror	r27
    12dc:	f7 95       	ror	r31
    12de:	9f 5f       	subi	r25, 0xFF	; 255
    12e0:	c9 f7       	brne	.-14     	; 0x12d4 <__divsf3_pse+0x74>
    12e2:	88 0f       	add	r24, r24
    12e4:	91 1d       	adc	r25, r1
    12e6:	96 95       	lsr	r25
    12e8:	87 95       	ror	r24
    12ea:	97 f9       	bld	r25, 7
    12ec:	08 95       	ret
    12ee:	e1 e0       	ldi	r30, 0x01	; 1
    12f0:	66 0f       	add	r22, r22
    12f2:	77 1f       	adc	r23, r23
    12f4:	88 1f       	adc	r24, r24
    12f6:	bb 1f       	adc	r27, r27
    12f8:	62 17       	cp	r22, r18
    12fa:	73 07       	cpc	r23, r19
    12fc:	84 07       	cpc	r24, r20
    12fe:	ba 07       	cpc	r27, r26
    1300:	20 f0       	brcs	.+8      	; 0x130a <__divsf3_pse+0xaa>
    1302:	62 1b       	sub	r22, r18
    1304:	73 0b       	sbc	r23, r19
    1306:	84 0b       	sbc	r24, r20
    1308:	ba 0b       	sbc	r27, r26
    130a:	ee 1f       	adc	r30, r30
    130c:	88 f7       	brcc	.-30     	; 0x12f0 <__divsf3_pse+0x90>
    130e:	e0 95       	com	r30
    1310:	08 95       	ret

00001312 <__fp_mpack>:
    1312:	9f 3f       	cpi	r25, 0xFF	; 255
    1314:	31 f0       	breq	.+12     	; 0x1322 <__fp_mpack_finite+0xc>

00001316 <__fp_mpack_finite>:
    1316:	91 50       	subi	r25, 0x01	; 1
    1318:	20 f4       	brcc	.+8      	; 0x1322 <__fp_mpack_finite+0xc>
    131a:	87 95       	ror	r24
    131c:	77 95       	ror	r23
    131e:	67 95       	ror	r22
    1320:	b7 95       	ror	r27
    1322:	88 0f       	add	r24, r24
    1324:	91 1d       	adc	r25, r1
    1326:	96 95       	lsr	r25
    1328:	87 95       	ror	r24
    132a:	97 f9       	bld	r25, 7
    132c:	08 95       	ret

0000132e <__udivmodsi4>:
    132e:	a1 e2       	ldi	r26, 0x21	; 33
    1330:	1a 2e       	mov	r1, r26
    1332:	aa 1b       	sub	r26, r26
    1334:	bb 1b       	sub	r27, r27
    1336:	fd 01       	movw	r30, r26
    1338:	0d c0       	rjmp	.+26     	; 0x1354 <__udivmodsi4_ep>

0000133a <__udivmodsi4_loop>:
    133a:	aa 1f       	adc	r26, r26
    133c:	bb 1f       	adc	r27, r27
    133e:	ee 1f       	adc	r30, r30
    1340:	ff 1f       	adc	r31, r31
    1342:	a2 17       	cp	r26, r18
    1344:	b3 07       	cpc	r27, r19
    1346:	e4 07       	cpc	r30, r20
    1348:	f5 07       	cpc	r31, r21
    134a:	20 f0       	brcs	.+8      	; 0x1354 <__udivmodsi4_ep>
    134c:	a2 1b       	sub	r26, r18
    134e:	b3 0b       	sbc	r27, r19
    1350:	e4 0b       	sbc	r30, r20
    1352:	f5 0b       	sbc	r31, r21

00001354 <__udivmodsi4_ep>:
    1354:	66 1f       	adc	r22, r22
    1356:	77 1f       	adc	r23, r23
    1358:	88 1f       	adc	r24, r24
    135a:	99 1f       	adc	r25, r25
    135c:	1a 94       	dec	r1
    135e:	69 f7       	brne	.-38     	; 0x133a <__udivmodsi4_loop>
    1360:	60 95       	com	r22
    1362:	70 95       	com	r23
    1364:	80 95       	com	r24
    1366:	90 95       	com	r25
    1368:	9b 01       	movw	r18, r22
    136a:	ac 01       	movw	r20, r24
    136c:	bd 01       	movw	r22, r26
    136e:	cf 01       	movw	r24, r30
    1370:	08 95       	ret

00001372 <__muluhisi3>:
    1372:	40 d0       	rcall	.+128    	; 0x13f4 <__umulhisi3>
    1374:	a5 9f       	mul	r26, r21
    1376:	90 0d       	add	r25, r0
    1378:	b4 9f       	mul	r27, r20
    137a:	90 0d       	add	r25, r0
    137c:	a4 9f       	mul	r26, r20
    137e:	80 0d       	add	r24, r0
    1380:	91 1d       	adc	r25, r1
    1382:	11 24       	eor	r1, r1
    1384:	08 95       	ret

00001386 <__ashldi3>:
    1386:	0f 93       	push	r16
    1388:	08 30       	cpi	r16, 0x08	; 8
    138a:	90 f0       	brcs	.+36     	; 0x13b0 <__ashldi3+0x2a>
    138c:	98 2f       	mov	r25, r24
    138e:	87 2f       	mov	r24, r23
    1390:	76 2f       	mov	r23, r22
    1392:	65 2f       	mov	r22, r21
    1394:	54 2f       	mov	r21, r20
    1396:	43 2f       	mov	r20, r19
    1398:	32 2f       	mov	r19, r18
    139a:	22 27       	eor	r18, r18
    139c:	08 50       	subi	r16, 0x08	; 8
    139e:	f4 cf       	rjmp	.-24     	; 0x1388 <__ashldi3+0x2>
    13a0:	22 0f       	add	r18, r18
    13a2:	33 1f       	adc	r19, r19
    13a4:	44 1f       	adc	r20, r20
    13a6:	55 1f       	adc	r21, r21
    13a8:	66 1f       	adc	r22, r22
    13aa:	77 1f       	adc	r23, r23
    13ac:	88 1f       	adc	r24, r24
    13ae:	99 1f       	adc	r25, r25
    13b0:	0a 95       	dec	r16
    13b2:	b2 f7       	brpl	.-20     	; 0x13a0 <__ashldi3+0x1a>
    13b4:	0f 91       	pop	r16
    13b6:	08 95       	ret

000013b8 <__adddi3>:
    13b8:	2a 0d       	add	r18, r10
    13ba:	3b 1d       	adc	r19, r11
    13bc:	4c 1d       	adc	r20, r12
    13be:	5d 1d       	adc	r21, r13
    13c0:	6e 1d       	adc	r22, r14
    13c2:	7f 1d       	adc	r23, r15
    13c4:	80 1f       	adc	r24, r16
    13c6:	91 1f       	adc	r25, r17
    13c8:	08 95       	ret

000013ca <__adddi3_s8>:
    13ca:	00 24       	eor	r0, r0
    13cc:	a7 fd       	sbrc	r26, 7
    13ce:	00 94       	com	r0
    13d0:	2a 0f       	add	r18, r26
    13d2:	30 1d       	adc	r19, r0
    13d4:	40 1d       	adc	r20, r0
    13d6:	50 1d       	adc	r21, r0
    13d8:	60 1d       	adc	r22, r0
    13da:	70 1d       	adc	r23, r0
    13dc:	80 1d       	adc	r24, r0
    13de:	90 1d       	adc	r25, r0
    13e0:	08 95       	ret

000013e2 <__cmpdi2>:
    13e2:	2a 15       	cp	r18, r10
    13e4:	3b 05       	cpc	r19, r11
    13e6:	4c 05       	cpc	r20, r12
    13e8:	5d 05       	cpc	r21, r13
    13ea:	6e 05       	cpc	r22, r14
    13ec:	7f 05       	cpc	r23, r15
    13ee:	80 07       	cpc	r24, r16
    13f0:	91 07       	cpc	r25, r17
    13f2:	08 95       	ret

000013f4 <__umulhisi3>:
    13f4:	a2 9f       	mul	r26, r18
    13f6:	b0 01       	movw	r22, r0
    13f8:	b3 9f       	mul	r27, r19
    13fa:	c0 01       	movw	r24, r0
    13fc:	a3 9f       	mul	r26, r19
    13fe:	70 0d       	add	r23, r0
    1400:	81 1d       	adc	r24, r1
    1402:	11 24       	eor	r1, r1
    1404:	91 1d       	adc	r25, r1
    1406:	b2 9f       	mul	r27, r18
    1408:	70 0d       	add	r23, r0
    140a:	81 1d       	adc	r24, r1
    140c:	11 24       	eor	r1, r1
    140e:	91 1d       	adc	r25, r1
    1410:	08 95       	ret

00001412 <__itoa_ncheck>:
    1412:	bb 27       	eor	r27, r27
    1414:	4a 30       	cpi	r20, 0x0A	; 10
    1416:	31 f4       	brne	.+12     	; 0x1424 <__itoa_ncheck+0x12>
    1418:	99 23       	and	r25, r25
    141a:	22 f4       	brpl	.+8      	; 0x1424 <__itoa_ncheck+0x12>
    141c:	bd e2       	ldi	r27, 0x2D	; 45
    141e:	90 95       	com	r25
    1420:	81 95       	neg	r24
    1422:	9f 4f       	sbci	r25, 0xFF	; 255
    1424:	01 c0       	rjmp	.+2      	; 0x1428 <__utoa_common>

00001426 <__utoa_ncheck>:
    1426:	bb 27       	eor	r27, r27

00001428 <__utoa_common>:
    1428:	fb 01       	movw	r30, r22
    142a:	55 27       	eor	r21, r21
    142c:	aa 27       	eor	r26, r26
    142e:	88 0f       	add	r24, r24
    1430:	99 1f       	adc	r25, r25
    1432:	aa 1f       	adc	r26, r26
    1434:	a4 17       	cp	r26, r20
    1436:	10 f0       	brcs	.+4      	; 0x143c <__utoa_common+0x14>
    1438:	a4 1b       	sub	r26, r20
    143a:	83 95       	inc	r24
    143c:	50 51       	subi	r21, 0x10	; 16
    143e:	b9 f7       	brne	.-18     	; 0x142e <__utoa_common+0x6>
    1440:	a0 5d       	subi	r26, 0xD0	; 208
    1442:	aa 33       	cpi	r26, 0x3A	; 58
    1444:	08 f0       	brcs	.+2      	; 0x1448 <__utoa_common+0x20>
    1446:	a9 5d       	subi	r26, 0xD9	; 217
    1448:	a1 93       	st	Z+, r26
    144a:	00 97       	sbiw	r24, 0x00	; 0
    144c:	79 f7       	brne	.-34     	; 0x142c <__utoa_common+0x4>
    144e:	b1 11       	cpse	r27, r1
    1450:	b1 93       	st	Z+, r27
    1452:	11 92       	st	Z+, r1
    1454:	cb 01       	movw	r24, r22
    1456:	00 c0       	rjmp	.+0      	; 0x1458 <strrev>

00001458 <strrev>:
    1458:	dc 01       	movw	r26, r24
    145a:	fc 01       	movw	r30, r24
    145c:	67 2f       	mov	r22, r23
    145e:	71 91       	ld	r23, Z+
    1460:	77 23       	and	r23, r23
    1462:	e1 f7       	brne	.-8      	; 0x145c <strrev+0x4>
    1464:	32 97       	sbiw	r30, 0x02	; 2
    1466:	04 c0       	rjmp	.+8      	; 0x1470 <strrev+0x18>
    1468:	7c 91       	ld	r23, X
    146a:	6d 93       	st	X+, r22
    146c:	70 83       	st	Z, r23
    146e:	62 91       	ld	r22, -Z
    1470:	ae 17       	cp	r26, r30
    1472:	bf 07       	cpc	r27, r31
    1474:	c8 f3       	brcs	.-14     	; 0x1468 <strrev+0x10>
    1476:	08 95       	ret

00001478 <_exit>:
    1478:	f8 94       	cli

0000147a <__stop_program>:
    147a:	ff cf       	rjmp	.-2      	; 0x147a <__stop_program>
