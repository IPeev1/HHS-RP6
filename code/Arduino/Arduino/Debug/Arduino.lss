
Arduino.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         000000ba  00800200  00001540  000015d4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001540  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000155  008002ba  008002ba  0000168e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000168e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000016c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000150  00000000  00000000  00001700  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001d24  00000000  00000000  00001850  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000011b4  00000000  00000000  00003574  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000d71  00000000  00000000  00004728  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000004c8  00000000  00000000  0000549c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000a59  00000000  00000000  00005964  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000f19  00000000  00000000  000063bd  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000150  00000000  00000000  000072d6  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	b2 c0       	rjmp	.+356    	; 0x166 <__ctors_end>
       2:	00 00       	nop
       4:	d0 c0       	rjmp	.+416    	; 0x1a6 <__bad_interrupt>
       6:	00 00       	nop
       8:	ce c0       	rjmp	.+412    	; 0x1a6 <__bad_interrupt>
       a:	00 00       	nop
       c:	cc c0       	rjmp	.+408    	; 0x1a6 <__bad_interrupt>
       e:	00 00       	nop
      10:	ca c0       	rjmp	.+404    	; 0x1a6 <__bad_interrupt>
      12:	00 00       	nop
      14:	c8 c0       	rjmp	.+400    	; 0x1a6 <__bad_interrupt>
      16:	00 00       	nop
      18:	c6 c0       	rjmp	.+396    	; 0x1a6 <__bad_interrupt>
      1a:	00 00       	nop
      1c:	c4 c0       	rjmp	.+392    	; 0x1a6 <__bad_interrupt>
      1e:	00 00       	nop
      20:	c2 c0       	rjmp	.+388    	; 0x1a6 <__bad_interrupt>
      22:	00 00       	nop
      24:	c0 c0       	rjmp	.+384    	; 0x1a6 <__bad_interrupt>
      26:	00 00       	nop
      28:	be c0       	rjmp	.+380    	; 0x1a6 <__bad_interrupt>
      2a:	00 00       	nop
      2c:	bc c0       	rjmp	.+376    	; 0x1a6 <__bad_interrupt>
      2e:	00 00       	nop
      30:	ba c0       	rjmp	.+372    	; 0x1a6 <__bad_interrupt>
      32:	00 00       	nop
      34:	b8 c0       	rjmp	.+368    	; 0x1a6 <__bad_interrupt>
      36:	00 00       	nop
      38:	b6 c0       	rjmp	.+364    	; 0x1a6 <__bad_interrupt>
      3a:	00 00       	nop
      3c:	50 c5       	rjmp	.+2720   	; 0xade <__vector_15>
      3e:	00 00       	nop
      40:	b2 c0       	rjmp	.+356    	; 0x1a6 <__bad_interrupt>
      42:	00 00       	nop
      44:	b0 c0       	rjmp	.+352    	; 0x1a6 <__bad_interrupt>
      46:	00 00       	nop
      48:	ae c0       	rjmp	.+348    	; 0x1a6 <__bad_interrupt>
      4a:	00 00       	nop
      4c:	ac c0       	rjmp	.+344    	; 0x1a6 <__bad_interrupt>
      4e:	00 00       	nop
      50:	aa c0       	rjmp	.+340    	; 0x1a6 <__bad_interrupt>
      52:	00 00       	nop
      54:	a8 c0       	rjmp	.+336    	; 0x1a6 <__bad_interrupt>
      56:	00 00       	nop
      58:	a6 c0       	rjmp	.+332    	; 0x1a6 <__bad_interrupt>
      5a:	00 00       	nop
      5c:	a4 c0       	rjmp	.+328    	; 0x1a6 <__bad_interrupt>
      5e:	00 00       	nop
      60:	a2 c0       	rjmp	.+324    	; 0x1a6 <__bad_interrupt>
      62:	00 00       	nop
      64:	b6 c0       	rjmp	.+364    	; 0x1d2 <__vector_25>
      66:	00 00       	nop
      68:	9e c0       	rjmp	.+316    	; 0x1a6 <__bad_interrupt>
      6a:	00 00       	nop
      6c:	9c c0       	rjmp	.+312    	; 0x1a6 <__bad_interrupt>
      6e:	00 00       	nop
      70:	9a c0       	rjmp	.+308    	; 0x1a6 <__bad_interrupt>
      72:	00 00       	nop
      74:	98 c0       	rjmp	.+304    	; 0x1a6 <__bad_interrupt>
      76:	00 00       	nop
      78:	96 c0       	rjmp	.+300    	; 0x1a6 <__bad_interrupt>
      7a:	00 00       	nop
      7c:	94 c0       	rjmp	.+296    	; 0x1a6 <__bad_interrupt>
      7e:	00 00       	nop
      80:	92 c0       	rjmp	.+292    	; 0x1a6 <__bad_interrupt>
      82:	00 00       	nop
      84:	90 c0       	rjmp	.+288    	; 0x1a6 <__bad_interrupt>
      86:	00 00       	nop
      88:	8e c0       	rjmp	.+284    	; 0x1a6 <__bad_interrupt>
      8a:	00 00       	nop
      8c:	c7 c1       	rjmp	.+910    	; 0x41c <__vector_35>
      8e:	00 00       	nop
      90:	8a c0       	rjmp	.+276    	; 0x1a6 <__bad_interrupt>
      92:	00 00       	nop
      94:	88 c0       	rjmp	.+272    	; 0x1a6 <__bad_interrupt>
      96:	00 00       	nop
      98:	86 c0       	rjmp	.+268    	; 0x1a6 <__bad_interrupt>
      9a:	00 00       	nop
      9c:	b9 c3       	rjmp	.+1906   	; 0x810 <__vector_39>
      9e:	00 00       	nop
      a0:	82 c0       	rjmp	.+260    	; 0x1a6 <__bad_interrupt>
      a2:	00 00       	nop
      a4:	80 c0       	rjmp	.+256    	; 0x1a6 <__bad_interrupt>
      a6:	00 00       	nop
      a8:	7e c0       	rjmp	.+252    	; 0x1a6 <__bad_interrupt>
      aa:	00 00       	nop
      ac:	7c c0       	rjmp	.+248    	; 0x1a6 <__bad_interrupt>
      ae:	00 00       	nop
      b0:	7a c0       	rjmp	.+244    	; 0x1a6 <__bad_interrupt>
      b2:	00 00       	nop
      b4:	78 c0       	rjmp	.+240    	; 0x1a6 <__bad_interrupt>
      b6:	00 00       	nop
      b8:	76 c0       	rjmp	.+236    	; 0x1a6 <__bad_interrupt>
      ba:	00 00       	nop
      bc:	74 c0       	rjmp	.+232    	; 0x1a6 <__bad_interrupt>
      be:	00 00       	nop
      c0:	72 c0       	rjmp	.+228    	; 0x1a6 <__bad_interrupt>
      c2:	00 00       	nop
      c4:	70 c0       	rjmp	.+224    	; 0x1a6 <__bad_interrupt>
      c6:	00 00       	nop
      c8:	6e c0       	rjmp	.+220    	; 0x1a6 <__bad_interrupt>
      ca:	00 00       	nop
      cc:	6c c0       	rjmp	.+216    	; 0x1a6 <__bad_interrupt>
      ce:	00 00       	nop
      d0:	6a c0       	rjmp	.+212    	; 0x1a6 <__bad_interrupt>
      d2:	00 00       	nop
      d4:	68 c0       	rjmp	.+208    	; 0x1a6 <__bad_interrupt>
      d6:	00 00       	nop
      d8:	66 c0       	rjmp	.+204    	; 0x1a6 <__bad_interrupt>
      da:	00 00       	nop
      dc:	64 c0       	rjmp	.+200    	; 0x1a6 <__bad_interrupt>
      de:	00 00       	nop
      e0:	62 c0       	rjmp	.+196    	; 0x1a6 <__bad_interrupt>
      e2:	00 00       	nop
      e4:	07 63       	ori	r16, 0x37	; 55
      e6:	42 36       	cpi	r20, 0x62	; 98
      e8:	b7 9b       	sbis	0x16, 7	; 22
      ea:	d8 a7       	std	Y+40, r29	; 0x28
      ec:	1a 39       	cpi	r17, 0x9A	; 154
      ee:	68 56       	subi	r22, 0x68	; 104
      f0:	18 ae       	std	Y+56, r1	; 0x38
      f2:	ba ab       	std	Y+50, r27	; 0x32
      f4:	55 8c       	ldd	r5, Z+29	; 0x1d
      f6:	1d 3c       	cpi	r17, 0xCD	; 205
      f8:	b7 cc       	rjmp	.-1682   	; 0xfffffa68 <__eeprom_end+0xff7efa68>
      fa:	57 63       	ori	r21, 0x37	; 55
      fc:	bd 6d       	ori	r27, 0xDD	; 221
      fe:	ed fd       	.word	0xfded	; ????
     100:	75 3e       	cpi	r23, 0xE5	; 229
     102:	f6 17       	cp	r31, r22
     104:	72 31       	cpi	r23, 0x12	; 18
     106:	bf 00       	.word	0x00bf	; ????
     108:	00 00       	nop
     10a:	80 3f       	cpi	r24, 0xF0	; 240
     10c:	08 00       	.word	0x0008	; ????
     10e:	00 00       	nop
     110:	be 92       	st	-X, r11
     112:	24 49       	sbci	r18, 0x94	; 148
     114:	12 3e       	cpi	r17, 0xE2	; 226
     116:	ab aa       	std	Y+51, r10	; 0x33
     118:	aa 2a       	or	r10, r26
     11a:	be cd       	rjmp	.-1156   	; 0xfffffc98 <__eeprom_end+0xff7efc98>
     11c:	cc cc       	rjmp	.-1640   	; 0xfffffab6 <__eeprom_end+0xff7efab6>
     11e:	4c 3e       	cpi	r20, 0xEC	; 236
     120:	00 00       	nop
     122:	00 80       	ld	r0, Z
     124:	be ab       	std	Y+54, r27	; 0x36
     126:	aa aa       	std	Y+50, r10	; 0x32
     128:	aa 3e       	cpi	r26, 0xEA	; 234
     12a:	00 00       	nop
     12c:	00 00       	nop
     12e:	bf 00       	.word	0x00bf	; ????
     130:	00 00       	nop
     132:	80 3f       	cpi	r24, 0xF0	; 240
     134:	00 00       	nop
     136:	00 00       	nop
     138:	00 08       	sbc	r0, r0
     13a:	41 78       	andi	r20, 0x81	; 129
     13c:	d3 bb       	out	0x13, r29	; 19
     13e:	43 87       	std	Z+11, r20	; 0x0b
     140:	d1 13       	cpse	r29, r17
     142:	3d 19       	sub	r19, r13
     144:	0e 3c       	cpi	r16, 0xCE	; 206
     146:	c3 bd       	out	0x23, r28	; 35
     148:	42 82       	std	Z+2, r4	; 0x02
     14a:	ad 2b       	or	r26, r29
     14c:	3e 68       	ori	r19, 0x8E	; 142
     14e:	ec 82       	std	Y+4, r14	; 0x04
     150:	76 be       	out	0x36, r7	; 54
     152:	d9 8f       	std	Y+25, r29	; 0x19
     154:	e1 a9       	ldd	r30, Z+49	; 0x31
     156:	3e 4c       	sbci	r19, 0xCE	; 206
     158:	80 ef       	ldi	r24, 0xF0	; 240
     15a:	ff be       	out	0x3f, r15	; 63
     15c:	01 c4       	rjmp	.+2050   	; 0x960 <writeToSlave+0x2a>
     15e:	ff 7f       	andi	r31, 0xFF	; 255
     160:	3f 00       	.word	0x003f	; ????
     162:	00 00       	nop
	...

00000166 <__ctors_end>:
     166:	11 24       	eor	r1, r1
     168:	1f be       	out	0x3f, r1	; 63
     16a:	cf ef       	ldi	r28, 0xFF	; 255
     16c:	d1 e2       	ldi	r29, 0x21	; 33
     16e:	de bf       	out	0x3e, r29	; 62
     170:	cd bf       	out	0x3d, r28	; 61
     172:	00 e0       	ldi	r16, 0x00	; 0
     174:	0c bf       	out	0x3c, r16	; 60

00000176 <__do_copy_data>:
     176:	12 e0       	ldi	r17, 0x02	; 2
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b2 e0       	ldi	r27, 0x02	; 2
     17c:	e0 e4       	ldi	r30, 0x40	; 64
     17e:	f5 e1       	ldi	r31, 0x15	; 21
     180:	00 e0       	ldi	r16, 0x00	; 0
     182:	0b bf       	out	0x3b, r16	; 59
     184:	02 c0       	rjmp	.+4      	; 0x18a <__do_copy_data+0x14>
     186:	07 90       	elpm	r0, Z+
     188:	0d 92       	st	X+, r0
     18a:	aa 3b       	cpi	r26, 0xBA	; 186
     18c:	b1 07       	cpc	r27, r17
     18e:	d9 f7       	brne	.-10     	; 0x186 <__do_copy_data+0x10>

00000190 <__do_clear_bss>:
     190:	24 e0       	ldi	r18, 0x04	; 4
     192:	aa eb       	ldi	r26, 0xBA	; 186
     194:	b2 e0       	ldi	r27, 0x02	; 2
     196:	01 c0       	rjmp	.+2      	; 0x19a <.do_clear_bss_start>

00000198 <.do_clear_bss_loop>:
     198:	1d 92       	st	X+, r1

0000019a <.do_clear_bss_start>:
     19a:	af 30       	cpi	r26, 0x0F	; 15
     19c:	b2 07       	cpc	r27, r18
     19e:	e1 f7       	brne	.-8      	; 0x198 <.do_clear_bss_loop>
     1a0:	1c d2       	rcall	.+1080   	; 0x5da <main>
     1a2:	0c 94 9e 0a 	jmp	0x153c	; 0x153c <_exit>

000001a6 <__bad_interrupt>:
     1a6:	2c cf       	rjmp	.-424    	; 0x0 <__vectors>

000001a8 <init_USART>:
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
}
     1a8:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7000c0>
     1ac:	e1 ec       	ldi	r30, 0xC1	; 193
     1ae:	f0 e0       	ldi	r31, 0x00	; 0
     1b0:	80 81       	ld	r24, Z
     1b2:	80 69       	ori	r24, 0x90	; 144
     1b4:	80 83       	st	Z, r24
     1b6:	80 81       	ld	r24, Z
     1b8:	88 60       	ori	r24, 0x08	; 8
     1ba:	80 83       	st	Z, r24
     1bc:	e2 ec       	ldi	r30, 0xC2	; 194
     1be:	f0 e0       	ldi	r31, 0x00	; 0
     1c0:	80 81       	ld	r24, Z
     1c2:	86 60       	ori	r24, 0x06	; 6
     1c4:	80 83       	st	Z, r24
     1c6:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7000c5>
     1ca:	87 e6       	ldi	r24, 0x67	; 103
     1cc:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7000c4>
     1d0:	08 95       	ret

000001d2 <__vector_25>:
     1d2:	1f 92       	push	r1
     1d4:	0f 92       	push	r0
     1d6:	0f b6       	in	r0, 0x3f	; 63
     1d8:	0f 92       	push	r0
     1da:	11 24       	eor	r1, r1
     1dc:	0b b6       	in	r0, 0x3b	; 59
     1de:	0f 92       	push	r0
     1e0:	8f 92       	push	r8
     1e2:	9f 92       	push	r9
     1e4:	af 92       	push	r10
     1e6:	bf 92       	push	r11
     1e8:	cf 92       	push	r12
     1ea:	df 92       	push	r13
     1ec:	ef 92       	push	r14
     1ee:	ff 92       	push	r15
     1f0:	0f 93       	push	r16
     1f2:	1f 93       	push	r17
     1f4:	2f 93       	push	r18
     1f6:	3f 93       	push	r19
     1f8:	4f 93       	push	r20
     1fa:	5f 93       	push	r21
     1fc:	6f 93       	push	r22
     1fe:	7f 93       	push	r23
     200:	8f 93       	push	r24
     202:	9f 93       	push	r25
     204:	af 93       	push	r26
     206:	bf 93       	push	r27
     208:	cf 93       	push	r28
     20a:	df 93       	push	r29
     20c:	ef 93       	push	r30
     20e:	ff 93       	push	r31
     210:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     214:	90 ed       	ldi	r25, 0xD0	; 208
     216:	98 0f       	add	r25, r24
     218:	9a 30       	cpi	r25, 0x0A	; 10
     21a:	c0 f4       	brcc	.+48     	; 0x24c <__vector_25+0x7a>
     21c:	90 91 bd 03 	lds	r25, 0x03BD	; 0x8003bd <command.1972>
     220:	94 37       	cpi	r25, 0x74	; 116
     222:	09 f0       	breq	.+2      	; 0x226 <__vector_25+0x54>
     224:	bd c0       	rjmp	.+378    	; 0x3a0 <__vector_25+0x1ce>
     226:	20 91 00 02 	lds	r18, 0x0200	; 0x800200 <__data_start>
     22a:	30 91 01 02 	lds	r19, 0x0201	; 0x800201 <__data_start+0x1>
     22e:	2f 3f       	cpi	r18, 0xFF	; 255
     230:	31 05       	cpc	r19, r1
     232:	0c f0       	brlt	.+2      	; 0x236 <__vector_25+0x64>
     234:	b5 c0       	rjmp	.+362    	; 0x3a0 <__vector_25+0x1ce>
     236:	2f 5f       	subi	r18, 0xFF	; 255
     238:	3f 4f       	sbci	r19, 0xFF	; 255
     23a:	30 93 01 02 	sts	0x0201, r19	; 0x800201 <__data_start+0x1>
     23e:	20 93 00 02 	sts	0x0200, r18	; 0x800200 <__data_start>
     242:	f9 01       	movw	r30, r18
     244:	e2 54       	subi	r30, 0x42	; 66
     246:	fd 4f       	sbci	r31, 0xFD	; 253
     248:	80 83       	st	Z, r24
     24a:	aa c0       	rjmp	.+340    	; 0x3a0 <__vector_25+0x1ce>
     24c:	9f e9       	ldi	r25, 0x9F	; 159
     24e:	98 0f       	add	r25, r24
     250:	9a 31       	cpi	r25, 0x1A	; 26
     252:	80 f4       	brcc	.+32     	; 0x274 <__vector_25+0xa2>
     254:	85 37       	cpi	r24, 0x75	; 117
     256:	40 f4       	brcc	.+16     	; 0x268 <__vector_25+0x96>
     258:	83 37       	cpi	r24, 0x73	; 115
     25a:	48 f4       	brcc	.+18     	; 0x26e <__vector_25+0x9c>
     25c:	81 36       	cpi	r24, 0x61	; 97
     25e:	39 f0       	breq	.+14     	; 0x26e <__vector_25+0x9c>
     260:	84 36       	cpi	r24, 0x64	; 100
     262:	09 f0       	breq	.+2      	; 0x266 <__vector_25+0x94>
     264:	9d c0       	rjmp	.+314    	; 0x3a0 <__vector_25+0x1ce>
     266:	03 c0       	rjmp	.+6      	; 0x26e <__vector_25+0x9c>
     268:	87 37       	cpi	r24, 0x77	; 119
     26a:	09 f0       	breq	.+2      	; 0x26e <__vector_25+0x9c>
     26c:	99 c0       	rjmp	.+306    	; 0x3a0 <__vector_25+0x1ce>
     26e:	80 93 bd 03 	sts	0x03BD, r24	; 0x8003bd <command.1972>
     272:	96 c0       	rjmp	.+300    	; 0x3a0 <__vector_25+0x1ce>
     274:	8d 30       	cpi	r24, 0x0D	; 13
     276:	09 f0       	breq	.+2      	; 0x27a <__vector_25+0xa8>
     278:	93 c0       	rjmp	.+294    	; 0x3a0 <__vector_25+0x1ce>
     27a:	80 91 bd 03 	lds	r24, 0x03BD	; 0x8003bd <command.1972>
     27e:	84 37       	cpi	r24, 0x74	; 116
     280:	b1 f5       	brne	.+108    	; 0x2ee <__vector_25+0x11c>
     282:	00 91 00 02 	lds	r16, 0x0200	; 0x800200 <__data_start>
     286:	10 91 01 02 	lds	r17, 0x0201	; 0x800201 <__data_start+0x1>
     28a:	11 23       	and	r17, r17
     28c:	0c f4       	brge	.+2      	; 0x290 <__vector_25+0xbe>
     28e:	72 c0       	rjmp	.+228    	; 0x374 <__vector_25+0x1a2>
     290:	c0 e0       	ldi	r28, 0x00	; 0
     292:	d0 e0       	ldi	r29, 0x00	; 0
     294:	d1 2c       	mov	r13, r1
     296:	e1 2c       	mov	r14, r1
     298:	f1 2c       	mov	r15, r1
     29a:	b8 01       	movw	r22, r16
     29c:	6c 1b       	sub	r22, r28
     29e:	7d 0b       	sbc	r23, r29
     2a0:	07 2e       	mov	r0, r23
     2a2:	00 0c       	add	r0, r0
     2a4:	88 0b       	sbc	r24, r24
     2a6:	99 0b       	sbc	r25, r25
     2a8:	b5 d5       	rcall	.+2922   	; 0xe14 <__floatsisf>
     2aa:	9b 01       	movw	r18, r22
     2ac:	ac 01       	movw	r20, r24
     2ae:	60 e0       	ldi	r22, 0x00	; 0
     2b0:	70 e0       	ldi	r23, 0x00	; 0
     2b2:	80 e2       	ldi	r24, 0x20	; 32
     2b4:	91 e4       	ldi	r25, 0x41	; 65
     2b6:	3a d6       	rcall	.+3188   	; 0xf2c <pow>
     2b8:	c2 54       	subi	r28, 0x42	; 66
     2ba:	dd 4f       	sbci	r29, 0xFD	; 253
     2bc:	c8 81       	ld	r28, Y
     2be:	c0 53       	subi	r28, 0x30	; 48
     2c0:	d0 e0       	ldi	r29, 0x00	; 0
     2c2:	20 e0       	ldi	r18, 0x00	; 0
     2c4:	30 e0       	ldi	r19, 0x00	; 0
     2c6:	40 e0       	ldi	r20, 0x00	; 0
     2c8:	5f e3       	ldi	r21, 0x3F	; 63
     2ca:	0d d5       	rcall	.+2586   	; 0xce6 <__addsf3>
     2cc:	70 d5       	rcall	.+2784   	; 0xdae <__fixsfsi>
     2ce:	c6 9f       	mul	r28, r22
     2d0:	90 01       	movw	r18, r0
     2d2:	c7 9f       	mul	r28, r23
     2d4:	30 0d       	add	r19, r0
     2d6:	d6 9f       	mul	r29, r22
     2d8:	30 0d       	add	r19, r0
     2da:	11 24       	eor	r1, r1
     2dc:	e2 0e       	add	r14, r18
     2de:	f3 1e       	adc	r15, r19
     2e0:	d3 94       	inc	r13
     2e2:	cd 2d       	mov	r28, r13
     2e4:	d0 e0       	ldi	r29, 0x00	; 0
     2e6:	0c 17       	cp	r16, r28
     2e8:	1d 07       	cpc	r17, r29
     2ea:	bc f6       	brge	.-82     	; 0x29a <__vector_25+0xc8>
     2ec:	3e c0       	rjmp	.+124    	; 0x36a <__vector_25+0x198>
     2ee:	88 23       	and	r24, r24
     2f0:	09 f4       	brne	.+2      	; 0x2f4 <__vector_25+0x122>
     2f2:	56 c0       	rjmp	.+172    	; 0x3a0 <__vector_25+0x1ce>
     2f4:	83 37       	cpi	r24, 0x73	; 115
     2f6:	09 f1       	breq	.+66     	; 0x33a <__vector_25+0x168>
     2f8:	28 f4       	brcc	.+10     	; 0x304 <__vector_25+0x132>
     2fa:	81 36       	cpi	r24, 0x61	; 97
     2fc:	99 f0       	breq	.+38     	; 0x324 <__vector_25+0x152>
     2fe:	84 36       	cpi	r24, 0x64	; 100
     300:	39 f1       	breq	.+78     	; 0x350 <__vector_25+0x17e>
     302:	46 c0       	rjmp	.+140    	; 0x390 <__vector_25+0x1be>
     304:	84 37       	cpi	r24, 0x74	; 116
     306:	79 f1       	breq	.+94     	; 0x366 <__vector_25+0x194>
     308:	87 37       	cpi	r24, 0x77	; 119
     30a:	09 f0       	breq	.+2      	; 0x30e <__vector_25+0x13c>
     30c:	41 c0       	rjmp	.+130    	; 0x390 <__vector_25+0x1be>
     30e:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <rp6Data+0x8>
     312:	81 30       	cpi	r24, 0x01	; 1
     314:	19 f4       	brne	.+6      	; 0x31c <__vector_25+0x14a>
     316:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <rp6Data+0x8>
     31a:	3a c0       	rjmp	.+116    	; 0x390 <__vector_25+0x1be>
     31c:	81 e0       	ldi	r24, 0x01	; 1
     31e:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <rp6Data+0x8>
     322:	36 c0       	rjmp	.+108    	; 0x390 <__vector_25+0x1be>
     324:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <rp6Data+0x9>
     328:	8f 3f       	cpi	r24, 0xFF	; 255
     32a:	19 f4       	brne	.+6      	; 0x332 <__vector_25+0x160>
     32c:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <rp6Data+0x9>
     330:	2f c0       	rjmp	.+94     	; 0x390 <__vector_25+0x1be>
     332:	8f ef       	ldi	r24, 0xFF	; 255
     334:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <rp6Data+0x9>
     338:	2b c0       	rjmp	.+86     	; 0x390 <__vector_25+0x1be>
     33a:	80 91 02 04 	lds	r24, 0x0402	; 0x800402 <rp6Data+0x8>
     33e:	8f 3f       	cpi	r24, 0xFF	; 255
     340:	19 f4       	brne	.+6      	; 0x348 <__vector_25+0x176>
     342:	10 92 02 04 	sts	0x0402, r1	; 0x800402 <rp6Data+0x8>
     346:	24 c0       	rjmp	.+72     	; 0x390 <__vector_25+0x1be>
     348:	8f ef       	ldi	r24, 0xFF	; 255
     34a:	80 93 02 04 	sts	0x0402, r24	; 0x800402 <rp6Data+0x8>
     34e:	20 c0       	rjmp	.+64     	; 0x390 <__vector_25+0x1be>
     350:	80 91 03 04 	lds	r24, 0x0403	; 0x800403 <rp6Data+0x9>
     354:	81 30       	cpi	r24, 0x01	; 1
     356:	19 f4       	brne	.+6      	; 0x35e <__vector_25+0x18c>
     358:	10 92 03 04 	sts	0x0403, r1	; 0x800403 <rp6Data+0x9>
     35c:	19 c0       	rjmp	.+50     	; 0x390 <__vector_25+0x1be>
     35e:	81 e0       	ldi	r24, 0x01	; 1
     360:	80 93 03 04 	sts	0x0403, r24	; 0x800403 <rp6Data+0x9>
     364:	15 c0       	rjmp	.+42     	; 0x390 <__vector_25+0x1be>
     366:	e1 2c       	mov	r14, r1
     368:	f1 2c       	mov	r15, r1
     36a:	85 e6       	ldi	r24, 0x65	; 101
     36c:	e8 16       	cp	r14, r24
     36e:	f1 04       	cpc	r15, r1
     370:	78 f4       	brcc	.+30     	; 0x390 <__vector_25+0x1be>
     372:	02 c0       	rjmp	.+4      	; 0x378 <__vector_25+0x1a6>
     374:	e1 2c       	mov	r14, r1
     376:	f1 2c       	mov	r15, r1
     378:	2a ef       	ldi	r18, 0xFA	; 250
     37a:	33 e0       	ldi	r19, 0x03	; 3
     37c:	47 01       	movw	r8, r14
     37e:	f9 01       	movw	r30, r18
     380:	80 82       	st	Z, r8
     382:	91 82       	std	Z+1, r9	; 0x01
     384:	12 82       	std	Z+2, r1	; 0x02
     386:	13 82       	std	Z+3, r1	; 0x03
     388:	14 82       	std	Z+4, r1	; 0x04
     38a:	15 82       	std	Z+5, r1	; 0x05
     38c:	16 82       	std	Z+6, r1	; 0x06
     38e:	17 82       	std	Z+7, r1	; 0x07
     390:	10 92 bd 03 	sts	0x03BD, r1	; 0x8003bd <command.1972>
     394:	8f ef       	ldi	r24, 0xFF	; 255
     396:	9f ef       	ldi	r25, 0xFF	; 255
     398:	90 93 01 02 	sts	0x0201, r25	; 0x800201 <__data_start+0x1>
     39c:	80 93 00 02 	sts	0x0200, r24	; 0x800200 <__data_start>
     3a0:	ff 91       	pop	r31
     3a2:	ef 91       	pop	r30
     3a4:	df 91       	pop	r29
     3a6:	cf 91       	pop	r28
     3a8:	bf 91       	pop	r27
     3aa:	af 91       	pop	r26
     3ac:	9f 91       	pop	r25
     3ae:	8f 91       	pop	r24
     3b0:	7f 91       	pop	r23
     3b2:	6f 91       	pop	r22
     3b4:	5f 91       	pop	r21
     3b6:	4f 91       	pop	r20
     3b8:	3f 91       	pop	r19
     3ba:	2f 91       	pop	r18
     3bc:	1f 91       	pop	r17
     3be:	0f 91       	pop	r16
     3c0:	ff 90       	pop	r15
     3c2:	ef 90       	pop	r14
     3c4:	df 90       	pop	r13
     3c6:	cf 90       	pop	r12
     3c8:	bf 90       	pop	r11
     3ca:	af 90       	pop	r10
     3cc:	9f 90       	pop	r9
     3ce:	8f 90       	pop	r8
     3d0:	0f 90       	pop	r0
     3d2:	0b be       	out	0x3b, r0	; 59
     3d4:	0f 90       	pop	r0
     3d6:	0f be       	out	0x3f, r0	; 63
     3d8:	0f 90       	pop	r0
     3da:	1f 90       	pop	r1
     3dc:	18 95       	reti

000003de <init_micros>:
     3de:	e1 e9       	ldi	r30, 0x91	; 145
     3e0:	f0 e0       	ldi	r31, 0x00	; 0
     3e2:	80 81       	ld	r24, Z
     3e4:	81 60       	ori	r24, 0x01	; 1
     3e6:	80 83       	st	Z, r24
     3e8:	e1 e7       	ldi	r30, 0x71	; 113
     3ea:	f0 e0       	ldi	r31, 0x00	; 0
     3ec:	80 81       	ld	r24, Z
     3ee:	81 60       	ori	r24, 0x01	; 1
     3f0:	80 83       	st	Z, r24
     3f2:	10 92 95 00 	sts	0x0095, r1	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     3f6:	10 92 94 00 	sts	0x0094, r1	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     3fa:	10 92 da 03 	sts	0x03DA, r1	; 0x8003da <t3TotalOverflow>
     3fe:	10 92 db 03 	sts	0x03DB, r1	; 0x8003db <t3TotalOverflow+0x1>
     402:	10 92 dc 03 	sts	0x03DC, r1	; 0x8003dc <t3TotalOverflow+0x2>
     406:	10 92 dd 03 	sts	0x03DD, r1	; 0x8003dd <t3TotalOverflow+0x3>
     40a:	10 92 de 03 	sts	0x03DE, r1	; 0x8003de <t3TotalOverflow+0x4>
     40e:	10 92 df 03 	sts	0x03DF, r1	; 0x8003df <t3TotalOverflow+0x5>
     412:	10 92 e0 03 	sts	0x03E0, r1	; 0x8003e0 <t3TotalOverflow+0x6>
     416:	10 92 e1 03 	sts	0x03E1, r1	; 0x8003e1 <t3TotalOverflow+0x7>
     41a:	08 95       	ret

0000041c <__vector_35>:
     41c:	1f 92       	push	r1
     41e:	0f 92       	push	r0
     420:	0f b6       	in	r0, 0x3f	; 63
     422:	0f 92       	push	r0
     424:	11 24       	eor	r1, r1
     426:	2f 93       	push	r18
     428:	3f 93       	push	r19
     42a:	4f 93       	push	r20
     42c:	5f 93       	push	r21
     42e:	6f 93       	push	r22
     430:	7f 93       	push	r23
     432:	8f 93       	push	r24
     434:	9f 93       	push	r25
     436:	af 93       	push	r26
     438:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <t3TotalOverflow>
     43c:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <t3TotalOverflow+0x1>
     440:	40 91 dc 03 	lds	r20, 0x03DC	; 0x8003dc <t3TotalOverflow+0x2>
     444:	50 91 dd 03 	lds	r21, 0x03DD	; 0x8003dd <t3TotalOverflow+0x3>
     448:	60 91 de 03 	lds	r22, 0x03DE	; 0x8003de <t3TotalOverflow+0x4>
     44c:	70 91 df 03 	lds	r23, 0x03DF	; 0x8003df <t3TotalOverflow+0x5>
     450:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <t3TotalOverflow+0x6>
     454:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <t3TotalOverflow+0x7>
     458:	a1 e0       	ldi	r26, 0x01	; 1
     45a:	0e 94 36 0a 	call	0x146c	; 0x146c <__adddi3_s8>
     45e:	20 93 da 03 	sts	0x03DA, r18	; 0x8003da <t3TotalOverflow>
     462:	30 93 db 03 	sts	0x03DB, r19	; 0x8003db <t3TotalOverflow+0x1>
     466:	40 93 dc 03 	sts	0x03DC, r20	; 0x8003dc <t3TotalOverflow+0x2>
     46a:	50 93 dd 03 	sts	0x03DD, r21	; 0x8003dd <t3TotalOverflow+0x3>
     46e:	60 93 de 03 	sts	0x03DE, r22	; 0x8003de <t3TotalOverflow+0x4>
     472:	70 93 df 03 	sts	0x03DF, r23	; 0x8003df <t3TotalOverflow+0x5>
     476:	80 93 e0 03 	sts	0x03E0, r24	; 0x8003e0 <t3TotalOverflow+0x6>
     47a:	90 93 e1 03 	sts	0x03E1, r25	; 0x8003e1 <t3TotalOverflow+0x7>
     47e:	af 91       	pop	r26
     480:	9f 91       	pop	r25
     482:	8f 91       	pop	r24
     484:	7f 91       	pop	r23
     486:	6f 91       	pop	r22
     488:	5f 91       	pop	r21
     48a:	4f 91       	pop	r20
     48c:	3f 91       	pop	r19
     48e:	2f 91       	pop	r18
     490:	0f 90       	pop	r0
     492:	0f be       	out	0x3f, r0	; 63
     494:	0f 90       	pop	r0
     496:	1f 90       	pop	r1
     498:	18 95       	reti

0000049a <micros>:
     49a:	4f 92       	push	r4
     49c:	5f 92       	push	r5
     49e:	6f 92       	push	r6
     4a0:	7f 92       	push	r7
     4a2:	8f 92       	push	r8
     4a4:	9f 92       	push	r9
     4a6:	af 92       	push	r10
     4a8:	bf 92       	push	r11
     4aa:	cf 92       	push	r12
     4ac:	df 92       	push	r13
     4ae:	ef 92       	push	r14
     4b0:	ff 92       	push	r15
     4b2:	0f 93       	push	r16
     4b4:	1f 93       	push	r17
     4b6:	80 90 94 00 	lds	r8, 0x0094	; 0x800094 <__TEXT_REGION_LENGTH__+0x700094>
     4ba:	90 90 95 00 	lds	r9, 0x0095	; 0x800095 <__TEXT_REGION_LENGTH__+0x700095>
     4be:	20 91 da 03 	lds	r18, 0x03DA	; 0x8003da <t3TotalOverflow>
     4c2:	30 91 db 03 	lds	r19, 0x03DB	; 0x8003db <t3TotalOverflow+0x1>
     4c6:	40 91 dc 03 	lds	r20, 0x03DC	; 0x8003dc <t3TotalOverflow+0x2>
     4ca:	50 91 dd 03 	lds	r21, 0x03DD	; 0x8003dd <t3TotalOverflow+0x3>
     4ce:	60 91 de 03 	lds	r22, 0x03DE	; 0x8003de <t3TotalOverflow+0x4>
     4d2:	70 91 df 03 	lds	r23, 0x03DF	; 0x8003df <t3TotalOverflow+0x5>
     4d6:	80 91 e0 03 	lds	r24, 0x03E0	; 0x8003e0 <t3TotalOverflow+0x6>
     4da:	90 91 e1 03 	lds	r25, 0x03E1	; 0x8003e1 <t3TotalOverflow+0x7>
     4de:	98 2c       	mov	r9, r8
     4e0:	88 24       	eor	r8, r8
     4e2:	99 0c       	add	r9, r9
     4e4:	99 0c       	add	r9, r9
     4e6:	99 0c       	add	r9, r9
     4e8:	99 0c       	add	r9, r9
     4ea:	09 2c       	mov	r0, r9
     4ec:	00 0c       	add	r0, r0
     4ee:	aa 08       	sbc	r10, r10
     4f0:	bb 08       	sbc	r11, r11
     4f2:	bb 20       	and	r11, r11
     4f4:	2c f4       	brge	.+10     	; 0x500 <micros+0x66>
     4f6:	ef ef       	ldi	r30, 0xFF	; 255
     4f8:	8e 0e       	add	r8, r30
     4fa:	9e 1e       	adc	r9, r30
     4fc:	a1 1c       	adc	r10, r1
     4fe:	b1 1c       	adc	r11, r1
     500:	25 01       	movw	r4, r10
     502:	77 24       	eor	r7, r7
     504:	57 fc       	sbrc	r5, 7
     506:	70 94       	com	r7
     508:	67 2c       	mov	r6, r7
     50a:	bb 0c       	add	r11, r11
     50c:	88 08       	sbc	r8, r8
     50e:	98 2c       	mov	r9, r8
     510:	54 01       	movw	r10, r8
     512:	0c e0       	ldi	r16, 0x0C	; 12
     514:	89 d7       	rcall	.+3858   	; 0x1428 <__ashldi3>
     516:	f2 2f       	mov	r31, r18
     518:	e3 2f       	mov	r30, r19
     51a:	c4 2e       	mov	r12, r20
     51c:	d5 2e       	mov	r13, r21
     51e:	e6 2e       	mov	r14, r22
     520:	f7 2e       	mov	r15, r23
     522:	08 2f       	mov	r16, r24
     524:	19 2f       	mov	r17, r25
     526:	24 2d       	mov	r18, r4
     528:	35 2d       	mov	r19, r5
     52a:	46 2d       	mov	r20, r6
     52c:	57 2d       	mov	r21, r7
     52e:	68 2d       	mov	r22, r8
     530:	78 2d       	mov	r23, r8
     532:	88 2d       	mov	r24, r8
     534:	98 2d       	mov	r25, r8
     536:	af 2e       	mov	r10, r31
     538:	be 2e       	mov	r11, r30
     53a:	8f d7       	rcall	.+3870   	; 0x145a <__adddi3>
     53c:	1f 91       	pop	r17
     53e:	0f 91       	pop	r16
     540:	ff 90       	pop	r15
     542:	ef 90       	pop	r14
     544:	df 90       	pop	r13
     546:	cf 90       	pop	r12
     548:	bf 90       	pop	r11
     54a:	af 90       	pop	r10
     54c:	9f 90       	pop	r9
     54e:	8f 90       	pop	r8
     550:	7f 90       	pop	r7
     552:	6f 90       	pop	r6
     554:	5f 90       	pop	r5
     556:	4f 90       	pop	r4
     558:	08 95       	ret

0000055a <init_TWI>:
     55a:	10 92 b9 00 	sts	0x00B9, r1	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     55e:	88 e4       	ldi	r24, 0x48	; 72
     560:	80 93 b8 00 	sts	0x00B8, r24	; 0x8000b8 <__TEXT_REGION_LENGTH__+0x7000b8>
     564:	85 e0       	ldi	r24, 0x05	; 5
     566:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     56a:	08 95       	ret

0000056c <init_TWI_Timer2>:
     56c:	e1 eb       	ldi	r30, 0xB1	; 177
     56e:	f0 e0       	ldi	r31, 0x00	; 0
     570:	80 81       	ld	r24, Z
     572:	87 60       	ori	r24, 0x07	; 7
     574:	80 83       	st	Z, r24
     576:	e0 e7       	ldi	r30, 0x70	; 112
     578:	f0 e0       	ldi	r31, 0x00	; 0
     57a:	80 81       	ld	r24, Z
     57c:	81 60       	ori	r24, 0x01	; 1
     57e:	80 83       	st	Z, r24
     580:	10 92 b2 00 	sts	0x00B2, r1	; 0x8000b2 <__TEXT_REGION_LENGTH__+0x7000b2>
     584:	08 95       	ret

00000586 <init_arduinoData>:
     586:	e2 ee       	ldi	r30, 0xE2	; 226
     588:	f3 e0       	ldi	r31, 0x03	; 3
     58a:	11 82       	std	Z+1, r1	; 0x01
     58c:	10 82       	st	Z, r1
     58e:	13 82       	std	Z+3, r1	; 0x03
     590:	12 82       	std	Z+2, r1	; 0x02
     592:	08 95       	ret

00000594 <init_rp6Data>:
     594:	ea ef       	ldi	r30, 0xFA	; 250
     596:	f3 e0       	ldi	r31, 0x03	; 3
     598:	10 82       	st	Z, r1
     59a:	11 82       	std	Z+1, r1	; 0x01
     59c:	12 82       	std	Z+2, r1	; 0x02
     59e:	13 82       	std	Z+3, r1	; 0x03
     5a0:	14 82       	std	Z+4, r1	; 0x04
     5a2:	15 82       	std	Z+5, r1	; 0x05
     5a4:	16 82       	std	Z+6, r1	; 0x06
     5a6:	17 82       	std	Z+7, r1	; 0x07
     5a8:	10 86       	std	Z+8, r1	; 0x08
     5aa:	11 86       	std	Z+9, r1	; 0x09
     5ac:	83 e0       	ldi	r24, 0x03	; 3
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	93 87       	std	Z+11, r25	; 0x0b
     5b2:	82 87       	std	Z+10, r24	; 0x0a
     5b4:	84 ec       	ldi	r24, 0xC4	; 196
     5b6:	99 e0       	ldi	r25, 0x09	; 9
     5b8:	95 87       	std	Z+13, r25	; 0x0d
     5ba:	84 87       	std	Z+12, r24	; 0x0c
     5bc:	80 e7       	ldi	r24, 0x70	; 112
     5be:	97 e1       	ldi	r25, 0x17	; 23
     5c0:	97 87       	std	Z+15, r25	; 0x0f
     5c2:	86 87       	std	Z+14, r24	; 0x0e
     5c4:	80 e4       	ldi	r24, 0x40	; 64
     5c6:	9d e0       	ldi	r25, 0x0D	; 13
     5c8:	a3 e0       	ldi	r26, 0x03	; 3
     5ca:	b0 e0       	ldi	r27, 0x00	; 0
     5cc:	80 8b       	std	Z+16, r24	; 0x10
     5ce:	91 8b       	std	Z+17, r25	; 0x11
     5d0:	a2 8b       	std	Z+18, r26	; 0x12
     5d2:	b3 8b       	std	Z+19, r27	; 0x13
     5d4:	81 e0       	ldi	r24, 0x01	; 1
     5d6:	84 8b       	std	Z+20, r24	; 0x14
     5d8:	08 95       	ret

000005da <main>:
     5da:	78 94       	sei
     5dc:	00 df       	rcall	.-512    	; 0x3de <init_micros>
     5de:	e4 dd       	rcall	.-1080   	; 0x1a8 <init_USART>
     5e0:	bc df       	rcall	.-136    	; 0x55a <init_TWI>
     5e2:	c4 df       	rcall	.-120    	; 0x56c <init_TWI_Timer2>
     5e4:	d7 df       	rcall	.-82     	; 0x594 <init_rp6Data>
     5e6:	cf df       	rcall	.-98     	; 0x586 <init_arduinoData>
     5e8:	f2 d2       	rcall	.+1508   	; 0xbce <initTimer>
     5ea:	de dd       	rcall	.-1092   	; 0x1a8 <init_USART>
     5ec:	ca ef       	ldi	r28, 0xFA	; 250
     5ee:	d3 e0       	ldi	r29, 0x03	; 3
     5f0:	40 90 c2 03 	lds	r4, 0x03C2	; 0x8003c2 <ultrasonicSensorTimer>
     5f4:	50 90 c3 03 	lds	r5, 0x03C3	; 0x8003c3 <ultrasonicSensorTimer+0x1>
     5f8:	60 90 c4 03 	lds	r6, 0x03C4	; 0x8003c4 <ultrasonicSensorTimer+0x2>
     5fc:	70 90 c5 03 	lds	r7, 0x03C5	; 0x8003c5 <ultrasonicSensorTimer+0x3>
     600:	4c df       	rcall	.-360    	; 0x49a <micros>
     602:	f2 2f       	mov	r31, r18
     604:	e3 2f       	mov	r30, r19
     606:	c4 2e       	mov	r12, r20
     608:	d5 2e       	mov	r13, r21
     60a:	e6 2e       	mov	r14, r22
     60c:	f7 2e       	mov	r15, r23
     60e:	08 2f       	mov	r16, r24
     610:	19 2f       	mov	r17, r25
     612:	24 2d       	mov	r18, r4
     614:	35 2d       	mov	r19, r5
     616:	46 2d       	mov	r20, r6
     618:	57 2d       	mov	r21, r7
     61a:	60 e0       	ldi	r22, 0x00	; 0
     61c:	70 e0       	ldi	r23, 0x00	; 0
     61e:	80 e0       	ldi	r24, 0x00	; 0
     620:	90 e0       	ldi	r25, 0x00	; 0
     622:	af 2e       	mov	r10, r31
     624:	be 2e       	mov	r11, r30
     626:	2e d7       	rcall	.+3676   	; 0x1484 <__cmpdi2>
     628:	08 f0       	brcs	.+2      	; 0x62c <main+0x52>
     62a:	4e c0       	rjmp	.+156    	; 0x6c8 <main+0xee>
     62c:	8a e0       	ldi	r24, 0x0A	; 10
     62e:	92 e0       	ldi	r25, 0x02	; 2
     630:	9e d2       	rcall	.+1340   	; 0xb6e <writeString>
     632:	8d e0       	ldi	r24, 0x0D	; 13
     634:	92 e0       	ldi	r25, 0x02	; 2
     636:	9b d2       	rcall	.+1334   	; 0xb6e <writeString>
     638:	d4 d2       	rcall	.+1448   	; 0xbe2 <ultrasonicSensor>
     63a:	ae d2       	rcall	.+1372   	; 0xb98 <writeInt>
     63c:	82 e2       	ldi	r24, 0x22	; 34
     63e:	92 e0       	ldi	r25, 0x02	; 2
     640:	96 d2       	rcall	.+1324   	; 0xb6e <writeString>
     642:	88 81       	ld	r24, Y
     644:	99 81       	ldd	r25, Y+1	; 0x01
     646:	a8 d2       	rcall	.+1360   	; 0xb98 <writeInt>
     648:	8f e2       	ldi	r24, 0x2F	; 47
     64a:	92 e0       	ldi	r25, 0x02	; 2
     64c:	90 d2       	rcall	.+1312   	; 0xb6e <writeString>
     64e:	88 85       	ldd	r24, Y+8	; 0x08
     650:	81 30       	cpi	r24, 0x01	; 1
     652:	21 f4       	brne	.+8      	; 0x65c <main+0x82>
     654:	8e e3       	ldi	r24, 0x3E	; 62
     656:	92 e0       	ldi	r25, 0x02	; 2
     658:	8a d2       	rcall	.+1300   	; 0xb6e <writeString>
     65a:	0b c0       	rjmp	.+22     	; 0x672 <main+0x98>
     65c:	81 11       	cpse	r24, r1
     65e:	04 c0       	rjmp	.+8      	; 0x668 <main+0x8e>
     660:	88 e4       	ldi	r24, 0x48	; 72
     662:	92 e0       	ldi	r25, 0x02	; 2
     664:	84 d2       	rcall	.+1288   	; 0xb6e <writeString>
     666:	05 c0       	rjmp	.+10     	; 0x672 <main+0x98>
     668:	8f 3f       	cpi	r24, 0xFF	; 255
     66a:	19 f4       	brne	.+6      	; 0x672 <main+0x98>
     66c:	85 e5       	ldi	r24, 0x55	; 85
     66e:	92 e0       	ldi	r25, 0x02	; 2
     670:	7e d2       	rcall	.+1276   	; 0xb6e <writeString>
     672:	89 85       	ldd	r24, Y+9	; 0x09
     674:	8f 3f       	cpi	r24, 0xFF	; 255
     676:	21 f4       	brne	.+8      	; 0x680 <main+0xa6>
     678:	81 e6       	ldi	r24, 0x61	; 97
     67a:	92 e0       	ldi	r25, 0x02	; 2
     67c:	78 d2       	rcall	.+1264   	; 0xb6e <writeString>
     67e:	0b c0       	rjmp	.+22     	; 0x696 <main+0xbc>
     680:	81 11       	cpse	r24, r1
     682:	04 c0       	rjmp	.+8      	; 0x68c <main+0xb2>
     684:	8e e6       	ldi	r24, 0x6E	; 110
     686:	92 e0       	ldi	r25, 0x02	; 2
     688:	72 d2       	rcall	.+1252   	; 0xb6e <writeString>
     68a:	05 c0       	rjmp	.+10     	; 0x696 <main+0xbc>
     68c:	81 30       	cpi	r24, 0x01	; 1
     68e:	19 f4       	brne	.+6      	; 0x696 <main+0xbc>
     690:	8d e7       	ldi	r24, 0x7D	; 125
     692:	92 e0       	ldi	r25, 0x02	; 2
     694:	6c d2       	rcall	.+1240   	; 0xb6e <writeString>
     696:	01 df       	rcall	.-510    	; 0x49a <micros>
     698:	82 2e       	mov	r8, r18
     69a:	93 2e       	mov	r9, r19
     69c:	a4 2e       	mov	r10, r20
     69e:	b5 2e       	mov	r11, r21
     6a0:	80 91 06 02 	lds	r24, 0x0206	; 0x800206 <ultrasonicSensorSpeed>
     6a4:	90 91 07 02 	lds	r25, 0x0207	; 0x800207 <ultrasonicSensorSpeed+0x1>
     6a8:	a0 91 08 02 	lds	r26, 0x0208	; 0x800208 <ultrasonicSensorSpeed+0x2>
     6ac:	b0 91 09 02 	lds	r27, 0x0209	; 0x800209 <ultrasonicSensorSpeed+0x3>
     6b0:	88 0e       	add	r8, r24
     6b2:	99 1e       	adc	r9, r25
     6b4:	aa 1e       	adc	r10, r26
     6b6:	bb 1e       	adc	r11, r27
     6b8:	80 92 c2 03 	sts	0x03C2, r8	; 0x8003c2 <ultrasonicSensorTimer>
     6bc:	90 92 c3 03 	sts	0x03C3, r9	; 0x8003c3 <ultrasonicSensorTimer+0x1>
     6c0:	a0 92 c4 03 	sts	0x03C4, r10	; 0x8003c4 <ultrasonicSensorTimer+0x2>
     6c4:	b0 92 c5 03 	sts	0x03C5, r11	; 0x8003c5 <ultrasonicSensorTimer+0x3>
     6c8:	40 90 be 03 	lds	r4, 0x03BE	; 0x8003be <stoptimer>
     6cc:	50 90 bf 03 	lds	r5, 0x03BF	; 0x8003bf <stoptimer+0x1>
     6d0:	60 90 c0 03 	lds	r6, 0x03C0	; 0x8003c0 <stoptimer+0x2>
     6d4:	70 90 c1 03 	lds	r7, 0x03C1	; 0x8003c1 <stoptimer+0x3>
     6d8:	e0 de       	rcall	.-576    	; 0x49a <micros>
     6da:	f2 2f       	mov	r31, r18
     6dc:	e3 2f       	mov	r30, r19
     6de:	c4 2e       	mov	r12, r20
     6e0:	d5 2e       	mov	r13, r21
     6e2:	e6 2e       	mov	r14, r22
     6e4:	f7 2e       	mov	r15, r23
     6e6:	08 2f       	mov	r16, r24
     6e8:	19 2f       	mov	r17, r25
     6ea:	24 2d       	mov	r18, r4
     6ec:	35 2d       	mov	r19, r5
     6ee:	46 2d       	mov	r20, r6
     6f0:	57 2d       	mov	r21, r7
     6f2:	60 e0       	ldi	r22, 0x00	; 0
     6f4:	70 e0       	ldi	r23, 0x00	; 0
     6f6:	80 e0       	ldi	r24, 0x00	; 0
     6f8:	90 e0       	ldi	r25, 0x00	; 0
     6fa:	af 2e       	mov	r10, r31
     6fc:	be 2e       	mov	r11, r30
     6fe:	c2 d6       	rcall	.+3460   	; 0x1484 <__cmpdi2>
     700:	08 f0       	brcs	.+2      	; 0x704 <main+0x12a>
     702:	76 cf       	rjmp	.-276    	; 0x5f0 <main+0x16>
     704:	6e d2       	rcall	.+1244   	; 0xbe2 <ultrasonicSensor>
     706:	fc 01       	movw	r30, r24
     708:	28 81       	ld	r18, Y
     70a:	39 81       	ldd	r19, Y+1	; 0x01
     70c:	4a 81       	ldd	r20, Y+2	; 0x02
     70e:	5b 81       	ldd	r21, Y+3	; 0x03
     710:	6c 81       	ldd	r22, Y+4	; 0x04
     712:	7d 81       	ldd	r23, Y+5	; 0x05
     714:	8e 81       	ldd	r24, Y+6	; 0x06
     716:	9f 81       	ldd	r25, Y+7	; 0x07
     718:	ac e3       	ldi	r26, 0x3C	; 60
     71a:	bd d6       	rcall	.+3450   	; 0x1496 <__cmpdi2_s8>
     71c:	09 f0       	breq	.+2      	; 0x720 <main+0x146>
     71e:	7c f4       	brge	.+30     	; 0x73e <main+0x164>
     720:	88 85       	ldd	r24, Y+8	; 0x08
     722:	81 30       	cpi	r24, 0x01	; 1
     724:	d1 f4       	brne	.+52     	; 0x75a <main+0x180>
     726:	e4 3b       	cpi	r30, 0xB4	; 180
     728:	f1 05       	cpc	r31, r1
     72a:	b8 f4       	brcc	.+46     	; 0x75a <main+0x180>
     72c:	18 82       	st	Y, r1
     72e:	19 82       	std	Y+1, r1	; 0x01
     730:	1a 82       	std	Y+2, r1	; 0x02
     732:	1b 82       	std	Y+3, r1	; 0x03
     734:	1c 82       	std	Y+4, r1	; 0x04
     736:	1d 82       	std	Y+5, r1	; 0x05
     738:	1e 82       	std	Y+6, r1	; 0x06
     73a:	1f 82       	std	Y+7, r1	; 0x07
     73c:	0e c0       	rjmp	.+28     	; 0x75a <main+0x180>
     73e:	e8 31       	cpi	r30, 0x18	; 24
     740:	f1 40       	sbci	r31, 0x01	; 1
     742:	58 f4       	brcc	.+22     	; 0x75a <main+0x180>
     744:	88 85       	ldd	r24, Y+8	; 0x08
     746:	81 30       	cpi	r24, 0x01	; 1
     748:	41 f4       	brne	.+16     	; 0x75a <main+0x180>
     74a:	18 82       	st	Y, r1
     74c:	19 82       	std	Y+1, r1	; 0x01
     74e:	1a 82       	std	Y+2, r1	; 0x02
     750:	1b 82       	std	Y+3, r1	; 0x03
     752:	1c 82       	std	Y+4, r1	; 0x04
     754:	1d 82       	std	Y+5, r1	; 0x05
     756:	1e 82       	std	Y+6, r1	; 0x06
     758:	1f 82       	std	Y+7, r1	; 0x07
     75a:	9f de       	rcall	.-706    	; 0x49a <micros>
     75c:	82 2e       	mov	r8, r18
     75e:	93 2e       	mov	r9, r19
     760:	a4 2e       	mov	r10, r20
     762:	b5 2e       	mov	r11, r21
     764:	80 91 02 02 	lds	r24, 0x0202	; 0x800202 <stoptimerspeed>
     768:	90 91 03 02 	lds	r25, 0x0203	; 0x800203 <stoptimerspeed+0x1>
     76c:	a0 91 04 02 	lds	r26, 0x0204	; 0x800204 <stoptimerspeed+0x2>
     770:	b0 91 05 02 	lds	r27, 0x0205	; 0x800205 <stoptimerspeed+0x3>
     774:	88 0e       	add	r8, r24
     776:	99 1e       	adc	r9, r25
     778:	aa 1e       	adc	r10, r26
     77a:	bb 1e       	adc	r11, r27
     77c:	80 92 be 03 	sts	0x03BE, r8	; 0x8003be <stoptimer>
     780:	90 92 bf 03 	sts	0x03BF, r9	; 0x8003bf <stoptimer+0x1>
     784:	a0 92 c0 03 	sts	0x03C0, r10	; 0x8003c0 <stoptimer+0x2>
     788:	b0 92 c1 03 	sts	0x03C1, r11	; 0x8003c1 <stoptimer+0x3>
     78c:	31 cf       	rjmp	.-414    	; 0x5f0 <main+0x16>

0000078e <arduinoDataInterpreter>:
     78e:	0f 93       	push	r16
     790:	1f 93       	push	r17
     792:	cf 93       	push	r28
     794:	df 93       	push	r29
     796:	e2 ee       	ldi	r30, 0xE2	; 226
     798:	f3 e0       	ldi	r31, 0x03	; 3
     79a:	06 ec       	ldi	r16, 0xC6	; 198
     79c:	13 e0       	ldi	r17, 0x03	; 3
     79e:	d8 01       	movw	r26, r16
     7a0:	11 96       	adiw	r26, 0x01	; 1
     7a2:	2c 91       	ld	r18, X
     7a4:	c0 e3       	ldi	r28, 0x30	; 48
     7a6:	d5 e7       	ldi	r29, 0x75	; 117
     7a8:	2c 9f       	mul	r18, r28
     7aa:	c0 01       	movw	r24, r0
     7ac:	2d 9f       	mul	r18, r29
     7ae:	90 0d       	add	r25, r0
     7b0:	11 24       	eor	r1, r1
     7b2:	2f ef       	ldi	r18, 0xFF	; 255
     7b4:	30 e0       	ldi	r19, 0x00	; 0
     7b6:	b9 01       	movw	r22, r18
     7b8:	e9 d5       	rcall	.+3026   	; 0x138c <__divmodhi4>
     7ba:	71 83       	std	Z+1, r23	; 0x01
     7bc:	60 83       	st	Z, r22
     7be:	d8 01       	movw	r26, r16
     7c0:	12 96       	adiw	r26, 0x02	; 2
     7c2:	4c 91       	ld	r20, X
     7c4:	4c 9f       	mul	r20, r28
     7c6:	c0 01       	movw	r24, r0
     7c8:	4d 9f       	mul	r20, r29
     7ca:	90 0d       	add	r25, r0
     7cc:	11 24       	eor	r1, r1
     7ce:	b9 01       	movw	r22, r18
     7d0:	dd d5       	rcall	.+3002   	; 0x138c <__divmodhi4>
     7d2:	73 83       	std	Z+3, r23	; 0x03
     7d4:	62 83       	std	Z+2, r22	; 0x02
     7d6:	df 91       	pop	r29
     7d8:	cf 91       	pop	r28
     7da:	1f 91       	pop	r17
     7dc:	0f 91       	pop	r16
     7de:	08 95       	ret

000007e0 <I2C_receiveInterpreter>:
     7e0:	80 91 c6 03 	lds	r24, 0x03C6	; 0x8003c6 <receiveDataTWI>
     7e4:	81 30       	cpi	r24, 0x01	; 1
     7e6:	09 f4       	brne	.+2      	; 0x7ea <I2C_receiveInterpreter+0xa>
     7e8:	d2 cf       	rjmp	.-92     	; 0x78e <arduinoDataInterpreter>
     7ea:	08 95       	ret

000007ec <clearSendData>:
     7ec:	e6 ee       	ldi	r30, 0xE6	; 230
     7ee:	f3 e0       	ldi	r31, 0x03	; 3
     7f0:	8a ef       	ldi	r24, 0xFA	; 250
     7f2:	93 e0       	ldi	r25, 0x03	; 3
     7f4:	11 92       	st	Z+, r1
     7f6:	e8 17       	cp	r30, r24
     7f8:	f9 07       	cpc	r31, r25
     7fa:	e1 f7       	brne	.-8      	; 0x7f4 <clearSendData+0x8>
     7fc:	08 95       	ret

000007fe <clearReceiveData>:
     7fe:	e6 ec       	ldi	r30, 0xC6	; 198
     800:	f3 e0       	ldi	r31, 0x03	; 3
     802:	8a ed       	ldi	r24, 0xDA	; 218
     804:	93 e0       	ldi	r25, 0x03	; 3
     806:	11 92       	st	Z+, r1
     808:	e8 17       	cp	r30, r24
     80a:	f9 07       	cpc	r31, r25
     80c:	e1 f7       	brne	.-8      	; 0x806 <clearReceiveData+0x8>
     80e:	08 95       	ret

00000810 <__vector_39>:
     810:	1f 92       	push	r1
     812:	0f 92       	push	r0
     814:	0f b6       	in	r0, 0x3f	; 63
     816:	0f 92       	push	r0
     818:	11 24       	eor	r1, r1
     81a:	0b b6       	in	r0, 0x3b	; 59
     81c:	0f 92       	push	r0
     81e:	2f 93       	push	r18
     820:	3f 93       	push	r19
     822:	4f 93       	push	r20
     824:	5f 93       	push	r21
     826:	6f 93       	push	r22
     828:	7f 93       	push	r23
     82a:	8f 93       	push	r24
     82c:	9f 93       	push	r25
     82e:	af 93       	push	r26
     830:	bf 93       	push	r27
     832:	ef 93       	push	r30
     834:	ff 93       	push	r31
     836:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
     83a:	80 35       	cpi	r24, 0x50	; 80
     83c:	69 f0       	breq	.+26     	; 0x858 <__vector_39+0x48>
     83e:	88 35       	cpi	r24, 0x58	; 88
     840:	51 f1       	breq	.+84     	; 0x896 <__vector_39+0x86>
     842:	80 34       	cpi	r24, 0x40	; 64
     844:	a9 f5       	brne	.+106    	; 0x8b0 <__vector_39+0xa0>
     846:	db df       	rcall	.-74     	; 0x7fe <clearReceiveData>
     848:	10 92 bd 02 	sts	0x02BD, r1	; 0x8002bd <bytecounter.2019+0x1>
     84c:	10 92 bc 02 	sts	0x02BC, r1	; 0x8002bc <bytecounter.2019>
     850:	85 ec       	ldi	r24, 0xC5	; 197
     852:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     856:	2c c0       	rjmp	.+88     	; 0x8b0 <__vector_39+0xa0>
     858:	80 91 bc 02 	lds	r24, 0x02BC	; 0x8002bc <bytecounter.2019>
     85c:	90 91 bd 02 	lds	r25, 0x02BD	; 0x8002bd <bytecounter.2019+0x1>
     860:	20 91 bb 00 	lds	r18, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     864:	fc 01       	movw	r30, r24
     866:	ea 53       	subi	r30, 0x3A	; 58
     868:	fc 4f       	sbci	r31, 0xFC	; 252
     86a:	20 83       	st	Z, r18
     86c:	82 31       	cpi	r24, 0x12	; 18
     86e:	91 05       	cpc	r25, r1
     870:	4c f4       	brge	.+18     	; 0x884 <__vector_39+0x74>
     872:	01 96       	adiw	r24, 0x01	; 1
     874:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <bytecounter.2019+0x1>
     878:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <bytecounter.2019>
     87c:	85 ec       	ldi	r24, 0xC5	; 197
     87e:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     882:	16 c0       	rjmp	.+44     	; 0x8b0 <__vector_39+0xa0>
     884:	01 96       	adiw	r24, 0x01	; 1
     886:	90 93 bd 02 	sts	0x02BD, r25	; 0x8002bd <bytecounter.2019+0x1>
     88a:	80 93 bc 02 	sts	0x02BC, r24	; 0x8002bc <bytecounter.2019>
     88e:	85 e8       	ldi	r24, 0x85	; 133
     890:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     894:	0d c0       	rjmp	.+26     	; 0x8b0 <__vector_39+0xa0>
     896:	80 91 bb 00 	lds	r24, 0x00BB	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
     89a:	e0 91 bc 02 	lds	r30, 0x02BC	; 0x8002bc <bytecounter.2019>
     89e:	f0 91 bd 02 	lds	r31, 0x02BD	; 0x8002bd <bytecounter.2019+0x1>
     8a2:	ea 53       	subi	r30, 0x3A	; 58
     8a4:	fc 4f       	sbci	r31, 0xFC	; 252
     8a6:	80 83       	st	Z, r24
     8a8:	85 e9       	ldi	r24, 0x95	; 149
     8aa:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
     8ae:	98 df       	rcall	.-208    	; 0x7e0 <I2C_receiveInterpreter>
     8b0:	ff 91       	pop	r31
     8b2:	ef 91       	pop	r30
     8b4:	bf 91       	pop	r27
     8b6:	af 91       	pop	r26
     8b8:	9f 91       	pop	r25
     8ba:	8f 91       	pop	r24
     8bc:	7f 91       	pop	r23
     8be:	6f 91       	pop	r22
     8c0:	5f 91       	pop	r21
     8c2:	4f 91       	pop	r20
     8c4:	3f 91       	pop	r19
     8c6:	2f 91       	pop	r18
     8c8:	0f 90       	pop	r0
     8ca:	0b be       	out	0x3b, r0	; 59
     8cc:	0f 90       	pop	r0
     8ce:	0f be       	out	0x3f, r0	; 63
     8d0:	0f 90       	pop	r0
     8d2:	1f 90       	pop	r1
     8d4:	18 95       	reti

000008d6 <TWIwaitUntilReady>:


void TWIwaitUntilReady(){
	while (!(TWCR & (1 << TWINT)));
     8d6:	ec eb       	ldi	r30, 0xBC	; 188
     8d8:	f0 e0       	ldi	r31, 0x00	; 0
     8da:	80 81       	ld	r24, Z
     8dc:	88 23       	and	r24, r24
     8de:	ec f7       	brge	.-6      	; 0x8da <TWIwaitUntilReady+0x4>
}
     8e0:	08 95       	ret

000008e2 <checkCode>:


void checkCode(uint8_t code){
     8e2:	cf 93       	push	r28
     8e4:	df 93       	push	r29
     8e6:	cd b7       	in	r28, 0x3d	; 61
     8e8:	de b7       	in	r29, 0x3e	; 62
     8ea:	cf 5f       	subi	r28, 0xFF	; 255
     8ec:	d1 09       	sbc	r29, r1
     8ee:	0f b6       	in	r0, 0x3f	; 63
     8f0:	f8 94       	cli
     8f2:	de bf       	out	0x3e, r29	; 62
     8f4:	0f be       	out	0x3f, r0	; 63
     8f6:	cd bf       	out	0x3d, r28	; 61
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     8f8:	90 91 b9 00 	lds	r25, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
	while (!(TWCR & (1 << TWINT)));
}


void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
     8fc:	98 7f       	andi	r25, 0xF8	; 248
     8fe:	89 17       	cp	r24, r25
     900:	81 f0       	breq	.+32     	; 0x922 <checkCode+0x40>
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
     902:	8b e8       	ldi	r24, 0x8B	; 139
     904:	92 e0       	ldi	r25, 0x02	; 2
     906:	33 d1       	rcall	.+614    	; 0xb6e <writeString>
	TWISendTransmit();
}


uint8_t TWIGetStatus(){
	return (TWSR & 0xF8);
     908:	80 91 b9 00 	lds	r24, 0x00B9	; 0x8000b9 <__TEXT_REGION_LENGTH__+0x7000b9>
    } else if (__radix < 2 || __radix > 36) {
	*__s = 0;
	return __s;
    } else {
	extern char *__itoa_ncheck (int, char *, unsigned char);
	return __itoa_ncheck (__val, __s, __radix);
     90c:	88 7f       	andi	r24, 0xF8	; 248
     90e:	40 e1       	ldi	r20, 0x10	; 16
     910:	be 01       	movw	r22, r28
     912:	6f 5f       	subi	r22, 0xFF	; 255
     914:	7f 4f       	sbci	r23, 0xFF	; 255
     916:	90 e0       	ldi	r25, 0x00	; 0

void checkCode(uint8_t code){
	if (TWIGetStatus() != code){
		char buffer[255];
		writeString("\n\n\rERROR: Wrong status! Code retrieved: 0x");
		writeString( itoa( TWIGetStatus(), buffer, 16) );
     918:	de d5       	rcall	.+3004   	; 0x14d6 <__itoa_ncheck>
		writeString("\n\n\r");
     91a:	29 d1       	rcall	.+594    	; 0xb6e <writeString>
     91c:	86 eb       	ldi	r24, 0xB6	; 182
     91e:	92 e0       	ldi	r25, 0x02	; 2
     920:	26 d1       	rcall	.+588    	; 0xb6e <writeString>
	}
}
     922:	c1 50       	subi	r28, 0x01	; 1
     924:	df 4f       	sbci	r29, 0xFF	; 255
     926:	0f b6       	in	r0, 0x3f	; 63
     928:	f8 94       	cli
     92a:	de bf       	out	0x3e, r29	; 62
     92c:	0f be       	out	0x3f, r0	; 63
     92e:	cd bf       	out	0x3d, r28	; 61
     930:	df 91       	pop	r29
     932:	cf 91       	pop	r28
     934:	08 95       	ret

00000936 <writeToSlave>:


void writeToSlave(uint8_t address, uint8_t dataByte[]){
     936:	af 92       	push	r10
     938:	bf 92       	push	r11
     93a:	cf 92       	push	r12
     93c:	df 92       	push	r13
     93e:	ff 92       	push	r15
     940:	0f 93       	push	r16
     942:	1f 93       	push	r17
     944:	cf 93       	push	r28
     946:	df 93       	push	r29
     948:	c8 2f       	mov	r28, r24
     94a:	8b 01       	movw	r16, r22
	
	TWISendStart();
     94c:	0f 2e       	mov	r0, r31
     94e:	fc eb       	ldi	r31, 0xBC	; 188
     950:	cf 2e       	mov	r12, r31
     952:	d1 2c       	mov	r13, r1
     954:	f0 2d       	mov	r31, r0
     956:	85 ea       	ldi	r24, 0xA5	; 165
     958:	f6 01       	movw	r30, r12
     95a:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     95c:	bc df       	rcall	.-136    	; 0x8d6 <TWIwaitUntilReady>
	checkCode(0x08);
     95e:	88 e0       	ldi	r24, 0x08	; 8
     960:	c0 df       	rcall	.-128    	; 0x8e2 <checkCode>
	
	TWIWrite((address << 1));
     962:	cc 0f       	add	r28, r28
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     964:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     968:	85 e8       	ldi	r24, 0x85	; 133
     96a:	f6 01       	movw	r30, r12
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
     96c:	80 83       	st	Z, r24
	checkCode(0x18);
     96e:	b3 df       	rcall	.-154    	; 0x8d6 <TWIwaitUntilReady>
     970:	88 e1       	ldi	r24, 0x18	; 24
     972:	b7 df       	rcall	.-146    	; 0x8e2 <checkCode>
     974:	e8 01       	movw	r28, r16
     976:	0c 5e       	subi	r16, 0xEC	; 236
     978:	1f 4f       	sbci	r17, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     97a:	0f 2e       	mov	r0, r31
     97c:	fb eb       	ldi	r31, 0xBB	; 187
     97e:	af 2e       	mov	r10, r31
     980:	b1 2c       	mov	r11, r1
     982:	f0 2d       	mov	r31, r0
	TWISendTransmit();
     984:	0f 2e       	mov	r0, r31
     986:	f5 e8       	ldi	r31, 0x85	; 133
     988:	ff 2e       	mov	r15, r31
     98a:	f0 2d       	mov	r31, r0
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
     98c:	89 91       	ld	r24, Y+
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     98e:	f5 01       	movw	r30, r10
	TWISendTransmit();
     990:	80 83       	st	Z, r24
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
     992:	f6 01       	movw	r30, r12
     994:	f0 82       	st	Z, r15
		checkCode(0x28);
     996:	9f df       	rcall	.-194    	; 0x8d6 <TWIwaitUntilReady>
     998:	88 e2       	ldi	r24, 0x28	; 40
     99a:	a3 df       	rcall	.-186    	; 0x8e2 <checkCode>
	
	TWIWrite((address << 1));
	TWIwaitUntilReady();
	checkCode(0x18);
	
	for(int i = 0; i < DATASIZE; i++){
     99c:	c0 17       	cp	r28, r16
     99e:	d1 07       	cpc	r29, r17
     9a0:	a9 f7       	brne	.-22     	; 0x98c <writeToSlave+0x56>
		TWIWrite(dataByte[i]);
		TWIwaitUntilReady();
		checkCode(0x28);
	}
	
	TWISendStop();
     9a2:	85 e9       	ldi	r24, 0x95	; 149
     9a4:	80 93 bc 00 	sts	0x00BC, r24	; 0x8000bc <__TEXT_REGION_LENGTH__+0x7000bc>
	
}
     9a8:	df 91       	pop	r29
     9aa:	cf 91       	pop	r28
     9ac:	1f 91       	pop	r17
     9ae:	0f 91       	pop	r16
     9b0:	ff 90       	pop	r15
     9b2:	df 90       	pop	r13
     9b4:	cf 90       	pop	r12
     9b6:	bf 90       	pop	r11
     9b8:	af 90       	pop	r10
     9ba:	08 95       	ret

000009bc <rp6DataConstructor>:
	arduinoData.motorEncoderLVal = receiveDataTWI[1] * 30000 / 255;
	arduinoData.motorEncoderRVal = receiveDataTWI[2] * 30000 / 255;
}


void rp6DataConstructor(){
     9bc:	0f 93       	push	r16
     9be:	1f 93       	push	r17
     9c0:	cf 93       	push	r28
     9c2:	df 93       	push	r29
	clearSendData();
     9c4:	13 df       	rcall	.-474    	; 0x7ec <clearSendData>
	
	sendDataTWI[0] = 1;
     9c6:	c6 ee       	ldi	r28, 0xE6	; 230
     9c8:	d3 e0       	ldi	r29, 0x03	; 3
     9ca:	81 e0       	ldi	r24, 0x01	; 1
     9cc:	88 83       	st	Y, r24
	sendDataTWI[1] = rp6Data.driveSpeed;
     9ce:	0a ef       	ldi	r16, 0xFA	; 250
     9d0:	13 e0       	ldi	r17, 0x03	; 3
     9d2:	f8 01       	movw	r30, r16
     9d4:	80 81       	ld	r24, Z
     9d6:	89 83       	std	Y+1, r24	; 0x01
	sendDataTWI[2] = rp6Data.driveDirection + 1;
     9d8:	80 85       	ldd	r24, Z+8	; 0x08
     9da:	8f 5f       	subi	r24, 0xFF	; 255
     9dc:	8a 83       	std	Y+2, r24	; 0x02
	sendDataTWI[3] = rp6Data.turnDirection + 1;
     9de:	81 85       	ldd	r24, Z+9	; 0x09
     9e0:	8f 5f       	subi	r24, 0xFF	; 255
     9e2:	8b 83       	std	Y+3, r24	; 0x03
	sendDataTWI[4] = rp6Data.accelerationRate * 255 / 2000;
     9e4:	82 85       	ldd	r24, Z+10	; 0x0a
     9e6:	93 85       	ldd	r25, Z+11	; 0x0b
     9e8:	4f ef       	ldi	r20, 0xFF	; 255
     9ea:	48 9f       	mul	r20, r24
     9ec:	90 01       	movw	r18, r0
     9ee:	49 9f       	mul	r20, r25
     9f0:	30 0d       	add	r19, r0
     9f2:	11 24       	eor	r1, r1
     9f4:	32 95       	swap	r19
     9f6:	22 95       	swap	r18
     9f8:	2f 70       	andi	r18, 0x0F	; 15
     9fa:	23 27       	eor	r18, r19
     9fc:	3f 70       	andi	r19, 0x0F	; 15
     9fe:	23 27       	eor	r18, r19
     a00:	a3 e6       	ldi	r26, 0x63	; 99
     a02:	b0 e1       	ldi	r27, 0x10	; 16
     a04:	f8 d4       	rcall	.+2544   	; 0x13f6 <__umulhisi3>
     a06:	96 95       	lsr	r25
     a08:	87 95       	ror	r24
     a0a:	96 95       	lsr	r25
     a0c:	87 95       	ror	r24
     a0e:	96 95       	lsr	r25
     a10:	87 95       	ror	r24
     a12:	8c 83       	std	Y+4, r24	; 0x04
	sendDataTWI[5] = rp6Data.turnRate * 255 / 8000;
     a14:	84 85       	ldd	r24, Z+12	; 0x0c
     a16:	95 85       	ldd	r25, Z+13	; 0x0d
     a18:	48 9f       	mul	r20, r24
     a1a:	90 01       	movw	r18, r0
     a1c:	49 9f       	mul	r20, r25
     a1e:	30 0d       	add	r19, r0
     a20:	11 24       	eor	r1, r1
     a22:	00 24       	eor	r0, r0
     a24:	22 0f       	add	r18, r18
     a26:	33 1f       	adc	r19, r19
     a28:	00 1c       	adc	r0, r0
     a2a:	22 0f       	add	r18, r18
     a2c:	33 1f       	adc	r19, r19
     a2e:	00 1c       	adc	r0, r0
     a30:	23 2f       	mov	r18, r19
     a32:	30 2d       	mov	r19, r0
     a34:	a9 e1       	ldi	r26, 0x19	; 25
     a36:	b4 e0       	ldi	r27, 0x04	; 4
     a38:	de d4       	rcall	.+2492   	; 0x13f6 <__umulhisi3>
     a3a:	96 95       	lsr	r25
     a3c:	87 95       	ror	r24
     a3e:	8d 83       	std	Y+5, r24	; 0x05
	sendDataTWI[6] = rp6Data.driveSpeedThreshold * 255 / 6000;
     a40:	86 85       	ldd	r24, Z+14	; 0x0e
     a42:	97 85       	ldd	r25, Z+15	; 0x0f
     a44:	48 9f       	mul	r20, r24
     a46:	90 01       	movw	r18, r0
     a48:	49 9f       	mul	r20, r25
     a4a:	30 0d       	add	r19, r0
     a4c:	11 24       	eor	r1, r1
     a4e:	32 95       	swap	r19
     a50:	22 95       	swap	r18
     a52:	2f 70       	andi	r18, 0x0F	; 15
     a54:	23 27       	eor	r18, r19
     a56:	3f 70       	andi	r19, 0x0F	; 15
     a58:	23 27       	eor	r18, r19
     a5a:	a9 ed       	ldi	r26, 0xD9	; 217
     a5c:	b5 e1       	ldi	r27, 0x15	; 21
     a5e:	cb d4       	rcall	.+2454   	; 0x13f6 <__umulhisi3>
     a60:	96 95       	lsr	r25
     a62:	87 95       	ror	r24
     a64:	92 95       	swap	r25
     a66:	82 95       	swap	r24
     a68:	8f 70       	andi	r24, 0x0F	; 15
     a6a:	89 27       	eor	r24, r25
     a6c:	9f 70       	andi	r25, 0x0F	; 15
     a6e:	89 27       	eor	r24, r25
     a70:	8e 83       	std	Y+6, r24	; 0x06
	sendDataTWI[7] = rp6Data.updateSpeed / 2000;
     a72:	60 89       	ldd	r22, Z+16	; 0x10
     a74:	71 89       	ldd	r23, Z+17	; 0x11
     a76:	82 89       	ldd	r24, Z+18	; 0x12
     a78:	93 89       	ldd	r25, Z+19	; 0x13
     a7a:	20 ed       	ldi	r18, 0xD0	; 208
     a7c:	37 e0       	ldi	r19, 0x07	; 7
     a7e:	40 e0       	ldi	r20, 0x00	; 0
     a80:	50 e0       	ldi	r21, 0x00	; 0
     a82:	97 d4       	rcall	.+2350   	; 0x13b2 <__udivmodsi4>
     a84:	2f 83       	std	Y+7, r18	; 0x07
	sendDataTWI[8] = rp6Data.enableBeeper;
     a86:	f8 01       	movw	r30, r16
     a88:	84 89       	ldd	r24, Z+20	; 0x14
     a8a:	88 87       	std	Y+8, r24	; 0x08
     a8c:	ef ee       	ldi	r30, 0xEF	; 239
     a8e:	f3 e0       	ldi	r31, 0x03	; 3
     a90:	8a ef       	ldi	r24, 0xFA	; 250
     a92:	93 e0       	ldi	r25, 0x03	; 3
	
	for(int i = 9; i < DATASIZE; i++){
		sendDataTWI[i] = 0;
     a94:	11 92       	st	Z+, r1
	sendDataTWI[5] = rp6Data.turnRate * 255 / 8000;
	sendDataTWI[6] = rp6Data.driveSpeedThreshold * 255 / 6000;
	sendDataTWI[7] = rp6Data.updateSpeed / 2000;
	sendDataTWI[8] = rp6Data.enableBeeper;
	
	for(int i = 9; i < DATASIZE; i++){
     a96:	e8 17       	cp	r30, r24
     a98:	f9 07       	cpc	r31, r25
		sendDataTWI[i] = 0;
	}
	
	writeToSlave(RP6_ADDRESS, sendDataTWI);
     a9a:	e1 f7       	brne	.-8      	; 0xa94 <rp6DataConstructor+0xd8>
     a9c:	66 ee       	ldi	r22, 0xE6	; 230
     a9e:	73 e0       	ldi	r23, 0x03	; 3
     aa0:	83 e0       	ldi	r24, 0x03	; 3
     aa2:	49 df       	rcall	.-366    	; 0x936 <writeToSlave>
}
     aa4:	df 91       	pop	r29
     aa6:	cf 91       	pop	r28
     aa8:	1f 91       	pop	r17
     aaa:	0f 91       	pop	r16
     aac:	08 95       	ret

00000aae <readFromSlave>:
	TWISendStop();
	
}


void readFromSlave(uint8_t address){
     aae:	0f 93       	push	r16
     ab0:	1f 93       	push	r17
     ab2:	cf 93       	push	r28
     ab4:	c8 2f       	mov	r28, r24
	
	TWISendStart();
     ab6:	0c eb       	ldi	r16, 0xBC	; 188
     ab8:	10 e0       	ldi	r17, 0x00	; 0
     aba:	85 ea       	ldi	r24, 0xA5	; 165
     abc:	f8 01       	movw	r30, r16
     abe:	80 83       	st	Z, r24
	TWIwaitUntilReady();
     ac0:	0a df       	rcall	.-492    	; 0x8d6 <TWIwaitUntilReady>
	checkCode(0x08);
     ac2:	88 e0       	ldi	r24, 0x08	; 8
     ac4:	0e df       	rcall	.-484    	; 0x8e2 <checkCode>
	
	TWIWrite( (address << 1) + 1 );
     ac6:	cc 0f       	add	r28, r28
     ac8:	cf 5f       	subi	r28, 0xFF	; 255
}


void TWIWrite(uint8_t u8data)
{
	TWDR = u8data;
     aca:	c0 93 bb 00 	sts	0x00BB, r28	; 0x8000bb <__TEXT_REGION_LENGTH__+0x7000bb>
	TWISendTransmit();
     ace:	85 e8       	ldi	r24, 0x85	; 133
     ad0:	f8 01       	movw	r30, r16
	TWISendStart();
	TWIwaitUntilReady();
	checkCode(0x08);
	
	TWIWrite( (address << 1) + 1 );
	TWIwaitUntilReady();
     ad2:	80 83       	st	Z, r24
     ad4:	00 df       	rcall	.-512    	; 0x8d6 <TWIwaitUntilReady>
	
}
     ad6:	cf 91       	pop	r28
     ad8:	1f 91       	pop	r17
     ada:	0f 91       	pop	r16
     adc:	08 95       	ret

00000ade <__vector_15>:
		break;
	}
}


ISR(TIMER2_OVF_vect){
     ade:	1f 92       	push	r1
     ae0:	0f 92       	push	r0
     ae2:	0f b6       	in	r0, 0x3f	; 63
     ae4:	0f 92       	push	r0
     ae6:	11 24       	eor	r1, r1
     ae8:	0b b6       	in	r0, 0x3b	; 59
     aea:	0f 92       	push	r0
     aec:	2f 93       	push	r18
     aee:	3f 93       	push	r19
     af0:	4f 93       	push	r20
     af2:	5f 93       	push	r21
     af4:	6f 93       	push	r22
     af6:	7f 93       	push	r23
     af8:	8f 93       	push	r24
     afa:	9f 93       	push	r25
     afc:	af 93       	push	r26
     afe:	bf 93       	push	r27
     b00:	ef 93       	push	r30
     b02:	ff 93       	push	r31
	static int counter = 0;
	
	if(counter == 6){
     b04:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <__data_end>
     b08:	90 91 bb 02 	lds	r25, 0x02BB	; 0x8002bb <__data_end+0x1>
     b0c:	86 30       	cpi	r24, 0x06	; 6
     b0e:	91 05       	cpc	r25, r1
     b10:	11 f4       	brne	.+4      	; 0xb16 <__vector_15+0x38>
		rp6DataConstructor();
     b12:	54 df       	rcall	.-344    	; 0x9bc <rp6DataConstructor>
     b14:	08 c0       	rjmp	.+16     	; 0xb26 <__vector_15+0x48>
		}else if(counter >= 12){
     b16:	0c 97       	sbiw	r24, 0x0c	; 12
     b18:	34 f0       	brlt	.+12     	; 0xb26 <__vector_15+0x48>
		readFromSlave(RP6_ADDRESS);
     b1a:	83 e0       	ldi	r24, 0x03	; 3
     b1c:	c8 df       	rcall	.-112    	; 0xaae <readFromSlave>
		counter = 0;
     b1e:	10 92 bb 02 	sts	0x02BB, r1	; 0x8002bb <__data_end+0x1>
     b22:	10 92 ba 02 	sts	0x02BA, r1	; 0x8002ba <__data_end>
	}
	
	counter++;
     b26:	80 91 ba 02 	lds	r24, 0x02BA	; 0x8002ba <__data_end>
     b2a:	90 91 bb 02 	lds	r25, 0x02BB	; 0x8002bb <__data_end+0x1>
     b2e:	01 96       	adiw	r24, 0x01	; 1
     b30:	90 93 bb 02 	sts	0x02BB, r25	; 0x8002bb <__data_end+0x1>
     b34:	80 93 ba 02 	sts	0x02BA, r24	; 0x8002ba <__data_end>
}
     b38:	ff 91       	pop	r31
     b3a:	ef 91       	pop	r30
     b3c:	bf 91       	pop	r27
     b3e:	af 91       	pop	r26
     b40:	9f 91       	pop	r25
     b42:	8f 91       	pop	r24
     b44:	7f 91       	pop	r23
     b46:	6f 91       	pop	r22
     b48:	5f 91       	pop	r21
     b4a:	4f 91       	pop	r20
     b4c:	3f 91       	pop	r19
     b4e:	2f 91       	pop	r18
     b50:	0f 90       	pop	r0
     b52:	0b be       	out	0x3b, r0	; 59
     b54:	0f 90       	pop	r0
     b56:	0f be       	out	0x3f, r0	; 63
     b58:	0f 90       	pop	r0
     b5a:	1f 90       	pop	r1
     b5c:	18 95       	reti

00000b5e <writeChar>:
#include "matthijs_testFunctions.h"
#include <avr/io.h>
#include <stdlib.h>

void writeChar(char x) { //Sends char x over serial communication
	while(~UCSR0A & (1 << UDRE0)); //Wait until UDRE0 is set
     b5e:	e0 ec       	ldi	r30, 0xC0	; 192
     b60:	f0 e0       	ldi	r31, 0x00	; 0
     b62:	90 81       	ld	r25, Z
     b64:	95 ff       	sbrs	r25, 5
     b66:	fd cf       	rjmp	.-6      	; 0xb62 <writeChar+0x4>
	UDR0 = x;
     b68:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7000c6>
     b6c:	08 95       	ret

00000b6e <writeString>:
}

void writeString(char st[]) { //Sends char array over serial communication. Dependent on writeChar()
     b6e:	0f 93       	push	r16
     b70:	1f 93       	push	r17
     b72:	cf 93       	push	r28
     b74:	fc 01       	movw	r30, r24
	for(uint8_t i = 0 ; st[i] != 0 ; i++) {
     b76:	80 81       	ld	r24, Z
     b78:	88 23       	and	r24, r24
     b7a:	51 f0       	breq	.+20     	; 0xb90 <writeString+0x22>
     b7c:	8f 01       	movw	r16, r30
     b7e:	c0 e0       	ldi	r28, 0x00	; 0
		writeChar( st[i] );
     b80:	ee df       	rcall	.-36     	; 0xb5e <writeChar>
	while(~UCSR0A & (1 << UDRE0)); //Wait until UDRE0 is set
	UDR0 = x;
}

void writeString(char st[]) { //Sends char array over serial communication. Dependent on writeChar()
	for(uint8_t i = 0 ; st[i] != 0 ; i++) {
     b82:	cf 5f       	subi	r28, 0xFF	; 255
     b84:	f8 01       	movw	r30, r16
     b86:	ec 0f       	add	r30, r28
     b88:	f1 1d       	adc	r31, r1
     b8a:	80 81       	ld	r24, Z
     b8c:	81 11       	cpse	r24, r1
     b8e:	f8 cf       	rjmp	.-16     	; 0xb80 <writeString+0x12>
		writeChar( st[i] );
	}
}
     b90:	cf 91       	pop	r28
     b92:	1f 91       	pop	r17
     b94:	0f 91       	pop	r16
     b96:	08 95       	ret

00000b98 <writeInt>:

void writeInt(int i) { //Sends integer i over serial communication. Dependent on writeString()
     b98:	cf 93       	push	r28
     b9a:	df 93       	push	r29
     b9c:	cd b7       	in	r28, 0x3d	; 61
     b9e:	de b7       	in	r29, 0x3e	; 62
     ba0:	28 97       	sbiw	r28, 0x08	; 8
     ba2:	0f b6       	in	r0, 0x3f	; 63
     ba4:	f8 94       	cli
     ba6:	de bf       	out	0x3e, r29	; 62
     ba8:	0f be       	out	0x3f, r0	; 63
     baa:	cd bf       	out	0x3d, r28	; 61
     bac:	4a e0       	ldi	r20, 0x0A	; 10
     bae:	be 01       	movw	r22, r28
     bb0:	6f 5f       	subi	r22, 0xFF	; 255
     bb2:	7f 4f       	sbci	r23, 0xFF	; 255
     bb4:	90 d4       	rcall	.+2336   	; 0x14d6 <__itoa_ncheck>
	char buffer[8];
	itoa(i,buffer,10); //Converts i to a string
	writeString(buffer);
     bb6:	ce 01       	movw	r24, r28
     bb8:	01 96       	adiw	r24, 0x01	; 1
     bba:	d9 df       	rcall	.-78     	; 0xb6e <writeString>
}
     bbc:	28 96       	adiw	r28, 0x08	; 8
     bbe:	0f b6       	in	r0, 0x3f	; 63
     bc0:	f8 94       	cli
     bc2:	de bf       	out	0x3e, r29	; 62
     bc4:	0f be       	out	0x3f, r0	; 63
     bc6:	cd bf       	out	0x3d, r28	; 61
     bc8:	df 91       	pop	r29
     bca:	cf 91       	pop	r28
     bcc:	08 95       	ret

00000bce <initTimer>:
#define PORT_REGISTER PORTL
#define PIN_REGISTER PINL

void initTimer(){
	
	TCCR1B |= (1 << CS11); //prescaler 8
     bce:	e1 e8       	ldi	r30, 0x81	; 129
     bd0:	f0 e0       	ldi	r31, 0x00	; 0
     bd2:	80 81       	ld	r24, Z
     bd4:	82 60       	ori	r24, 0x02	; 2
     bd6:	80 83       	st	Z, r24
	TCNT1 = 0;
     bd8:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     bdc:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     be0:	08 95       	ret

00000be2 <ultrasonicSensor>:
}

int ultrasonicSensor() {
     be2:	cf 93       	push	r28
     be4:	df 93       	push	r29
	
	TCNT1 = 0; //Reset value of TCNT1
     be6:	10 92 85 00 	sts	0x0085, r1	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
     bea:	10 92 84 00 	sts	0x0084, r1	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
	unsigned long pulseStartTime = 0; //Used to record value of TCNT1 when the pulse starts
	//Values to prevent infinite loops:
	unsigned long numLoops = 0;
	unsigned long maxLoops = 40000;
	
	DDR_REGISTER |= (1 << TRIGGER); //Set TRIGGER pin as output
     bee:	aa e0       	ldi	r26, 0x0A	; 10
     bf0:	b1 e0       	ldi	r27, 0x01	; 1
     bf2:	8c 91       	ld	r24, X
     bf4:	82 60       	ori	r24, 0x02	; 2
     bf6:	8c 93       	st	X, r24
	
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low for 2 us to ensure a clean pulse
     bf8:	eb e0       	ldi	r30, 0x0B	; 11
     bfa:	f1 e0       	ldi	r31, 0x01	; 1
     bfc:	80 81       	ld	r24, Z
     bfe:	8d 7f       	andi	r24, 0xFD	; 253
     c00:	80 83       	st	Z, r24
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c02:	2a e0       	ldi	r18, 0x0A	; 10
     c04:	2a 95       	dec	r18
     c06:	f1 f7       	brne	.-4      	; 0xc04 <ultrasonicSensor+0x22>
     c08:	00 c0       	rjmp	.+0      	; 0xc0a <ultrasonicSensor+0x28>
	_delay_us(2);
	PORT_REGISTER |= (1 << TRIGGER); //Send pulse for 5 us
     c0a:	80 81       	ld	r24, Z
     c0c:	82 60       	ori	r24, 0x02	; 2
     c0e:	80 83       	st	Z, r24
     c10:	8a e1       	ldi	r24, 0x1A	; 26
     c12:	8a 95       	dec	r24
     c14:	f1 f7       	brne	.-4      	; 0xc12 <ultrasonicSensor+0x30>
     c16:	00 c0       	rjmp	.+0      	; 0xc18 <ultrasonicSensor+0x36>
	_delay_us(5);
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low
     c18:	80 81       	ld	r24, Z
     c1a:	8d 7f       	andi	r24, 0xFD	; 253
     c1c:	80 83       	st	Z, r24
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input
     c1e:	8c 91       	ld	r24, X
     c20:	8d 7f       	andi	r24, 0xFD	; 253
     c22:	8c 93       	st	X, r24
	
	TCNT1 = 0; //Reset value of TCNT1
	
	unsigned long pulseStartTime = 0; //Used to record value of TCNT1 when the pulse starts
	//Values to prevent infinite loops:
	unsigned long numLoops = 0;
     c24:	80 e0       	ldi	r24, 0x00	; 0
     c26:	90 e0       	ldi	r25, 0x00	; 0
     c28:	dc 01       	movw	r26, r24
	_delay_us(5);
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input

	while (PIN_REGISTER & (1 << ECHO)) { //Wait for any old pulse to end
     c2a:	e9 e0       	ldi	r30, 0x09	; 9
     c2c:	f1 e0       	ldi	r31, 0x01	; 1
     c2e:	0a c0       	rjmp	.+20     	; 0xc44 <ultrasonicSensor+0x62>
		if(numLoops++ == maxLoops) {
     c30:	01 96       	adiw	r24, 0x01	; 1
     c32:	a1 1d       	adc	r26, r1
     c34:	b1 1d       	adc	r27, r1
     c36:	81 34       	cpi	r24, 0x41	; 65
     c38:	2c e9       	ldi	r18, 0x9C	; 156
     c3a:	92 07       	cpc	r25, r18
     c3c:	a1 05       	cpc	r26, r1
     c3e:	b1 05       	cpc	r27, r1
     c40:	09 f4       	brne	.+2      	; 0xc44 <ultrasonicSensor+0x62>
     c42:	45 c0       	rjmp	.+138    	; 0xcce <ultrasonicSensor+0xec>
	_delay_us(5);
	PORT_REGISTER &= ~(1 << TRIGGER); //Set TRIGGER pin to low
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input

	while (PIN_REGISTER & (1 << ECHO)) { //Wait for any old pulse to end
     c44:	20 81       	ld	r18, Z
     c46:	21 fd       	sbrc	r18, 1
     c48:	f3 cf       	rjmp	.-26     	; 0xc30 <ultrasonicSensor+0x4e>
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	
	while (~PIN_REGISTER & (1 << ECHO)) { //Wait until PING))) returns a pulse
     c4a:	e9 e0       	ldi	r30, 0x09	; 9
     c4c:	f1 e0       	ldi	r31, 0x01	; 1
     c4e:	0d c0       	rjmp	.+26     	; 0xc6a <ultrasonicSensor+0x88>
		if(numLoops++ == maxLoops) {
     c50:	ac 01       	movw	r20, r24
     c52:	bd 01       	movw	r22, r26
     c54:	4f 5f       	subi	r20, 0xFF	; 255
     c56:	5f 4f       	sbci	r21, 0xFF	; 255
     c58:	6f 4f       	sbci	r22, 0xFF	; 255
     c5a:	7f 4f       	sbci	r23, 0xFF	; 255
     c5c:	80 34       	cpi	r24, 0x40	; 64
     c5e:	9c 49       	sbci	r25, 0x9C	; 156
     c60:	a1 05       	cpc	r26, r1
     c62:	b1 05       	cpc	r27, r1
     c64:	b9 f1       	breq	.+110    	; 0xcd4 <ultrasonicSensor+0xf2>
     c66:	db 01       	movw	r26, r22
     c68:	ca 01       	movw	r24, r20
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	
	while (~PIN_REGISTER & (1 << ECHO)) { //Wait until PING))) returns a pulse
     c6a:	20 81       	ld	r18, Z
     c6c:	21 ff       	sbrs	r18, 1
     c6e:	f0 cf       	rjmp	.-32     	; 0xc50 <ultrasonicSensor+0x6e>
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	
	pulseStartTime = TCNT1; //Set pulseStartTime to current TCNT1 value
     c70:	c0 91 84 00 	lds	r28, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     c74:	d0 91 85 00 	lds	r29, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
	
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
     c78:	e9 e0       	ldi	r30, 0x09	; 9
     c7a:	f1 e0       	ldi	r31, 0x01	; 1
     c7c:	0d c0       	rjmp	.+26     	; 0xc98 <ultrasonicSensor+0xb6>
		if(numLoops++ == maxLoops) {
     c7e:	ac 01       	movw	r20, r24
     c80:	bd 01       	movw	r22, r26
     c82:	4f 5f       	subi	r20, 0xFF	; 255
     c84:	5f 4f       	sbci	r21, 0xFF	; 255
     c86:	6f 4f       	sbci	r22, 0xFF	; 255
     c88:	7f 4f       	sbci	r23, 0xFF	; 255
     c8a:	80 34       	cpi	r24, 0x40	; 64
     c8c:	9c 49       	sbci	r25, 0x9C	; 156
     c8e:	a1 05       	cpc	r26, r1
     c90:	b1 05       	cpc	r27, r1
     c92:	19 f1       	breq	.+70     	; 0xcda <ultrasonicSensor+0xf8>
     c94:	db 01       	movw	r26, r22
     c96:	ca 01       	movw	r24, r20
		}
	}
	
	pulseStartTime = TCNT1; //Set pulseStartTime to current TCNT1 value
	
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
     c98:	20 81       	ld	r18, Z
     c9a:	21 fd       	sbrc	r18, 1
     c9c:	f0 cf       	rjmp	.-32     	; 0xc7e <ultrasonicSensor+0x9c>
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	return cyclesToMm(TCNT1 - pulseStartTime); //Calculate and return distance in mm
     c9e:	20 91 84 00 	lds	r18, 0x0084	; 0x800084 <__TEXT_REGION_LENGTH__+0x700084>
     ca2:	30 91 85 00 	lds	r19, 0x0085	; 0x800085 <__TEXT_REGION_LENGTH__+0x700085>
}

int cyclesToMm(unsigned long cycles) {
	
	return ((cycles * SPEED_OF_SOUND) / 20000) - CORRECTION;
     ca6:	c9 01       	movw	r24, r18
     ca8:	a0 e0       	ldi	r26, 0x00	; 0
     caa:	b0 e0       	ldi	r27, 0x00	; 0
     cac:	9c 01       	movw	r18, r24
     cae:	ad 01       	movw	r20, r26
     cb0:	2c 1b       	sub	r18, r28
     cb2:	3d 0b       	sbc	r19, r29
     cb4:	41 09       	sbc	r20, r1
     cb6:	51 09       	sbc	r21, r1
     cb8:	a3 eb       	ldi	r26, 0xB3	; 179
     cba:	b6 e0       	ldi	r27, 0x06	; 6
     cbc:	ab d3       	rcall	.+1878   	; 0x1414 <__muluhisi3>
     cbe:	20 e2       	ldi	r18, 0x20	; 32
     cc0:	3e e4       	ldi	r19, 0x4E	; 78
     cc2:	40 e0       	ldi	r20, 0x00	; 0
     cc4:	50 e0       	ldi	r21, 0x00	; 0
     cc6:	75 d3       	rcall	.+1770   	; 0x13b2 <__udivmodsi4>
     cc8:	c9 01       	movw	r24, r18
     cca:	05 97       	sbiw	r24, 0x05	; 5
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
		if(numLoops++ == maxLoops) {
			return 0;
		}
	}
	return cyclesToMm(TCNT1 - pulseStartTime); //Calculate and return distance in mm
     ccc:	08 c0       	rjmp	.+16     	; 0xcde <ultrasonicSensor+0xfc>
	
	DDR_REGISTER &= ~(1 << ECHO); //Set ECHO pin as input

	while (PIN_REGISTER & (1 << ECHO)) { //Wait for any old pulse to end
		if(numLoops++ == maxLoops) {
			return 0;
     cce:	80 e0       	ldi	r24, 0x00	; 0
     cd0:	90 e0       	ldi	r25, 0x00	; 0
     cd2:	05 c0       	rjmp	.+10     	; 0xcde <ultrasonicSensor+0xfc>
		}
	}
	
	while (~PIN_REGISTER & (1 << ECHO)) { //Wait until PING))) returns a pulse
		if(numLoops++ == maxLoops) {
			return 0;
     cd4:	80 e0       	ldi	r24, 0x00	; 0
     cd6:	90 e0       	ldi	r25, 0x00	; 0
     cd8:	02 c0       	rjmp	.+4      	; 0xcde <ultrasonicSensor+0xfc>
	
	pulseStartTime = TCNT1; //Set pulseStartTime to current TCNT1 value
	
	while (PIN_REGISTER & (1 << ECHO)) { //Wait until the pulse from PING))) ends
		if(numLoops++ == maxLoops) {
			return 0;
     cda:	80 e0       	ldi	r24, 0x00	; 0
     cdc:	90 e0       	ldi	r25, 0x00	; 0
		}
	}
	return cyclesToMm(TCNT1 - pulseStartTime); //Calculate and return distance in mm
}
     cde:	df 91       	pop	r29
     ce0:	cf 91       	pop	r28
     ce2:	08 95       	ret

00000ce4 <__subsf3>:
     ce4:	50 58       	subi	r21, 0x80	; 128

00000ce6 <__addsf3>:
     ce6:	bb 27       	eor	r27, r27
     ce8:	aa 27       	eor	r26, r26
     cea:	0e d0       	rcall	.+28     	; 0xd08 <__addsf3x>
     cec:	e5 c0       	rjmp	.+458    	; 0xeb8 <__fp_round>
     cee:	d6 d0       	rcall	.+428    	; 0xe9c <__fp_pscA>
     cf0:	30 f0       	brcs	.+12     	; 0xcfe <__addsf3+0x18>
     cf2:	db d0       	rcall	.+438    	; 0xeaa <__fp_pscB>
     cf4:	20 f0       	brcs	.+8      	; 0xcfe <__addsf3+0x18>
     cf6:	31 f4       	brne	.+12     	; 0xd04 <__addsf3+0x1e>
     cf8:	9f 3f       	cpi	r25, 0xFF	; 255
     cfa:	11 f4       	brne	.+4      	; 0xd00 <__addsf3+0x1a>
     cfc:	1e f4       	brtc	.+6      	; 0xd04 <__addsf3+0x1e>
     cfe:	cb c0       	rjmp	.+406    	; 0xe96 <__fp_nan>
     d00:	0e f4       	brtc	.+2      	; 0xd04 <__addsf3+0x1e>
     d02:	e0 95       	com	r30
     d04:	e7 fb       	bst	r30, 7
     d06:	c1 c0       	rjmp	.+386    	; 0xe8a <__fp_inf>

00000d08 <__addsf3x>:
     d08:	e9 2f       	mov	r30, r25
     d0a:	e7 d0       	rcall	.+462    	; 0xeda <__fp_split3>
     d0c:	80 f3       	brcs	.-32     	; 0xcee <__addsf3+0x8>
     d0e:	ba 17       	cp	r27, r26
     d10:	62 07       	cpc	r22, r18
     d12:	73 07       	cpc	r23, r19
     d14:	84 07       	cpc	r24, r20
     d16:	95 07       	cpc	r25, r21
     d18:	18 f0       	brcs	.+6      	; 0xd20 <__addsf3x+0x18>
     d1a:	71 f4       	brne	.+28     	; 0xd38 <__addsf3x+0x30>
     d1c:	9e f5       	brtc	.+102    	; 0xd84 <__addsf3x+0x7c>
     d1e:	ff c0       	rjmp	.+510    	; 0xf1e <__fp_zero>
     d20:	0e f4       	brtc	.+2      	; 0xd24 <__addsf3x+0x1c>
     d22:	e0 95       	com	r30
     d24:	0b 2e       	mov	r0, r27
     d26:	ba 2f       	mov	r27, r26
     d28:	a0 2d       	mov	r26, r0
     d2a:	0b 01       	movw	r0, r22
     d2c:	b9 01       	movw	r22, r18
     d2e:	90 01       	movw	r18, r0
     d30:	0c 01       	movw	r0, r24
     d32:	ca 01       	movw	r24, r20
     d34:	a0 01       	movw	r20, r0
     d36:	11 24       	eor	r1, r1
     d38:	ff 27       	eor	r31, r31
     d3a:	59 1b       	sub	r21, r25
     d3c:	99 f0       	breq	.+38     	; 0xd64 <__addsf3x+0x5c>
     d3e:	59 3f       	cpi	r21, 0xF9	; 249
     d40:	50 f4       	brcc	.+20     	; 0xd56 <__addsf3x+0x4e>
     d42:	50 3e       	cpi	r21, 0xE0	; 224
     d44:	68 f1       	brcs	.+90     	; 0xda0 <__addsf3x+0x98>
     d46:	1a 16       	cp	r1, r26
     d48:	f0 40       	sbci	r31, 0x00	; 0
     d4a:	a2 2f       	mov	r26, r18
     d4c:	23 2f       	mov	r18, r19
     d4e:	34 2f       	mov	r19, r20
     d50:	44 27       	eor	r20, r20
     d52:	58 5f       	subi	r21, 0xF8	; 248
     d54:	f3 cf       	rjmp	.-26     	; 0xd3c <__addsf3x+0x34>
     d56:	46 95       	lsr	r20
     d58:	37 95       	ror	r19
     d5a:	27 95       	ror	r18
     d5c:	a7 95       	ror	r26
     d5e:	f0 40       	sbci	r31, 0x00	; 0
     d60:	53 95       	inc	r21
     d62:	c9 f7       	brne	.-14     	; 0xd56 <__addsf3x+0x4e>
     d64:	7e f4       	brtc	.+30     	; 0xd84 <__addsf3x+0x7c>
     d66:	1f 16       	cp	r1, r31
     d68:	ba 0b       	sbc	r27, r26
     d6a:	62 0b       	sbc	r22, r18
     d6c:	73 0b       	sbc	r23, r19
     d6e:	84 0b       	sbc	r24, r20
     d70:	ba f0       	brmi	.+46     	; 0xda0 <__addsf3x+0x98>
     d72:	91 50       	subi	r25, 0x01	; 1
     d74:	a1 f0       	breq	.+40     	; 0xd9e <__addsf3x+0x96>
     d76:	ff 0f       	add	r31, r31
     d78:	bb 1f       	adc	r27, r27
     d7a:	66 1f       	adc	r22, r22
     d7c:	77 1f       	adc	r23, r23
     d7e:	88 1f       	adc	r24, r24
     d80:	c2 f7       	brpl	.-16     	; 0xd72 <__addsf3x+0x6a>
     d82:	0e c0       	rjmp	.+28     	; 0xda0 <__addsf3x+0x98>
     d84:	ba 0f       	add	r27, r26
     d86:	62 1f       	adc	r22, r18
     d88:	73 1f       	adc	r23, r19
     d8a:	84 1f       	adc	r24, r20
     d8c:	48 f4       	brcc	.+18     	; 0xda0 <__addsf3x+0x98>
     d8e:	87 95       	ror	r24
     d90:	77 95       	ror	r23
     d92:	67 95       	ror	r22
     d94:	b7 95       	ror	r27
     d96:	f7 95       	ror	r31
     d98:	9e 3f       	cpi	r25, 0xFE	; 254
     d9a:	08 f0       	brcs	.+2      	; 0xd9e <__addsf3x+0x96>
     d9c:	b3 cf       	rjmp	.-154    	; 0xd04 <__addsf3+0x1e>
     d9e:	93 95       	inc	r25
     da0:	88 0f       	add	r24, r24
     da2:	08 f0       	brcs	.+2      	; 0xda6 <__addsf3x+0x9e>
     da4:	99 27       	eor	r25, r25
     da6:	ee 0f       	add	r30, r30
     da8:	97 95       	ror	r25
     daa:	87 95       	ror	r24
     dac:	08 95       	ret

00000dae <__fixsfsi>:
     dae:	04 d0       	rcall	.+8      	; 0xdb8 <__fixunssfsi>
     db0:	68 94       	set
     db2:	b1 11       	cpse	r27, r1
     db4:	b5 c0       	rjmp	.+362    	; 0xf20 <__fp_szero>
     db6:	08 95       	ret

00000db8 <__fixunssfsi>:
     db8:	98 d0       	rcall	.+304    	; 0xeea <__fp_splitA>
     dba:	88 f0       	brcs	.+34     	; 0xdde <__fixunssfsi+0x26>
     dbc:	9f 57       	subi	r25, 0x7F	; 127
     dbe:	90 f0       	brcs	.+36     	; 0xde4 <__fixunssfsi+0x2c>
     dc0:	b9 2f       	mov	r27, r25
     dc2:	99 27       	eor	r25, r25
     dc4:	b7 51       	subi	r27, 0x17	; 23
     dc6:	a0 f0       	brcs	.+40     	; 0xdf0 <__fixunssfsi+0x38>
     dc8:	d1 f0       	breq	.+52     	; 0xdfe <__fixunssfsi+0x46>
     dca:	66 0f       	add	r22, r22
     dcc:	77 1f       	adc	r23, r23
     dce:	88 1f       	adc	r24, r24
     dd0:	99 1f       	adc	r25, r25
     dd2:	1a f0       	brmi	.+6      	; 0xdda <__fixunssfsi+0x22>
     dd4:	ba 95       	dec	r27
     dd6:	c9 f7       	brne	.-14     	; 0xdca <__fixunssfsi+0x12>
     dd8:	12 c0       	rjmp	.+36     	; 0xdfe <__fixunssfsi+0x46>
     dda:	b1 30       	cpi	r27, 0x01	; 1
     ddc:	81 f0       	breq	.+32     	; 0xdfe <__fixunssfsi+0x46>
     dde:	9f d0       	rcall	.+318    	; 0xf1e <__fp_zero>
     de0:	b1 e0       	ldi	r27, 0x01	; 1
     de2:	08 95       	ret
     de4:	9c c0       	rjmp	.+312    	; 0xf1e <__fp_zero>
     de6:	67 2f       	mov	r22, r23
     de8:	78 2f       	mov	r23, r24
     dea:	88 27       	eor	r24, r24
     dec:	b8 5f       	subi	r27, 0xF8	; 248
     dee:	39 f0       	breq	.+14     	; 0xdfe <__fixunssfsi+0x46>
     df0:	b9 3f       	cpi	r27, 0xF9	; 249
     df2:	cc f3       	brlt	.-14     	; 0xde6 <__fixunssfsi+0x2e>
     df4:	86 95       	lsr	r24
     df6:	77 95       	ror	r23
     df8:	67 95       	ror	r22
     dfa:	b3 95       	inc	r27
     dfc:	d9 f7       	brne	.-10     	; 0xdf4 <__fixunssfsi+0x3c>
     dfe:	3e f4       	brtc	.+14     	; 0xe0e <__fixunssfsi+0x56>
     e00:	90 95       	com	r25
     e02:	80 95       	com	r24
     e04:	70 95       	com	r23
     e06:	61 95       	neg	r22
     e08:	7f 4f       	sbci	r23, 0xFF	; 255
     e0a:	8f 4f       	sbci	r24, 0xFF	; 255
     e0c:	9f 4f       	sbci	r25, 0xFF	; 255
     e0e:	08 95       	ret

00000e10 <__floatunsisf>:
     e10:	e8 94       	clt
     e12:	09 c0       	rjmp	.+18     	; 0xe26 <__floatsisf+0x12>

00000e14 <__floatsisf>:
     e14:	97 fb       	bst	r25, 7
     e16:	3e f4       	brtc	.+14     	; 0xe26 <__floatsisf+0x12>
     e18:	90 95       	com	r25
     e1a:	80 95       	com	r24
     e1c:	70 95       	com	r23
     e1e:	61 95       	neg	r22
     e20:	7f 4f       	sbci	r23, 0xFF	; 255
     e22:	8f 4f       	sbci	r24, 0xFF	; 255
     e24:	9f 4f       	sbci	r25, 0xFF	; 255
     e26:	99 23       	and	r25, r25
     e28:	a9 f0       	breq	.+42     	; 0xe54 <__floatsisf+0x40>
     e2a:	f9 2f       	mov	r31, r25
     e2c:	96 e9       	ldi	r25, 0x96	; 150
     e2e:	bb 27       	eor	r27, r27
     e30:	93 95       	inc	r25
     e32:	f6 95       	lsr	r31
     e34:	87 95       	ror	r24
     e36:	77 95       	ror	r23
     e38:	67 95       	ror	r22
     e3a:	b7 95       	ror	r27
     e3c:	f1 11       	cpse	r31, r1
     e3e:	f8 cf       	rjmp	.-16     	; 0xe30 <__floatsisf+0x1c>
     e40:	fa f4       	brpl	.+62     	; 0xe80 <__floatsisf+0x6c>
     e42:	bb 0f       	add	r27, r27
     e44:	11 f4       	brne	.+4      	; 0xe4a <__floatsisf+0x36>
     e46:	60 ff       	sbrs	r22, 0
     e48:	1b c0       	rjmp	.+54     	; 0xe80 <__floatsisf+0x6c>
     e4a:	6f 5f       	subi	r22, 0xFF	; 255
     e4c:	7f 4f       	sbci	r23, 0xFF	; 255
     e4e:	8f 4f       	sbci	r24, 0xFF	; 255
     e50:	9f 4f       	sbci	r25, 0xFF	; 255
     e52:	16 c0       	rjmp	.+44     	; 0xe80 <__floatsisf+0x6c>
     e54:	88 23       	and	r24, r24
     e56:	11 f0       	breq	.+4      	; 0xe5c <__floatsisf+0x48>
     e58:	96 e9       	ldi	r25, 0x96	; 150
     e5a:	11 c0       	rjmp	.+34     	; 0xe7e <__floatsisf+0x6a>
     e5c:	77 23       	and	r23, r23
     e5e:	21 f0       	breq	.+8      	; 0xe68 <__floatsisf+0x54>
     e60:	9e e8       	ldi	r25, 0x8E	; 142
     e62:	87 2f       	mov	r24, r23
     e64:	76 2f       	mov	r23, r22
     e66:	05 c0       	rjmp	.+10     	; 0xe72 <__floatsisf+0x5e>
     e68:	66 23       	and	r22, r22
     e6a:	71 f0       	breq	.+28     	; 0xe88 <__floatsisf+0x74>
     e6c:	96 e8       	ldi	r25, 0x86	; 134
     e6e:	86 2f       	mov	r24, r22
     e70:	70 e0       	ldi	r23, 0x00	; 0
     e72:	60 e0       	ldi	r22, 0x00	; 0
     e74:	2a f0       	brmi	.+10     	; 0xe80 <__floatsisf+0x6c>
     e76:	9a 95       	dec	r25
     e78:	66 0f       	add	r22, r22
     e7a:	77 1f       	adc	r23, r23
     e7c:	88 1f       	adc	r24, r24
     e7e:	da f7       	brpl	.-10     	; 0xe76 <__floatsisf+0x62>
     e80:	88 0f       	add	r24, r24
     e82:	96 95       	lsr	r25
     e84:	87 95       	ror	r24
     e86:	97 f9       	bld	r25, 7
     e88:	08 95       	ret

00000e8a <__fp_inf>:
     e8a:	97 f9       	bld	r25, 7
     e8c:	9f 67       	ori	r25, 0x7F	; 127
     e8e:	80 e8       	ldi	r24, 0x80	; 128
     e90:	70 e0       	ldi	r23, 0x00	; 0
     e92:	60 e0       	ldi	r22, 0x00	; 0
     e94:	08 95       	ret

00000e96 <__fp_nan>:
     e96:	9f ef       	ldi	r25, 0xFF	; 255
     e98:	80 ec       	ldi	r24, 0xC0	; 192
     e9a:	08 95       	ret

00000e9c <__fp_pscA>:
     e9c:	00 24       	eor	r0, r0
     e9e:	0a 94       	dec	r0
     ea0:	16 16       	cp	r1, r22
     ea2:	17 06       	cpc	r1, r23
     ea4:	18 06       	cpc	r1, r24
     ea6:	09 06       	cpc	r0, r25
     ea8:	08 95       	ret

00000eaa <__fp_pscB>:
     eaa:	00 24       	eor	r0, r0
     eac:	0a 94       	dec	r0
     eae:	12 16       	cp	r1, r18
     eb0:	13 06       	cpc	r1, r19
     eb2:	14 06       	cpc	r1, r20
     eb4:	05 06       	cpc	r0, r21
     eb6:	08 95       	ret

00000eb8 <__fp_round>:
     eb8:	09 2e       	mov	r0, r25
     eba:	03 94       	inc	r0
     ebc:	00 0c       	add	r0, r0
     ebe:	11 f4       	brne	.+4      	; 0xec4 <__fp_round+0xc>
     ec0:	88 23       	and	r24, r24
     ec2:	52 f0       	brmi	.+20     	; 0xed8 <__fp_round+0x20>
     ec4:	bb 0f       	add	r27, r27
     ec6:	40 f4       	brcc	.+16     	; 0xed8 <__fp_round+0x20>
     ec8:	bf 2b       	or	r27, r31
     eca:	11 f4       	brne	.+4      	; 0xed0 <__fp_round+0x18>
     ecc:	60 ff       	sbrs	r22, 0
     ece:	04 c0       	rjmp	.+8      	; 0xed8 <__fp_round+0x20>
     ed0:	6f 5f       	subi	r22, 0xFF	; 255
     ed2:	7f 4f       	sbci	r23, 0xFF	; 255
     ed4:	8f 4f       	sbci	r24, 0xFF	; 255
     ed6:	9f 4f       	sbci	r25, 0xFF	; 255
     ed8:	08 95       	ret

00000eda <__fp_split3>:
     eda:	57 fd       	sbrc	r21, 7
     edc:	90 58       	subi	r25, 0x80	; 128
     ede:	44 0f       	add	r20, r20
     ee0:	55 1f       	adc	r21, r21
     ee2:	59 f0       	breq	.+22     	; 0xefa <__fp_splitA+0x10>
     ee4:	5f 3f       	cpi	r21, 0xFF	; 255
     ee6:	71 f0       	breq	.+28     	; 0xf04 <__fp_splitA+0x1a>
     ee8:	47 95       	ror	r20

00000eea <__fp_splitA>:
     eea:	88 0f       	add	r24, r24
     eec:	97 fb       	bst	r25, 7
     eee:	99 1f       	adc	r25, r25
     ef0:	61 f0       	breq	.+24     	; 0xf0a <__fp_splitA+0x20>
     ef2:	9f 3f       	cpi	r25, 0xFF	; 255
     ef4:	79 f0       	breq	.+30     	; 0xf14 <__fp_splitA+0x2a>
     ef6:	87 95       	ror	r24
     ef8:	08 95       	ret
     efa:	12 16       	cp	r1, r18
     efc:	13 06       	cpc	r1, r19
     efe:	14 06       	cpc	r1, r20
     f00:	55 1f       	adc	r21, r21
     f02:	f2 cf       	rjmp	.-28     	; 0xee8 <__fp_split3+0xe>
     f04:	46 95       	lsr	r20
     f06:	f1 df       	rcall	.-30     	; 0xeea <__fp_splitA>
     f08:	08 c0       	rjmp	.+16     	; 0xf1a <__fp_splitA+0x30>
     f0a:	16 16       	cp	r1, r22
     f0c:	17 06       	cpc	r1, r23
     f0e:	18 06       	cpc	r1, r24
     f10:	99 1f       	adc	r25, r25
     f12:	f1 cf       	rjmp	.-30     	; 0xef6 <__fp_splitA+0xc>
     f14:	86 95       	lsr	r24
     f16:	71 05       	cpc	r23, r1
     f18:	61 05       	cpc	r22, r1
     f1a:	08 94       	sec
     f1c:	08 95       	ret

00000f1e <__fp_zero>:
     f1e:	e8 94       	clt

00000f20 <__fp_szero>:
     f20:	bb 27       	eor	r27, r27
     f22:	66 27       	eor	r22, r22
     f24:	77 27       	eor	r23, r23
     f26:	cb 01       	movw	r24, r22
     f28:	97 f9       	bld	r25, 7
     f2a:	08 95       	ret

00000f2c <pow>:
     f2c:	fa 01       	movw	r30, r20
     f2e:	ee 0f       	add	r30, r30
     f30:	ff 1f       	adc	r31, r31
     f32:	30 96       	adiw	r30, 0x00	; 0
     f34:	21 05       	cpc	r18, r1
     f36:	31 05       	cpc	r19, r1
     f38:	99 f1       	breq	.+102    	; 0xfa0 <pow+0x74>
     f3a:	61 15       	cp	r22, r1
     f3c:	71 05       	cpc	r23, r1
     f3e:	61 f4       	brne	.+24     	; 0xf58 <pow+0x2c>
     f40:	80 38       	cpi	r24, 0x80	; 128
     f42:	bf e3       	ldi	r27, 0x3F	; 63
     f44:	9b 07       	cpc	r25, r27
     f46:	49 f1       	breq	.+82     	; 0xf9a <pow+0x6e>
     f48:	68 94       	set
     f4a:	90 38       	cpi	r25, 0x80	; 128
     f4c:	81 05       	cpc	r24, r1
     f4e:	61 f0       	breq	.+24     	; 0xf68 <pow+0x3c>
     f50:	80 38       	cpi	r24, 0x80	; 128
     f52:	bf ef       	ldi	r27, 0xFF	; 255
     f54:	9b 07       	cpc	r25, r27
     f56:	41 f0       	breq	.+16     	; 0xf68 <pow+0x3c>
     f58:	99 23       	and	r25, r25
     f5a:	42 f5       	brpl	.+80     	; 0xfac <pow+0x80>
     f5c:	ff 3f       	cpi	r31, 0xFF	; 255
     f5e:	e1 05       	cpc	r30, r1
     f60:	31 05       	cpc	r19, r1
     f62:	21 05       	cpc	r18, r1
     f64:	11 f1       	breq	.+68     	; 0xfaa <pow+0x7e>
     f66:	e8 94       	clt
     f68:	08 94       	sec
     f6a:	e7 95       	ror	r30
     f6c:	d9 01       	movw	r26, r18
     f6e:	aa 23       	and	r26, r26
     f70:	29 f4       	brne	.+10     	; 0xf7c <pow+0x50>
     f72:	ab 2f       	mov	r26, r27
     f74:	be 2f       	mov	r27, r30
     f76:	f8 5f       	subi	r31, 0xF8	; 248
     f78:	d0 f3       	brcs	.-12     	; 0xf6e <pow+0x42>
     f7a:	10 c0       	rjmp	.+32     	; 0xf9c <pow+0x70>
     f7c:	ff 5f       	subi	r31, 0xFF	; 255
     f7e:	70 f4       	brcc	.+28     	; 0xf9c <pow+0x70>
     f80:	a6 95       	lsr	r26
     f82:	e0 f7       	brcc	.-8      	; 0xf7c <pow+0x50>
     f84:	f7 39       	cpi	r31, 0x97	; 151
     f86:	50 f0       	brcs	.+20     	; 0xf9c <pow+0x70>
     f88:	19 f0       	breq	.+6      	; 0xf90 <pow+0x64>
     f8a:	ff 3a       	cpi	r31, 0xAF	; 175
     f8c:	38 f4       	brcc	.+14     	; 0xf9c <pow+0x70>
     f8e:	9f 77       	andi	r25, 0x7F	; 127
     f90:	9f 93       	push	r25
     f92:	0c d0       	rcall	.+24     	; 0xfac <pow+0x80>
     f94:	0f 90       	pop	r0
     f96:	07 fc       	sbrc	r0, 7
     f98:	90 58       	subi	r25, 0x80	; 128
     f9a:	08 95       	ret
     f9c:	3e f0       	brts	.+14     	; 0xfac <pow+0x80>
     f9e:	7b cf       	rjmp	.-266    	; 0xe96 <__fp_nan>
     fa0:	60 e0       	ldi	r22, 0x00	; 0
     fa2:	70 e0       	ldi	r23, 0x00	; 0
     fa4:	80 e8       	ldi	r24, 0x80	; 128
     fa6:	9f e3       	ldi	r25, 0x3F	; 63
     fa8:	08 95       	ret
     faa:	4f e7       	ldi	r20, 0x7F	; 127
     fac:	9f 77       	andi	r25, 0x7F	; 127
     fae:	5f 93       	push	r21
     fb0:	4f 93       	push	r20
     fb2:	3f 93       	push	r19
     fb4:	2f 93       	push	r18
     fb6:	9e d0       	rcall	.+316    	; 0x10f4 <log>
     fb8:	2f 91       	pop	r18
     fba:	3f 91       	pop	r19
     fbc:	4f 91       	pop	r20
     fbe:	5f 91       	pop	r21
     fc0:	0c d1       	rcall	.+536    	; 0x11da <__mulsf3>
     fc2:	05 c0       	rjmp	.+10     	; 0xfce <exp>
     fc4:	19 f4       	brne	.+6      	; 0xfcc <pow+0xa0>
     fc6:	0e f0       	brts	.+2      	; 0xfca <pow+0x9e>
     fc8:	60 cf       	rjmp	.-320    	; 0xe8a <__fp_inf>
     fca:	a9 cf       	rjmp	.-174    	; 0xf1e <__fp_zero>
     fcc:	64 cf       	rjmp	.-312    	; 0xe96 <__fp_nan>

00000fce <exp>:
     fce:	8d df       	rcall	.-230    	; 0xeea <__fp_splitA>
     fd0:	c8 f3       	brcs	.-14     	; 0xfc4 <pow+0x98>
     fd2:	96 38       	cpi	r25, 0x86	; 134
     fd4:	c0 f7       	brcc	.-16     	; 0xfc6 <pow+0x9a>
     fd6:	07 f8       	bld	r0, 7
     fd8:	0f 92       	push	r0
     fda:	e8 94       	clt
     fdc:	2b e3       	ldi	r18, 0x3B	; 59
     fde:	3a ea       	ldi	r19, 0xAA	; 170
     fe0:	48 eb       	ldi	r20, 0xB8	; 184
     fe2:	5f e7       	ldi	r21, 0x7F	; 127
     fe4:	08 d1       	rcall	.+528    	; 0x11f6 <__mulsf3_pse>
     fe6:	0f 92       	push	r0
     fe8:	0f 92       	push	r0
     fea:	0f 92       	push	r0
     fec:	4d b7       	in	r20, 0x3d	; 61
     fee:	5e b7       	in	r21, 0x3e	; 62
     ff0:	0f 92       	push	r0
     ff2:	c0 d0       	rcall	.+384    	; 0x1174 <modf>
     ff4:	e4 ee       	ldi	r30, 0xE4	; 228
     ff6:	f0 e0       	ldi	r31, 0x00	; 0
     ff8:	16 d0       	rcall	.+44     	; 0x1026 <__fp_powser>
     ffa:	4f 91       	pop	r20
     ffc:	5f 91       	pop	r21
     ffe:	ef 91       	pop	r30
    1000:	ff 91       	pop	r31
    1002:	e5 95       	asr	r30
    1004:	ee 1f       	adc	r30, r30
    1006:	ff 1f       	adc	r31, r31
    1008:	49 f0       	breq	.+18     	; 0x101c <exp+0x4e>
    100a:	fe 57       	subi	r31, 0x7E	; 126
    100c:	e0 68       	ori	r30, 0x80	; 128
    100e:	44 27       	eor	r20, r20
    1010:	ee 0f       	add	r30, r30
    1012:	44 1f       	adc	r20, r20
    1014:	fa 95       	dec	r31
    1016:	e1 f7       	brne	.-8      	; 0x1010 <exp+0x42>
    1018:	41 95       	neg	r20
    101a:	55 0b       	sbc	r21, r21
    101c:	32 d0       	rcall	.+100    	; 0x1082 <ldexp>
    101e:	0f 90       	pop	r0
    1020:	07 fe       	sbrs	r0, 7
    1022:	26 c0       	rjmp	.+76     	; 0x1070 <inverse>
    1024:	08 95       	ret

00001026 <__fp_powser>:
    1026:	df 93       	push	r29
    1028:	cf 93       	push	r28
    102a:	1f 93       	push	r17
    102c:	0f 93       	push	r16
    102e:	ff 92       	push	r15
    1030:	ef 92       	push	r14
    1032:	df 92       	push	r13
    1034:	7b 01       	movw	r14, r22
    1036:	8c 01       	movw	r16, r24
    1038:	68 94       	set
    103a:	05 c0       	rjmp	.+10     	; 0x1046 <__fp_powser+0x20>
    103c:	da 2e       	mov	r13, r26
    103e:	ef 01       	movw	r28, r30
    1040:	d8 d0       	rcall	.+432    	; 0x11f2 <__mulsf3x>
    1042:	fe 01       	movw	r30, r28
    1044:	e8 94       	clt
    1046:	a5 91       	lpm	r26, Z+
    1048:	25 91       	lpm	r18, Z+
    104a:	35 91       	lpm	r19, Z+
    104c:	45 91       	lpm	r20, Z+
    104e:	55 91       	lpm	r21, Z+
    1050:	ae f3       	brts	.-22     	; 0x103c <__fp_powser+0x16>
    1052:	ef 01       	movw	r28, r30
    1054:	59 de       	rcall	.-846    	; 0xd08 <__addsf3x>
    1056:	fe 01       	movw	r30, r28
    1058:	97 01       	movw	r18, r14
    105a:	a8 01       	movw	r20, r16
    105c:	da 94       	dec	r13
    105e:	79 f7       	brne	.-34     	; 0x103e <__fp_powser+0x18>
    1060:	df 90       	pop	r13
    1062:	ef 90       	pop	r14
    1064:	ff 90       	pop	r15
    1066:	0f 91       	pop	r16
    1068:	1f 91       	pop	r17
    106a:	cf 91       	pop	r28
    106c:	df 91       	pop	r29
    106e:	08 95       	ret

00001070 <inverse>:
    1070:	9b 01       	movw	r18, r22
    1072:	ac 01       	movw	r20, r24
    1074:	60 e0       	ldi	r22, 0x00	; 0
    1076:	70 e0       	ldi	r23, 0x00	; 0
    1078:	80 e8       	ldi	r24, 0x80	; 128
    107a:	9f e3       	ldi	r25, 0x3F	; 63
    107c:	11 c1       	rjmp	.+546    	; 0x12a0 <__divsf3>
    107e:	05 cf       	rjmp	.-502    	; 0xe8a <__fp_inf>
    1080:	77 c1       	rjmp	.+750    	; 0x1370 <__fp_mpack>

00001082 <ldexp>:
    1082:	33 df       	rcall	.-410    	; 0xeea <__fp_splitA>
    1084:	e8 f3       	brcs	.-6      	; 0x1080 <inverse+0x10>
    1086:	99 23       	and	r25, r25
    1088:	d9 f3       	breq	.-10     	; 0x1080 <inverse+0x10>
    108a:	94 0f       	add	r25, r20
    108c:	51 1d       	adc	r21, r1
    108e:	bb f3       	brvs	.-18     	; 0x107e <inverse+0xe>
    1090:	91 50       	subi	r25, 0x01	; 1
    1092:	50 40       	sbci	r21, 0x00	; 0
    1094:	94 f0       	brlt	.+36     	; 0x10ba <ldexp+0x38>
    1096:	59 f0       	breq	.+22     	; 0x10ae <ldexp+0x2c>
    1098:	88 23       	and	r24, r24
    109a:	32 f0       	brmi	.+12     	; 0x10a8 <ldexp+0x26>
    109c:	66 0f       	add	r22, r22
    109e:	77 1f       	adc	r23, r23
    10a0:	88 1f       	adc	r24, r24
    10a2:	91 50       	subi	r25, 0x01	; 1
    10a4:	50 40       	sbci	r21, 0x00	; 0
    10a6:	c1 f7       	brne	.-16     	; 0x1098 <ldexp+0x16>
    10a8:	9e 3f       	cpi	r25, 0xFE	; 254
    10aa:	51 05       	cpc	r21, r1
    10ac:	44 f7       	brge	.-48     	; 0x107e <inverse+0xe>
    10ae:	88 0f       	add	r24, r24
    10b0:	91 1d       	adc	r25, r1
    10b2:	96 95       	lsr	r25
    10b4:	87 95       	ror	r24
    10b6:	97 f9       	bld	r25, 7
    10b8:	08 95       	ret
    10ba:	5f 3f       	cpi	r21, 0xFF	; 255
    10bc:	ac f0       	brlt	.+42     	; 0x10e8 <ldexp+0x66>
    10be:	98 3e       	cpi	r25, 0xE8	; 232
    10c0:	9c f0       	brlt	.+38     	; 0x10e8 <ldexp+0x66>
    10c2:	bb 27       	eor	r27, r27
    10c4:	86 95       	lsr	r24
    10c6:	77 95       	ror	r23
    10c8:	67 95       	ror	r22
    10ca:	b7 95       	ror	r27
    10cc:	08 f4       	brcc	.+2      	; 0x10d0 <ldexp+0x4e>
    10ce:	b1 60       	ori	r27, 0x01	; 1
    10d0:	93 95       	inc	r25
    10d2:	c1 f7       	brne	.-16     	; 0x10c4 <ldexp+0x42>
    10d4:	bb 0f       	add	r27, r27
    10d6:	58 f7       	brcc	.-42     	; 0x10ae <ldexp+0x2c>
    10d8:	11 f4       	brne	.+4      	; 0x10de <ldexp+0x5c>
    10da:	60 ff       	sbrs	r22, 0
    10dc:	e8 cf       	rjmp	.-48     	; 0x10ae <ldexp+0x2c>
    10de:	6f 5f       	subi	r22, 0xFF	; 255
    10e0:	7f 4f       	sbci	r23, 0xFF	; 255
    10e2:	8f 4f       	sbci	r24, 0xFF	; 255
    10e4:	9f 4f       	sbci	r25, 0xFF	; 255
    10e6:	e3 cf       	rjmp	.-58     	; 0x10ae <ldexp+0x2c>
    10e8:	1b cf       	rjmp	.-458    	; 0xf20 <__fp_szero>
    10ea:	0e f0       	brts	.+2      	; 0x10ee <ldexp+0x6c>
    10ec:	41 c1       	rjmp	.+642    	; 0x1370 <__fp_mpack>
    10ee:	d3 ce       	rjmp	.-602    	; 0xe96 <__fp_nan>
    10f0:	68 94       	set
    10f2:	cb ce       	rjmp	.-618    	; 0xe8a <__fp_inf>

000010f4 <log>:
    10f4:	fa de       	rcall	.-524    	; 0xeea <__fp_splitA>
    10f6:	c8 f3       	brcs	.-14     	; 0x10ea <ldexp+0x68>
    10f8:	99 23       	and	r25, r25
    10fa:	d1 f3       	breq	.-12     	; 0x10f0 <ldexp+0x6e>
    10fc:	c6 f3       	brts	.-16     	; 0x10ee <ldexp+0x6c>
    10fe:	df 93       	push	r29
    1100:	cf 93       	push	r28
    1102:	1f 93       	push	r17
    1104:	0f 93       	push	r16
    1106:	ff 92       	push	r15
    1108:	c9 2f       	mov	r28, r25
    110a:	dd 27       	eor	r29, r29
    110c:	88 23       	and	r24, r24
    110e:	2a f0       	brmi	.+10     	; 0x111a <log+0x26>
    1110:	21 97       	sbiw	r28, 0x01	; 1
    1112:	66 0f       	add	r22, r22
    1114:	77 1f       	adc	r23, r23
    1116:	88 1f       	adc	r24, r24
    1118:	da f7       	brpl	.-10     	; 0x1110 <log+0x1c>
    111a:	20 e0       	ldi	r18, 0x00	; 0
    111c:	30 e0       	ldi	r19, 0x00	; 0
    111e:	40 e8       	ldi	r20, 0x80	; 128
    1120:	5f eb       	ldi	r21, 0xBF	; 191
    1122:	9f e3       	ldi	r25, 0x3F	; 63
    1124:	88 39       	cpi	r24, 0x98	; 152
    1126:	20 f0       	brcs	.+8      	; 0x1130 <log+0x3c>
    1128:	80 3e       	cpi	r24, 0xE0	; 224
    112a:	30 f0       	brcs	.+12     	; 0x1138 <log+0x44>
    112c:	21 96       	adiw	r28, 0x01	; 1
    112e:	8f 77       	andi	r24, 0x7F	; 127
    1130:	da dd       	rcall	.-1100   	; 0xce6 <__addsf3>
    1132:	ec e0       	ldi	r30, 0x0C	; 12
    1134:	f1 e0       	ldi	r31, 0x01	; 1
    1136:	03 c0       	rjmp	.+6      	; 0x113e <log+0x4a>
    1138:	d6 dd       	rcall	.-1108   	; 0xce6 <__addsf3>
    113a:	e9 e3       	ldi	r30, 0x39	; 57
    113c:	f1 e0       	ldi	r31, 0x01	; 1
    113e:	73 df       	rcall	.-282    	; 0x1026 <__fp_powser>
    1140:	8b 01       	movw	r16, r22
    1142:	be 01       	movw	r22, r28
    1144:	ec 01       	movw	r28, r24
    1146:	fb 2e       	mov	r15, r27
    1148:	6f 57       	subi	r22, 0x7F	; 127
    114a:	71 09       	sbc	r23, r1
    114c:	75 95       	asr	r23
    114e:	77 1f       	adc	r23, r23
    1150:	88 0b       	sbc	r24, r24
    1152:	99 0b       	sbc	r25, r25
    1154:	5f de       	rcall	.-834    	; 0xe14 <__floatsisf>
    1156:	28 e1       	ldi	r18, 0x18	; 24
    1158:	32 e7       	ldi	r19, 0x72	; 114
    115a:	41 e3       	ldi	r20, 0x31	; 49
    115c:	5f e3       	ldi	r21, 0x3F	; 63
    115e:	49 d0       	rcall	.+146    	; 0x11f2 <__mulsf3x>
    1160:	af 2d       	mov	r26, r15
    1162:	98 01       	movw	r18, r16
    1164:	ae 01       	movw	r20, r28
    1166:	ff 90       	pop	r15
    1168:	0f 91       	pop	r16
    116a:	1f 91       	pop	r17
    116c:	cf 91       	pop	r28
    116e:	df 91       	pop	r29
    1170:	cb dd       	rcall	.-1130   	; 0xd08 <__addsf3x>
    1172:	a2 ce       	rjmp	.-700    	; 0xeb8 <__fp_round>

00001174 <modf>:
    1174:	fa 01       	movw	r30, r20
    1176:	dc 01       	movw	r26, r24
    1178:	aa 0f       	add	r26, r26
    117a:	bb 1f       	adc	r27, r27
    117c:	9b 01       	movw	r18, r22
    117e:	ac 01       	movw	r20, r24
    1180:	bf 57       	subi	r27, 0x7F	; 127
    1182:	28 f4       	brcc	.+10     	; 0x118e <modf+0x1a>
    1184:	22 27       	eor	r18, r18
    1186:	33 27       	eor	r19, r19
    1188:	44 27       	eor	r20, r20
    118a:	50 78       	andi	r21, 0x80	; 128
    118c:	1f c0       	rjmp	.+62     	; 0x11cc <modf+0x58>
    118e:	b7 51       	subi	r27, 0x17	; 23
    1190:	88 f4       	brcc	.+34     	; 0x11b4 <modf+0x40>
    1192:	ab 2f       	mov	r26, r27
    1194:	00 24       	eor	r0, r0
    1196:	46 95       	lsr	r20
    1198:	37 95       	ror	r19
    119a:	27 95       	ror	r18
    119c:	01 1c       	adc	r0, r1
    119e:	a3 95       	inc	r26
    11a0:	d2 f3       	brmi	.-12     	; 0x1196 <modf+0x22>
    11a2:	00 20       	and	r0, r0
    11a4:	69 f0       	breq	.+26     	; 0x11c0 <modf+0x4c>
    11a6:	22 0f       	add	r18, r18
    11a8:	33 1f       	adc	r19, r19
    11aa:	44 1f       	adc	r20, r20
    11ac:	b3 95       	inc	r27
    11ae:	da f3       	brmi	.-10     	; 0x11a6 <modf+0x32>
    11b0:	0d d0       	rcall	.+26     	; 0x11cc <modf+0x58>
    11b2:	98 cd       	rjmp	.-1232   	; 0xce4 <__subsf3>
    11b4:	61 30       	cpi	r22, 0x01	; 1
    11b6:	71 05       	cpc	r23, r1
    11b8:	a0 e8       	ldi	r26, 0x80	; 128
    11ba:	8a 07       	cpc	r24, r26
    11bc:	b9 46       	sbci	r27, 0x69	; 105
    11be:	30 f4       	brcc	.+12     	; 0x11cc <modf+0x58>
    11c0:	9b 01       	movw	r18, r22
    11c2:	ac 01       	movw	r20, r24
    11c4:	66 27       	eor	r22, r22
    11c6:	77 27       	eor	r23, r23
    11c8:	88 27       	eor	r24, r24
    11ca:	90 78       	andi	r25, 0x80	; 128
    11cc:	30 96       	adiw	r30, 0x00	; 0
    11ce:	21 f0       	breq	.+8      	; 0x11d8 <modf+0x64>
    11d0:	20 83       	st	Z, r18
    11d2:	31 83       	std	Z+1, r19	; 0x01
    11d4:	42 83       	std	Z+2, r20	; 0x02
    11d6:	53 83       	std	Z+3, r21	; 0x03
    11d8:	08 95       	ret

000011da <__mulsf3>:
    11da:	0b d0       	rcall	.+22     	; 0x11f2 <__mulsf3x>
    11dc:	6d ce       	rjmp	.-806    	; 0xeb8 <__fp_round>
    11de:	5e de       	rcall	.-836    	; 0xe9c <__fp_pscA>
    11e0:	28 f0       	brcs	.+10     	; 0x11ec <__mulsf3+0x12>
    11e2:	63 de       	rcall	.-826    	; 0xeaa <__fp_pscB>
    11e4:	18 f0       	brcs	.+6      	; 0x11ec <__mulsf3+0x12>
    11e6:	95 23       	and	r25, r21
    11e8:	09 f0       	breq	.+2      	; 0x11ec <__mulsf3+0x12>
    11ea:	4f ce       	rjmp	.-866    	; 0xe8a <__fp_inf>
    11ec:	54 ce       	rjmp	.-856    	; 0xe96 <__fp_nan>
    11ee:	11 24       	eor	r1, r1
    11f0:	97 ce       	rjmp	.-722    	; 0xf20 <__fp_szero>

000011f2 <__mulsf3x>:
    11f2:	73 de       	rcall	.-794    	; 0xeda <__fp_split3>
    11f4:	a0 f3       	brcs	.-24     	; 0x11de <__mulsf3+0x4>

000011f6 <__mulsf3_pse>:
    11f6:	95 9f       	mul	r25, r21
    11f8:	d1 f3       	breq	.-12     	; 0x11ee <__mulsf3+0x14>
    11fa:	95 0f       	add	r25, r21
    11fc:	50 e0       	ldi	r21, 0x00	; 0
    11fe:	55 1f       	adc	r21, r21
    1200:	62 9f       	mul	r22, r18
    1202:	f0 01       	movw	r30, r0
    1204:	72 9f       	mul	r23, r18
    1206:	bb 27       	eor	r27, r27
    1208:	f0 0d       	add	r31, r0
    120a:	b1 1d       	adc	r27, r1
    120c:	63 9f       	mul	r22, r19
    120e:	aa 27       	eor	r26, r26
    1210:	f0 0d       	add	r31, r0
    1212:	b1 1d       	adc	r27, r1
    1214:	aa 1f       	adc	r26, r26
    1216:	64 9f       	mul	r22, r20
    1218:	66 27       	eor	r22, r22
    121a:	b0 0d       	add	r27, r0
    121c:	a1 1d       	adc	r26, r1
    121e:	66 1f       	adc	r22, r22
    1220:	82 9f       	mul	r24, r18
    1222:	22 27       	eor	r18, r18
    1224:	b0 0d       	add	r27, r0
    1226:	a1 1d       	adc	r26, r1
    1228:	62 1f       	adc	r22, r18
    122a:	73 9f       	mul	r23, r19
    122c:	b0 0d       	add	r27, r0
    122e:	a1 1d       	adc	r26, r1
    1230:	62 1f       	adc	r22, r18
    1232:	83 9f       	mul	r24, r19
    1234:	a0 0d       	add	r26, r0
    1236:	61 1d       	adc	r22, r1
    1238:	22 1f       	adc	r18, r18
    123a:	74 9f       	mul	r23, r20
    123c:	33 27       	eor	r19, r19
    123e:	a0 0d       	add	r26, r0
    1240:	61 1d       	adc	r22, r1
    1242:	23 1f       	adc	r18, r19
    1244:	84 9f       	mul	r24, r20
    1246:	60 0d       	add	r22, r0
    1248:	21 1d       	adc	r18, r1
    124a:	82 2f       	mov	r24, r18
    124c:	76 2f       	mov	r23, r22
    124e:	6a 2f       	mov	r22, r26
    1250:	11 24       	eor	r1, r1
    1252:	9f 57       	subi	r25, 0x7F	; 127
    1254:	50 40       	sbci	r21, 0x00	; 0
    1256:	8a f0       	brmi	.+34     	; 0x127a <__mulsf3_pse+0x84>
    1258:	e1 f0       	breq	.+56     	; 0x1292 <__mulsf3_pse+0x9c>
    125a:	88 23       	and	r24, r24
    125c:	4a f0       	brmi	.+18     	; 0x1270 <__mulsf3_pse+0x7a>
    125e:	ee 0f       	add	r30, r30
    1260:	ff 1f       	adc	r31, r31
    1262:	bb 1f       	adc	r27, r27
    1264:	66 1f       	adc	r22, r22
    1266:	77 1f       	adc	r23, r23
    1268:	88 1f       	adc	r24, r24
    126a:	91 50       	subi	r25, 0x01	; 1
    126c:	50 40       	sbci	r21, 0x00	; 0
    126e:	a9 f7       	brne	.-22     	; 0x125a <__mulsf3_pse+0x64>
    1270:	9e 3f       	cpi	r25, 0xFE	; 254
    1272:	51 05       	cpc	r21, r1
    1274:	70 f0       	brcs	.+28     	; 0x1292 <__mulsf3_pse+0x9c>
    1276:	09 ce       	rjmp	.-1006   	; 0xe8a <__fp_inf>
    1278:	53 ce       	rjmp	.-858    	; 0xf20 <__fp_szero>
    127a:	5f 3f       	cpi	r21, 0xFF	; 255
    127c:	ec f3       	brlt	.-6      	; 0x1278 <__mulsf3_pse+0x82>
    127e:	98 3e       	cpi	r25, 0xE8	; 232
    1280:	dc f3       	brlt	.-10     	; 0x1278 <__mulsf3_pse+0x82>
    1282:	86 95       	lsr	r24
    1284:	77 95       	ror	r23
    1286:	67 95       	ror	r22
    1288:	b7 95       	ror	r27
    128a:	f7 95       	ror	r31
    128c:	e7 95       	ror	r30
    128e:	9f 5f       	subi	r25, 0xFF	; 255
    1290:	c1 f7       	brne	.-16     	; 0x1282 <__mulsf3_pse+0x8c>
    1292:	fe 2b       	or	r31, r30
    1294:	88 0f       	add	r24, r24
    1296:	91 1d       	adc	r25, r1
    1298:	96 95       	lsr	r25
    129a:	87 95       	ror	r24
    129c:	97 f9       	bld	r25, 7
    129e:	08 95       	ret

000012a0 <__divsf3>:
    12a0:	0c d0       	rcall	.+24     	; 0x12ba <__divsf3x>
    12a2:	0a ce       	rjmp	.-1004   	; 0xeb8 <__fp_round>
    12a4:	02 de       	rcall	.-1020   	; 0xeaa <__fp_pscB>
    12a6:	40 f0       	brcs	.+16     	; 0x12b8 <__divsf3+0x18>
    12a8:	f9 dd       	rcall	.-1038   	; 0xe9c <__fp_pscA>
    12aa:	30 f0       	brcs	.+12     	; 0x12b8 <__divsf3+0x18>
    12ac:	21 f4       	brne	.+8      	; 0x12b6 <__divsf3+0x16>
    12ae:	5f 3f       	cpi	r21, 0xFF	; 255
    12b0:	19 f0       	breq	.+6      	; 0x12b8 <__divsf3+0x18>
    12b2:	eb cd       	rjmp	.-1066   	; 0xe8a <__fp_inf>
    12b4:	51 11       	cpse	r21, r1
    12b6:	34 ce       	rjmp	.-920    	; 0xf20 <__fp_szero>
    12b8:	ee cd       	rjmp	.-1060   	; 0xe96 <__fp_nan>

000012ba <__divsf3x>:
    12ba:	0f de       	rcall	.-994    	; 0xeda <__fp_split3>
    12bc:	98 f3       	brcs	.-26     	; 0x12a4 <__divsf3+0x4>

000012be <__divsf3_pse>:
    12be:	99 23       	and	r25, r25
    12c0:	c9 f3       	breq	.-14     	; 0x12b4 <__divsf3+0x14>
    12c2:	55 23       	and	r21, r21
    12c4:	b1 f3       	breq	.-20     	; 0x12b2 <__divsf3+0x12>
    12c6:	95 1b       	sub	r25, r21
    12c8:	55 0b       	sbc	r21, r21
    12ca:	bb 27       	eor	r27, r27
    12cc:	aa 27       	eor	r26, r26
    12ce:	62 17       	cp	r22, r18
    12d0:	73 07       	cpc	r23, r19
    12d2:	84 07       	cpc	r24, r20
    12d4:	38 f0       	brcs	.+14     	; 0x12e4 <__divsf3_pse+0x26>
    12d6:	9f 5f       	subi	r25, 0xFF	; 255
    12d8:	5f 4f       	sbci	r21, 0xFF	; 255
    12da:	22 0f       	add	r18, r18
    12dc:	33 1f       	adc	r19, r19
    12de:	44 1f       	adc	r20, r20
    12e0:	aa 1f       	adc	r26, r26
    12e2:	a9 f3       	breq	.-22     	; 0x12ce <__divsf3_pse+0x10>
    12e4:	33 d0       	rcall	.+102    	; 0x134c <__divsf3_pse+0x8e>
    12e6:	0e 2e       	mov	r0, r30
    12e8:	3a f0       	brmi	.+14     	; 0x12f8 <__divsf3_pse+0x3a>
    12ea:	e0 e8       	ldi	r30, 0x80	; 128
    12ec:	30 d0       	rcall	.+96     	; 0x134e <__divsf3_pse+0x90>
    12ee:	91 50       	subi	r25, 0x01	; 1
    12f0:	50 40       	sbci	r21, 0x00	; 0
    12f2:	e6 95       	lsr	r30
    12f4:	00 1c       	adc	r0, r0
    12f6:	ca f7       	brpl	.-14     	; 0x12ea <__divsf3_pse+0x2c>
    12f8:	29 d0       	rcall	.+82     	; 0x134c <__divsf3_pse+0x8e>
    12fa:	fe 2f       	mov	r31, r30
    12fc:	27 d0       	rcall	.+78     	; 0x134c <__divsf3_pse+0x8e>
    12fe:	66 0f       	add	r22, r22
    1300:	77 1f       	adc	r23, r23
    1302:	88 1f       	adc	r24, r24
    1304:	bb 1f       	adc	r27, r27
    1306:	26 17       	cp	r18, r22
    1308:	37 07       	cpc	r19, r23
    130a:	48 07       	cpc	r20, r24
    130c:	ab 07       	cpc	r26, r27
    130e:	b0 e8       	ldi	r27, 0x80	; 128
    1310:	09 f0       	breq	.+2      	; 0x1314 <__divsf3_pse+0x56>
    1312:	bb 0b       	sbc	r27, r27
    1314:	80 2d       	mov	r24, r0
    1316:	bf 01       	movw	r22, r30
    1318:	ff 27       	eor	r31, r31
    131a:	93 58       	subi	r25, 0x83	; 131
    131c:	5f 4f       	sbci	r21, 0xFF	; 255
    131e:	2a f0       	brmi	.+10     	; 0x132a <__divsf3_pse+0x6c>
    1320:	9e 3f       	cpi	r25, 0xFE	; 254
    1322:	51 05       	cpc	r21, r1
    1324:	68 f0       	brcs	.+26     	; 0x1340 <__divsf3_pse+0x82>
    1326:	b1 cd       	rjmp	.-1182   	; 0xe8a <__fp_inf>
    1328:	fb cd       	rjmp	.-1034   	; 0xf20 <__fp_szero>
    132a:	5f 3f       	cpi	r21, 0xFF	; 255
    132c:	ec f3       	brlt	.-6      	; 0x1328 <__divsf3_pse+0x6a>
    132e:	98 3e       	cpi	r25, 0xE8	; 232
    1330:	dc f3       	brlt	.-10     	; 0x1328 <__divsf3_pse+0x6a>
    1332:	86 95       	lsr	r24
    1334:	77 95       	ror	r23
    1336:	67 95       	ror	r22
    1338:	b7 95       	ror	r27
    133a:	f7 95       	ror	r31
    133c:	9f 5f       	subi	r25, 0xFF	; 255
    133e:	c9 f7       	brne	.-14     	; 0x1332 <__divsf3_pse+0x74>
    1340:	88 0f       	add	r24, r24
    1342:	91 1d       	adc	r25, r1
    1344:	96 95       	lsr	r25
    1346:	87 95       	ror	r24
    1348:	97 f9       	bld	r25, 7
    134a:	08 95       	ret
    134c:	e1 e0       	ldi	r30, 0x01	; 1
    134e:	66 0f       	add	r22, r22
    1350:	77 1f       	adc	r23, r23
    1352:	88 1f       	adc	r24, r24
    1354:	bb 1f       	adc	r27, r27
    1356:	62 17       	cp	r22, r18
    1358:	73 07       	cpc	r23, r19
    135a:	84 07       	cpc	r24, r20
    135c:	ba 07       	cpc	r27, r26
    135e:	20 f0       	brcs	.+8      	; 0x1368 <__divsf3_pse+0xaa>
    1360:	62 1b       	sub	r22, r18
    1362:	73 0b       	sbc	r23, r19
    1364:	84 0b       	sbc	r24, r20
    1366:	ba 0b       	sbc	r27, r26
    1368:	ee 1f       	adc	r30, r30
    136a:	88 f7       	brcc	.-30     	; 0x134e <__divsf3_pse+0x90>
    136c:	e0 95       	com	r30
    136e:	08 95       	ret

00001370 <__fp_mpack>:
    1370:	9f 3f       	cpi	r25, 0xFF	; 255
    1372:	31 f0       	breq	.+12     	; 0x1380 <__fp_mpack_finite+0xc>

00001374 <__fp_mpack_finite>:
    1374:	91 50       	subi	r25, 0x01	; 1
    1376:	20 f4       	brcc	.+8      	; 0x1380 <__fp_mpack_finite+0xc>
    1378:	87 95       	ror	r24
    137a:	77 95       	ror	r23
    137c:	67 95       	ror	r22
    137e:	b7 95       	ror	r27
    1380:	88 0f       	add	r24, r24
    1382:	91 1d       	adc	r25, r1
    1384:	96 95       	lsr	r25
    1386:	87 95       	ror	r24
    1388:	97 f9       	bld	r25, 7
    138a:	08 95       	ret

0000138c <__divmodhi4>:
    138c:	97 fb       	bst	r25, 7
    138e:	07 2e       	mov	r0, r23
    1390:	16 f4       	brtc	.+4      	; 0x1396 <__divmodhi4+0xa>
    1392:	00 94       	com	r0
    1394:	06 d0       	rcall	.+12     	; 0x13a2 <__divmodhi4_neg1>
    1396:	77 fd       	sbrc	r23, 7
    1398:	08 d0       	rcall	.+16     	; 0x13aa <__divmodhi4_neg2>
    139a:	89 d0       	rcall	.+274    	; 0x14ae <__udivmodhi4>
    139c:	07 fc       	sbrc	r0, 7
    139e:	05 d0       	rcall	.+10     	; 0x13aa <__divmodhi4_neg2>
    13a0:	3e f4       	brtc	.+14     	; 0x13b0 <__divmodhi4_exit>

000013a2 <__divmodhi4_neg1>:
    13a2:	90 95       	com	r25
    13a4:	81 95       	neg	r24
    13a6:	9f 4f       	sbci	r25, 0xFF	; 255
    13a8:	08 95       	ret

000013aa <__divmodhi4_neg2>:
    13aa:	70 95       	com	r23
    13ac:	61 95       	neg	r22
    13ae:	7f 4f       	sbci	r23, 0xFF	; 255

000013b0 <__divmodhi4_exit>:
    13b0:	08 95       	ret

000013b2 <__udivmodsi4>:
    13b2:	a1 e2       	ldi	r26, 0x21	; 33
    13b4:	1a 2e       	mov	r1, r26
    13b6:	aa 1b       	sub	r26, r26
    13b8:	bb 1b       	sub	r27, r27
    13ba:	fd 01       	movw	r30, r26
    13bc:	0d c0       	rjmp	.+26     	; 0x13d8 <__udivmodsi4_ep>

000013be <__udivmodsi4_loop>:
    13be:	aa 1f       	adc	r26, r26
    13c0:	bb 1f       	adc	r27, r27
    13c2:	ee 1f       	adc	r30, r30
    13c4:	ff 1f       	adc	r31, r31
    13c6:	a2 17       	cp	r26, r18
    13c8:	b3 07       	cpc	r27, r19
    13ca:	e4 07       	cpc	r30, r20
    13cc:	f5 07       	cpc	r31, r21
    13ce:	20 f0       	brcs	.+8      	; 0x13d8 <__udivmodsi4_ep>
    13d0:	a2 1b       	sub	r26, r18
    13d2:	b3 0b       	sbc	r27, r19
    13d4:	e4 0b       	sbc	r30, r20
    13d6:	f5 0b       	sbc	r31, r21

000013d8 <__udivmodsi4_ep>:
    13d8:	66 1f       	adc	r22, r22
    13da:	77 1f       	adc	r23, r23
    13dc:	88 1f       	adc	r24, r24
    13de:	99 1f       	adc	r25, r25
    13e0:	1a 94       	dec	r1
    13e2:	69 f7       	brne	.-38     	; 0x13be <__udivmodsi4_loop>
    13e4:	60 95       	com	r22
    13e6:	70 95       	com	r23
    13e8:	80 95       	com	r24
    13ea:	90 95       	com	r25
    13ec:	9b 01       	movw	r18, r22
    13ee:	ac 01       	movw	r20, r24
    13f0:	bd 01       	movw	r22, r26
    13f2:	cf 01       	movw	r24, r30
    13f4:	08 95       	ret

000013f6 <__umulhisi3>:
    13f6:	a2 9f       	mul	r26, r18
    13f8:	b0 01       	movw	r22, r0
    13fa:	b3 9f       	mul	r27, r19
    13fc:	c0 01       	movw	r24, r0
    13fe:	a3 9f       	mul	r26, r19
    1400:	70 0d       	add	r23, r0
    1402:	81 1d       	adc	r24, r1
    1404:	11 24       	eor	r1, r1
    1406:	91 1d       	adc	r25, r1
    1408:	b2 9f       	mul	r27, r18
    140a:	70 0d       	add	r23, r0
    140c:	81 1d       	adc	r24, r1
    140e:	11 24       	eor	r1, r1
    1410:	91 1d       	adc	r25, r1
    1412:	08 95       	ret

00001414 <__muluhisi3>:
    1414:	f0 df       	rcall	.-32     	; 0x13f6 <__umulhisi3>
    1416:	a5 9f       	mul	r26, r21
    1418:	90 0d       	add	r25, r0
    141a:	b4 9f       	mul	r27, r20
    141c:	90 0d       	add	r25, r0
    141e:	a4 9f       	mul	r26, r20
    1420:	80 0d       	add	r24, r0
    1422:	91 1d       	adc	r25, r1
    1424:	11 24       	eor	r1, r1
    1426:	08 95       	ret

00001428 <__ashldi3>:
    1428:	0f 93       	push	r16
    142a:	08 30       	cpi	r16, 0x08	; 8
    142c:	90 f0       	brcs	.+36     	; 0x1452 <__ashldi3+0x2a>
    142e:	98 2f       	mov	r25, r24
    1430:	87 2f       	mov	r24, r23
    1432:	76 2f       	mov	r23, r22
    1434:	65 2f       	mov	r22, r21
    1436:	54 2f       	mov	r21, r20
    1438:	43 2f       	mov	r20, r19
    143a:	32 2f       	mov	r19, r18
    143c:	22 27       	eor	r18, r18
    143e:	08 50       	subi	r16, 0x08	; 8
    1440:	f4 cf       	rjmp	.-24     	; 0x142a <__ashldi3+0x2>
    1442:	22 0f       	add	r18, r18
    1444:	33 1f       	adc	r19, r19
    1446:	44 1f       	adc	r20, r20
    1448:	55 1f       	adc	r21, r21
    144a:	66 1f       	adc	r22, r22
    144c:	77 1f       	adc	r23, r23
    144e:	88 1f       	adc	r24, r24
    1450:	99 1f       	adc	r25, r25
    1452:	0a 95       	dec	r16
    1454:	b2 f7       	brpl	.-20     	; 0x1442 <__ashldi3+0x1a>
    1456:	0f 91       	pop	r16
    1458:	08 95       	ret

0000145a <__adddi3>:
    145a:	2a 0d       	add	r18, r10
    145c:	3b 1d       	adc	r19, r11
    145e:	4c 1d       	adc	r20, r12
    1460:	5d 1d       	adc	r21, r13
    1462:	6e 1d       	adc	r22, r14
    1464:	7f 1d       	adc	r23, r15
    1466:	80 1f       	adc	r24, r16
    1468:	91 1f       	adc	r25, r17
    146a:	08 95       	ret

0000146c <__adddi3_s8>:
    146c:	00 24       	eor	r0, r0
    146e:	a7 fd       	sbrc	r26, 7
    1470:	00 94       	com	r0
    1472:	2a 0f       	add	r18, r26
    1474:	30 1d       	adc	r19, r0
    1476:	40 1d       	adc	r20, r0
    1478:	50 1d       	adc	r21, r0
    147a:	60 1d       	adc	r22, r0
    147c:	70 1d       	adc	r23, r0
    147e:	80 1d       	adc	r24, r0
    1480:	90 1d       	adc	r25, r0
    1482:	08 95       	ret

00001484 <__cmpdi2>:
    1484:	2a 15       	cp	r18, r10
    1486:	3b 05       	cpc	r19, r11
    1488:	4c 05       	cpc	r20, r12
    148a:	5d 05       	cpc	r21, r13
    148c:	6e 05       	cpc	r22, r14
    148e:	7f 05       	cpc	r23, r15
    1490:	80 07       	cpc	r24, r16
    1492:	91 07       	cpc	r25, r17
    1494:	08 95       	ret

00001496 <__cmpdi2_s8>:
    1496:	00 24       	eor	r0, r0
    1498:	a7 fd       	sbrc	r26, 7
    149a:	00 94       	com	r0
    149c:	2a 17       	cp	r18, r26
    149e:	30 05       	cpc	r19, r0
    14a0:	40 05       	cpc	r20, r0
    14a2:	50 05       	cpc	r21, r0
    14a4:	60 05       	cpc	r22, r0
    14a6:	70 05       	cpc	r23, r0
    14a8:	80 05       	cpc	r24, r0
    14aa:	90 05       	cpc	r25, r0
    14ac:	08 95       	ret

000014ae <__udivmodhi4>:
    14ae:	aa 1b       	sub	r26, r26
    14b0:	bb 1b       	sub	r27, r27
    14b2:	51 e1       	ldi	r21, 0x11	; 17
    14b4:	07 c0       	rjmp	.+14     	; 0x14c4 <__udivmodhi4_ep>

000014b6 <__udivmodhi4_loop>:
    14b6:	aa 1f       	adc	r26, r26
    14b8:	bb 1f       	adc	r27, r27
    14ba:	a6 17       	cp	r26, r22
    14bc:	b7 07       	cpc	r27, r23
    14be:	10 f0       	brcs	.+4      	; 0x14c4 <__udivmodhi4_ep>
    14c0:	a6 1b       	sub	r26, r22
    14c2:	b7 0b       	sbc	r27, r23

000014c4 <__udivmodhi4_ep>:
    14c4:	88 1f       	adc	r24, r24
    14c6:	99 1f       	adc	r25, r25
    14c8:	5a 95       	dec	r21
    14ca:	a9 f7       	brne	.-22     	; 0x14b6 <__udivmodhi4_loop>
    14cc:	80 95       	com	r24
    14ce:	90 95       	com	r25
    14d0:	bc 01       	movw	r22, r24
    14d2:	cd 01       	movw	r24, r26
    14d4:	08 95       	ret

000014d6 <__itoa_ncheck>:
    14d6:	bb 27       	eor	r27, r27
    14d8:	4a 30       	cpi	r20, 0x0A	; 10
    14da:	31 f4       	brne	.+12     	; 0x14e8 <__itoa_ncheck+0x12>
    14dc:	99 23       	and	r25, r25
    14de:	22 f4       	brpl	.+8      	; 0x14e8 <__itoa_ncheck+0x12>
    14e0:	bd e2       	ldi	r27, 0x2D	; 45
    14e2:	90 95       	com	r25
    14e4:	81 95       	neg	r24
    14e6:	9f 4f       	sbci	r25, 0xFF	; 255
    14e8:	01 c0       	rjmp	.+2      	; 0x14ec <__utoa_common>

000014ea <__utoa_ncheck>:
    14ea:	bb 27       	eor	r27, r27

000014ec <__utoa_common>:
    14ec:	fb 01       	movw	r30, r22
    14ee:	55 27       	eor	r21, r21
    14f0:	aa 27       	eor	r26, r26
    14f2:	88 0f       	add	r24, r24
    14f4:	99 1f       	adc	r25, r25
    14f6:	aa 1f       	adc	r26, r26
    14f8:	a4 17       	cp	r26, r20
    14fa:	10 f0       	brcs	.+4      	; 0x1500 <__utoa_common+0x14>
    14fc:	a4 1b       	sub	r26, r20
    14fe:	83 95       	inc	r24
    1500:	50 51       	subi	r21, 0x10	; 16
    1502:	b9 f7       	brne	.-18     	; 0x14f2 <__utoa_common+0x6>
    1504:	a0 5d       	subi	r26, 0xD0	; 208
    1506:	aa 33       	cpi	r26, 0x3A	; 58
    1508:	08 f0       	brcs	.+2      	; 0x150c <__utoa_common+0x20>
    150a:	a9 5d       	subi	r26, 0xD9	; 217
    150c:	a1 93       	st	Z+, r26
    150e:	00 97       	sbiw	r24, 0x00	; 0
    1510:	79 f7       	brne	.-34     	; 0x14f0 <__utoa_common+0x4>
    1512:	b1 11       	cpse	r27, r1
    1514:	b1 93       	st	Z+, r27
    1516:	11 92       	st	Z+, r1
    1518:	cb 01       	movw	r24, r22
    151a:	00 c0       	rjmp	.+0      	; 0x151c <strrev>

0000151c <strrev>:
    151c:	dc 01       	movw	r26, r24
    151e:	fc 01       	movw	r30, r24
    1520:	67 2f       	mov	r22, r23
    1522:	71 91       	ld	r23, Z+
    1524:	77 23       	and	r23, r23
    1526:	e1 f7       	brne	.-8      	; 0x1520 <strrev+0x4>
    1528:	32 97       	sbiw	r30, 0x02	; 2
    152a:	04 c0       	rjmp	.+8      	; 0x1534 <strrev+0x18>
    152c:	7c 91       	ld	r23, X
    152e:	6d 93       	st	X+, r22
    1530:	70 83       	st	Z, r23
    1532:	62 91       	ld	r22, -Z
    1534:	ae 17       	cp	r26, r30
    1536:	bf 07       	cpc	r27, r31
    1538:	c8 f3       	brcs	.-14     	; 0x152c <strrev+0x10>
    153a:	08 95       	ret

0000153c <_exit>:
    153c:	f8 94       	cli

0000153e <__stop_program>:
    153e:	ff cf       	rjmp	.-2      	; 0x153e <__stop_program>
